
theory Axiomatic_Padding 
                           use why3.Bool.Bool 
                           
end

theory Int32_of_Int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int32.t = (Int32.of_int (Int16.to_int n))
  
end

theory Bit_int32_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int32_of_Int16
  
  use export enum.Bit_int32_of_bit_int16
  
end

theory Int64_of_Int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int64.t = (Int64.of_int (Int16.to_int n))
  
end

theory Bit_int64_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int64_of_Int16
  
  use export enum.Bit_int64_of_bit_int16
  
end

theory Int64_of_Int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int64.t = (Int64.of_int (Int32.to_int n))
  
end

theory Bit_int64_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int64_of_Int32
  
  use export enum.Bit_int64_of_bit_int32
  
end

theory Int8_of_Int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Int8.t = (Int8.of_int (Int16.to_int n))
  
end

theory Bit_int8_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Int8_of_Int16
  
  use export enum.Bit_int8_of_bit_int16
  
end

theory Int8_of_Int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int8.t = (Int8.of_int (Int32.to_int n))
  
end

theory Bit_int8_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int8_of_Int32
  
  use export enum.Bit_int8_of_bit_int32
  
end

theory Int8_of_Int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int8.t = (Int8.of_int (Int64.to_int n))
  
end

theory Bit_int8_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int8_of_Int64
  
  use export enum.Bit_int8_of_bit_int64
  
end

theory Uint16_of_Int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint16.t = (Uint16.of_int (Int16.to_int n))
  
end

theory Bit_uint16_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint16_of_Int16
  
  use export enum.Bit_uint16_of_bit_int16
  
end

theory Uint16_of_Int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint16.t = (Uint16.of_int (Int32.to_int n))
  
end

theory Bit_uint16_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint16_of_Int32
  
  use export enum.Bit_uint16_of_bit_int32
  
end

theory Uint16_of_Int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint16.t = (Uint16.of_int (Int64.to_int n))
  
end

theory Bit_uint16_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint16_of_Int64
  
  use export enum.Bit_uint16_of_bit_int64
  
end

theory Uint16_of_Int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint16.t = (Uint16.of_int (Int8.to_int n))
  
end

theory Bit_uint16_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint16_of_Int8
  
  use export enum.Bit_uint16_of_bit_int8
  
end

theory Uint32_of_Int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint32.t = (Uint32.of_int (Int16.to_int n))
  
end

theory Bit_uint32_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint32_of_Int16
  
  use export enum.Bit_uint32_of_bit_int16
  
end

theory Uint32_of_Int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint32.t = (Uint32.of_int (Int32.to_int n))
  
end

theory Bit_uint32_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint32_of_Int32
  
  use export enum.Bit_uint32_of_bit_int32
  
end

theory Uint32_of_Int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint32.t = (Uint32.of_int (Int64.to_int n))
  
end

theory Bit_uint32_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint32_of_Int64
  
  use export enum.Bit_uint32_of_bit_int64
  
end

theory Uint32_of_Int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint32.t = (Uint32.of_int (Int8.to_int n))
  
end

theory Bit_uint32_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint32_of_Int8
  
  use export enum.Bit_uint32_of_bit_int8
  
end

theory Uint32_of_Uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint32.t = (Uint32.of_int (Uint16.to_int n))
  
end

theory Bit_uint32_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint16
  
  use export enum.Bit_uint32_of_bit_uint16
  
end

theory Uint64_of_Int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint64.t = (Uint64.of_int (Int16.to_int n))
  
end

theory Bit_uint64_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint64_of_Int16
  
  use export enum.Bit_uint64_of_bit_int16
  
end

theory Uint64_of_Int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint64.t = (Uint64.of_int (Int32.to_int n))
  
end

theory Bit_uint64_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint64_of_Int32
  
  use export enum.Bit_uint64_of_bit_int32
  
end

theory Uint64_of_Int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint64.t = (Uint64.of_int (Int64.to_int n))
  
end

theory Bit_uint64_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint64_of_Int64
  
  use export enum.Bit_uint64_of_bit_int64
  
end

theory Uint64_of_Int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint64.t = (Uint64.of_int (Int8.to_int n))
  
end

theory Bit_uint64_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint64_of_Int8
  
  use export enum.Bit_uint64_of_bit_int8
  
end

theory Uint64_of_Uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint64.t = (Uint64.of_int (Uint16.to_int n))
  
end

theory Bit_uint64_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint16
  
  use export enum.Bit_uint64_of_bit_uint16
  
end

theory Uint64_of_Uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint64.t = (Uint64.of_int (Uint32.to_int n))
  
end

theory Bit_uint64_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint32
  
  use export enum.Bit_uint64_of_bit_uint32
  
end

theory Uint8_of_Int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Uint8.t = (Uint8.of_int (Int16.to_int n))
  
end

theory Bit_uint8_of_Bit_int16

  use why3.Bool.Bool 
  
  use export Uint8_of_Int16
  
  use export enum.Bit_uint8_of_bit_int16
  
end

theory Uint8_of_Int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Uint8.t = (Uint8.of_int (Int32.to_int n))
  
end

theory Bit_uint8_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Uint8_of_Int32
  
  use export enum.Bit_uint8_of_bit_int32
  
end

theory Uint8_of_Int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Uint8.t = (Uint8.of_int (Int64.to_int n))
  
end

theory Bit_uint8_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Uint8_of_Int64
  
  use export enum.Bit_uint8_of_bit_int64
  
end

theory Uint8_of_Int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Uint8.t = (Uint8.of_int (Int8.to_int n))
  
end

theory Bit_uint8_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Uint8_of_Int8
  
  use export enum.Bit_uint8_of_bit_int8
  
end

theory Uint8_of_Uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Uint8.t = (Uint8.of_int (Uint16.to_int n))
  
end

theory Bit_uint8_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint16
  
  use export enum.Bit_uint8_of_bit_uint16
  
end

theory Uint8_of_Uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint8.t = (Uint8.of_int (Uint32.to_int n))
  
end

theory Bit_uint8_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint32
  
  use export enum.Bit_uint8_of_bit_uint32
  
end

theory Uint8_of_Uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint8.t = (Uint8.of_int (Uint64.to_int n))
  
end

theory Bit_uint8_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint8_of_Uint64
  
  use export enum.Bit_uint8_of_bit_uint64
  
end

theory Int16_of_Int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Int16.t = (Int16.of_int (Int32.to_int n))
  
end

theory Bit_int16_of_Bit_int32

  use why3.Bool.Bool 
  
  use export Int16_of_Int32
  
  use export enum.Bit_int16_of_bit_int32
  
end

theory Int16_of_Int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int16.t = (Int16.of_int (Int64.to_int n))
  
end

theory Bit_int16_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int16_of_Int64
  
  use export enum.Bit_int16_of_bit_int64
  
end

theory Int32_of_Int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Int32.t = (Int32.of_int (Int64.to_int n))
  
end

theory Bit_int32_of_Bit_int64

  use why3.Bool.Bool 
  
  use export Int32_of_Int64
  
  use export enum.Bit_int32_of_bit_int64
  
end

theory Int16_of_Int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int16.t = (Int16.of_int (Int8.to_int n))
  
end

theory Bit_int16_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int16_of_Int8
  
  use export enum.Bit_int16_of_bit_int8
  
end

theory Int32_of_Int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int32.t = (Int32.of_int (Int8.to_int n))
  
end

theory Bit_int32_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int32_of_Int8
  
  use export enum.Bit_int32_of_bit_int8
  
end

theory Int64_of_Int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Int64.t = (Int64.of_int (Int8.to_int n))
  
end

theory Bit_int64_of_Bit_int8

  use why3.Bool.Bool 
  
  use export Int64_of_Int8
  
  use export enum.Bit_int64_of_bit_int8
  
end

theory Int16_of_Uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int16.t = (Int16.of_int (Uint16.to_int n))
  
end

theory Bit_int16_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int16_of_Uint16
  
  use export enum.Bit_int16_of_bit_uint16
  
end

theory Int32_of_Uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int32.t = (Int32.of_int (Uint16.to_int n))
  
end

theory Bit_int32_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int32_of_Uint16
  
  use export enum.Bit_int32_of_bit_uint16
  
end

theory Int64_of_Uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int64.t = (Int64.of_int (Uint16.to_int n))
  
end

theory Bit_int64_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int64_of_Uint16
  
  use export enum.Bit_int64_of_bit_uint16
  
end

theory Int8_of_Uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Int8.t = (Int8.of_int (Uint16.to_int n))
  
end

theory Bit_int8_of_Bit_uint16

  use why3.Bool.Bool 
  
  use export Int8_of_Uint16
  
  use export enum.Bit_int8_of_bit_uint16
  
end

theory Int16_of_Uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int16.t = (Int16.of_int (Uint32.to_int n))
  
end

theory Bit_int16_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int16_of_Uint32
  
  use export enum.Bit_int16_of_bit_uint32
  
end

theory Int32_of_Uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int32.t = (Int32.of_int (Uint32.to_int n))
  
end

theory Bit_int32_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int32_of_Uint32
  
  use export enum.Bit_int32_of_bit_uint32
  
end

theory Int64_of_Uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int64.t = (Int64.of_int (Uint32.to_int n))
  
end

theory Bit_int64_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int64_of_Uint32
  
  use export enum.Bit_int64_of_bit_uint32
  
end

theory Int8_of_Uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Int8.t = (Int8.of_int (Uint32.to_int n))
  
end

theory Bit_int8_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Int8_of_Uint32
  
  use export enum.Bit_int8_of_bit_uint32
  
end

theory Uint16_of_Uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Uint16.t = (Uint16.of_int (Uint32.to_int n))
  
end

theory Bit_uint16_of_Bit_uint32

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint32
  
  use export enum.Bit_uint16_of_bit_uint32
  
end

theory Int16_of_Uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int16.t = (Int16.of_int (Uint64.to_int n))
  
end

theory Bit_int16_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int16_of_Uint64
  
  use export enum.Bit_int16_of_bit_uint64
  
end

theory Int32_of_Uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int32.t = (Int32.of_int (Uint64.to_int n))
  
end

theory Bit_int32_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int32_of_Uint64
  
  use export enum.Bit_int32_of_bit_uint64
  
end

theory Int64_of_Uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int64.t = (Int64.of_int (Uint64.to_int n))
  
end

theory Bit_int64_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int64_of_Uint64
  
  use export enum.Bit_int64_of_bit_uint64
  
end

theory Int8_of_Uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Int8.t = (Int8.of_int (Uint64.to_int n))
  
end

theory Bit_int8_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Int8_of_Uint64
  
  use export enum.Bit_int8_of_bit_uint64
  
end

theory Uint16_of_Uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint16.t = (Uint16.of_int (Uint64.to_int n))
  
end

theory Bit_uint16_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint64
  
  use export enum.Bit_uint16_of_bit_uint64
  
end

theory Uint32_of_Uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Uint32.t = (Uint32.of_int (Uint64.to_int n))
  
end

theory Bit_uint32_of_Bit_uint64

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint64
  
  use export enum.Bit_uint32_of_bit_uint64
  
end

theory Int16_of_Uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int16.t = (Int16.of_int (Uint8.to_int n))
  
end

theory Bit_int16_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int16_of_Uint8
  
  use export enum.Bit_int16_of_bit_uint8
  
end

theory Int32_of_Uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int32.t = (Int32.of_int (Uint8.to_int n))
  
end

theory Bit_int32_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int32_of_Uint8
  
  use export enum.Bit_int32_of_bit_uint8
  
end

theory Int64_of_Uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int64.t = (Int64.of_int (Uint8.to_int n))
  
end

theory Bit_int64_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int64_of_Uint8
  
  use export enum.Bit_int64_of_bit_uint8
  
end

theory Int8_of_Uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Int8.t = (Int8.of_int (Uint8.to_int n))
  
end

theory Bit_int8_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Int8_of_Uint8
  
  use export enum.Bit_int8_of_bit_uint8
  
end

theory Uint16_of_Uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint16.t = (Uint16.of_int (Uint8.to_int n))
  
end

theory Bit_uint16_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint16_of_Uint8
  
  use export enum.Bit_uint16_of_bit_uint8
  
end

theory Uint32_of_Uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint32.t = (Uint32.of_int (Uint8.to_int n))
  
end

theory Bit_uint32_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint32_of_Uint8
  
  use export enum.Bit_uint32_of_bit_uint8
  
end

theory Uint64_of_Uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Uint64.t = (Uint64.of_int (Uint8.to_int n))
  
end

theory Bit_uint64_of_Bit_uint8

  use why3.Bool.Bool 
  
  use export Uint64_of_Uint8
  
  use export enum.Bit_uint64_of_bit_uint8
  
end

module Unsafe_uint8

  use why3.Bool.Bool 
  
  use import enum.Uint8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint8

  use why3.Bool.Bool 
  
  use import enum.Uint8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint8

  use why3.Bool.Bool 
  
  use import enum.Bit_uint8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint8

  use why3.Bool.Bool 
  
  use import enum.Bit_uint8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint64

  use why3.Bool.Bool 
  
  use import enum.Uint64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint64

  use why3.Bool.Bool 
  
  use import enum.Uint64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint64

  use why3.Bool.Bool 
  
  use import enum.Bit_uint64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint64

  use why3.Bool.Bool 
  
  use import enum.Bit_uint64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint32

  use why3.Bool.Bool 
  
  use import enum.Uint32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint32

  use why3.Bool.Bool 
  
  use import enum.Uint32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint32

  use why3.Bool.Bool 
  
  use import enum.Bit_uint32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint32

  use why3.Bool.Bool 
  
  use import enum.Bit_uint32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_uint16

  use why3.Bool.Bool 
  
  use import enum.Uint16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_uint16

  use why3.Bool.Bool 
  
  use import enum.Uint16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_uint16

  use why3.Bool.Bool 
  
  use import enum.Bit_uint16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_uint16

  use why3.Bool.Bool 
  
  use import enum.Bit_uint16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int8

  use why3.Bool.Bool 
  
  use import enum.Int8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int8

  use why3.Bool.Bool 
  
  use import enum.Int8 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int8

  use why3.Bool.Bool 
  
  use import enum.Bit_int8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int8

  use why3.Bool.Bool 
  
  use import enum.Bit_int8 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int64

  use why3.Bool.Bool 
  
  use import enum.Int64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int64

  use why3.Bool.Bool 
  
  use import enum.Int64 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int64

  use why3.Bool.Bool 
  
  use import enum.Bit_int64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int64

  use why3.Bool.Bool 
  
  use import enum.Bit_int64 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int32

  use why3.Bool.Bool 
  
  use import enum.Int32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int32

  use why3.Bool.Bool 
  
  use import enum.Int32 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int32

  use why3.Bool.Bool 
  
  use import enum.Bit_int32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int32

  use why3.Bool.Bool 
  
  use import enum.Bit_int32 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

module Unsafe_int16

  use why3.Bool.Bool 
  
  use import enum.Int16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_int16

  use why3.Bool.Bool 
  
  use import enum.Int16 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Unsafe_bit_int16

  use why3.Bool.Bool 
  
  use import enum.Bit_int16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Unsafe_bit_enum with namespace . = .
  
end

module Safe_bit_int16

  use why3.Bool.Bool 
  
  use import enum.Bit_int16 
  
  clone export enum.Generic_bit_enum with namespace . = .
  
  clone export enum.Safe_bit_enum with namespace . = .
  
end

theory Enum__bool_aux

  use why3.Bool.Bool 
  
  function max  : int = (1)
  
  function min  : int = (0)
  
end

theory Enum__bool

  use why3.Bool.Bool 
  
  use import Enum__bool_aux 
  
  clone export enum.Enum with constant min = min, constant max = max
  
end

module Unsafe_enum__bool

  use why3.Bool.Bool 
  
  use import Enum__bool 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Unsafe_enum with namespace . = .
  
end

module Safe_enum__bool

  use why3.Bool.Bool 
  
  use import Enum__bool 
  
  clone export enum.Generic_enum with namespace . = .
  
  clone export enum.Safe_enum with namespace . = .
  
end

module Globals_simple

  use why3.Bool.Bool 
  
end

theory Root_voidP

  use why3.Bool.Bool 
  
  use import core.Jessie_voidp 
  
end

module Root_voidP_safe

  use why3.Bool.Bool 
  
end

module Root_voidP_unsafe

  use why3.Bool.Bool 
  
end

module Root_unsigned_charP_safe

  use why3.Bool.Bool 
  
end

module Root_unsigned_charP_unsafe

  use why3.Bool.Bool 
  
end

module Root_char_xP_safe

  use why3.Bool.Bool 
  
end

module Root_char_xP_unsafe

  use why3.Bool.Bool 
  
end

theory Root_char_xP

  use why3.Bool.Bool 
  
  type char_xP 
  
end

module Safe_enum__bool_of_Safe_int32

  use enum.Int32 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Enum__bool.t
   requires { (Enum__bool.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Enum__bool.to_int result) (Int32.to_int n)) }
  
end

module Exceptions

  use why3.Bool.Bool 
  
  exception Goto_switch_0_break_exc unit
  
  exception Loop_continue_exc unit
  
  exception Loop_exit_exc unit
  
  exception Return_label_exc unit
  
end

module Safe_int8_of_Safe_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int8.t
   requires { (Int8.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int32.to_int n)) }
  
end

module Function_escape_null_safety
#"/home/maria/ded-rep/escape_string_mem.c" 34 12 63#
"expl:escape_null, safety"

  use enum.Uint8 
  
  use Safe_uint8 
  
  use Safe_int8_of_Safe_int32 
  
  use Safe_int32 
  
  use Safe_enum__bool_of_Safe_int32 
  
  use Safe_enum__bool 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_upd_safe 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_sub_pointer_safe 
  
  use import core.Jessie_shift_safe 
  
  use import core.Jessie_return 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_charp_tag_id 
  
  use import core.Jessie_any_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_acc_safe 
  
  use enum.Int8 
  
  use import int.Int 
  
  use import Exceptions 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  let escape_null #"/home/maria/ded-rep/escape_string_mem.c" 34 12 63#
  "expl:Function escape_null, safety" =
  fun
   (c_0 : Uint8.t) (dst_0 : (pointer char_xP)) (end_1 : (pointer voidP))
   (charP_charM_end_1_4 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_0_3
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_0_3_alloc_table :
   (alloc_table char_xP)) (voidP_end_1_4_alloc_table : (alloc_table voidP))
   (voidP_end_1_4_tag_table : (tag_table voidP)) 
   requires {
   (((allocated voidP_end_1_4_alloc_table end_1) ->
     (((=) (typeof voidP_end_1_4_tag_table end_1) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_1_4_alloc_table end_1) i) /\
       ((<) i (offset_max voidP_end_1_4_alloc_table end_1))) ->
       ((=) (typeof voidP_end_1_4_tag_table (shift end_1 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 4 10 21#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=) (offset_min voidP_end_1_4_alloc_table end_1) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=) (offset_max voidP_end_1_4_alloc_table end_1) (0)))
    /\ (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 4 25 36#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=) (offset_min char_xP_dst_0_3_alloc_table dst_0) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=) (offset_max char_xP_dst_0_3_alloc_table dst_0) (0)))
    /\ (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 5 6 27#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=)
     (offset_min voidP_end_1_4_alloc_table
     (select !char_xP_char_xM_dst_0_3 dst_0)) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=)
     (offset_max voidP_end_1_4_alloc_table
     (select !char_xP_char_xM_dst_0_3 dst_0)) (1)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040# ((=) true true)) /\
    (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 6 10 45#
   (same_block (select !char_xP_char_xM_dst_0_3 dst_0) end_1))))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_enum__bool.any_  () ) in
   try
    begin
    (let out = ref (any_pointer  () : (pointer voidP)) in
    (let __retres = ref (Safe_enum__bool.any_  () ) in
    try
     begin
     (out :=
      (let _jessie_128 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 36 13 17#
      "expl:Pointer dereference"
      (acc  char_xP_dst_0_3_alloc_table !char_xP_char_xM_dst_0_3 dst_0 )) in
      begin
      (assert {
      (#"/home/maria/ded-rep/escape_string_mem.c" 36 1 5#
      "expl:Pointer index bounds" true) }); _jessie_128 end));
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 38 5 6#
      (Safe_uint8.(<>)  c_0
       (#"escape_string_mem.jc" 93 37 49# "expl:Integer cast"
       (Safe_uint8.of_int (0))) ))
      then
       begin
       (__retres :=
        (let _jessie_129 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 39 9 14#
        "expl:Integer cast"
        (Safe_enum__bool_of_Safe_int32.cast 
         (#"escape_string_mem.jc" 94 38 50# "expl:Integer cast"
         (Safe_int32.of_int (0))) )) in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 39 2 15#
        "expl:Pointer index bounds" true) }); _jessie_129 end));
        (raise (Return_label_exc ())) end else ());
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 41 5 14#
      ((<)  (#"escape_string_mem.jc" 98 20 31# (sub_pointer_  !out end_1 ))
       (0) ))
      then
       (let _jessie_131 =
       (let _jessie_130 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 42 12 13#
       "expl:Integer cast"
       (Safe_int8_of_Safe_int32.cast 
        (#"escape_string_mem.jc" 99 53 66# "expl:Integer cast"
        (Safe_int32.of_int (92))) )) in
       begin
       (assert {
       (#"/home/maria/ded-rep/escape_string_mem.c" 42 2 13#
       "expl:Pointer index bounds" true) }); _jessie_130 end) in
       (let _jessie_132 = !out in
       (let _jessie_133 = (0) in
       (let _jessie_134 = _jessie_132 in
       (#"/home/maria/ded-rep/escape_string_mem.c" 42 2 13#
       "expl:Pointer dereference"
       (upd  voidP_end_1_4_alloc_table charP_charM_end_1_4 _jessie_132
        _jessie_131 )))))) else ());
      begin
      (out :=
       (let _jessie_122 =
       (shift_typesafe  !out
        (Safe_int32.to_int 
         (#"escape_string_mem.jc" 100 38 50# "expl:Integer cast"
         (Safe_int32.of_int (1))) ) ) in
       begin
       (assert {
       (#"/home/maria/ded-rep/escape_string_mem.c" 43 1 6#
       "expl:Pointer index bounds" true) }); _jessie_122 end));
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 44 5 14#
       ((<)  (#"escape_string_mem.jc" 101 21 32# (sub_pointer_  !out end_1 ))
        (0) ))
       then
        (let _jessie_124 =
        (let _jessie_123 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 45 11 12#
        "expl:Integer cast"
        (Safe_int8_of_Safe_int32.cast 
         (#"escape_string_mem.jc" 102 55 68# "expl:Integer cast"
         (Safe_int32.of_int (48))) )) in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 45 2 12#
        "expl:Pointer index bounds" true) }); _jessie_123 end) in
        (let _jessie_125 = !out in
        (let _jessie_126 = (0) in
        (let _jessie_127 = _jessie_125 in
        (#"/home/maria/ded-rep/escape_string_mem.c" 45 2 12#
        "expl:Pointer dereference"
        (upd  voidP_end_1_4_alloc_table charP_charM_end_1_4 _jessie_125
         _jessie_124 )))))) else ());
       begin
       (out :=
        (let _jessie_121 =
        (shift_typesafe  !out
         (Safe_int32.to_int 
          (#"escape_string_mem.jc" 103 38 50# "expl:Integer cast"
          (Safe_int32.of_int (1))) ) ) in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 46 1 6#
        "expl:Pointer index bounds" true) }); _jessie_121 end));
        begin
        (let _jessie_117 =
        (let _jessie_116 = !out in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 48 1 11#
        "expl:Pointer index bounds" true) }); _jessie_116 end) in
        (let _jessie_118 = dst_0 in
        (let _jessie_119 = (0) in
        (let _jessie_120 = _jessie_118 in
        (#"/home/maria/ded-rep/escape_string_mem.c" 48 1 11#
        "expl:Pointer dereference"
        (upd  char_xP_dst_0_3_alloc_table char_xP_char_xM_dst_0_3 _jessie_118
         _jessie_117 ))))));
         begin
         (__retres :=
          (let _jessie_115 =
          (#"/home/maria/ded-rep/escape_string_mem.c" 49 8 12#
          "expl:Integer cast"
          (Safe_enum__bool_of_Safe_int32.cast 
           (#"escape_string_mem.jc" 105 37 49# "expl:Integer cast"
           (Safe_int32.of_int (1))) )) in
          begin
          (assert {
          (#"/home/maria/ded-rep/escape_string_mem.c" 49 1 13#
          "expl:Pointer index bounds" true) }); _jessie_115 end));
          (raise (Return_label_exc ())) end end end end end with
     Return_label_exc _jessie_1 ->
     'Return_label:
     'Return_label:
     begin
     (return :=
      (let _jessie_135 = !__retres in
      begin
      (assert {
      (#"escape_string_mem.jc" 107 7 22# "expl:Pointer index bounds" true) });
       _jessie_135 end)); (raise Return) end end)); absurd  end with Return
    -> !return end)
  
end

module Unsafe_enum__bool_of_Unsafe_int32

  use enum.Int32 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Enum__bool.t
   requires { true }
   ensures { ((=) (Enum__bool.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int32.to_int n)) }
  
end

module Function_escape_null_behaviors
#"/home/maria/ded-rep/escape_string_mem.c" 34 12 63#
"expl:escape_null, behaviors"

  use Unsafe_uint8 
  
  use Unsafe_int8_of_Unsafe_int32 
  
  use Unsafe_int32 
  
  use Unsafe_enum__bool_of_Unsafe_int32 
  
  use Unsafe_enum__bool 
  
  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_upd_unsafe 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_sub_pointer_unsafe 
  
  use import core.Jessie_shift_unsafe 
  
  use import core.Jessie_return 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_charp_tag_id 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_any_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_acc_unsafe 
  
  use enum.Int8 
  
  use import int.Int 
  
  use import Exceptions 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  let escape_null_ensures_default
  #"/home/maria/ded-rep/escape_string_mem.c" 34 12 63#
  "expl:Function escape_null, default behavior" =
  fun
   (c_0 : Uint8.t) (dst_0 : (pointer char_xP)) (end_1 : (pointer voidP))
   (charP_charM_end_1_4 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_0_3
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_0_3_alloc_table :
   (alloc_table char_xP)) (voidP_end_1_4_alloc_table : (alloc_table voidP))
   (voidP_end_1_4_tag_table : (tag_table voidP)) 
   requires {
   (((allocated voidP_end_1_4_alloc_table end_1) ->
     (((=) (typeof voidP_end_1_4_tag_table end_1) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_1_4_alloc_table end_1) i) /\
       ((<) i (offset_max voidP_end_1_4_alloc_table end_1))) ->
       ((=) (typeof voidP_end_1_4_tag_table (shift end_1 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 4 10 21#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=) (offset_min voidP_end_1_4_alloc_table end_1) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=) (offset_max voidP_end_1_4_alloc_table end_1) (0)))
    /\ (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 4 25 36#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=) (offset_min char_xP_dst_0_3_alloc_table dst_0) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=) (offset_max char_xP_dst_0_3_alloc_table dst_0) (0)))
    /\ (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 5 6 27#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=)
     (offset_min voidP_end_1_4_alloc_table
     (select !char_xP_char_xM_dst_0_3 dst_0)) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=)
     (offset_max voidP_end_1_4_alloc_table
     (select !char_xP_char_xM_dst_0_3 dst_0)) (1)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040# ((=) true true)) /\
    (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 6 10 45#
   (same_block (select !char_xP_char_xM_dst_0_3 dst_0) end_1))))))))) }
   ensures { ("expl:Postcondition" ("expl:Ensures clause" true)) }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out = ref (any_pointer  () : (pointer voidP)) in
    (let __retres = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     (out := (acc  !char_xP_char_xM_dst_0_3 dst_0 ));
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 38 5 6#
      (Unsafe_uint8.(<>)  c_0
       (#"escape_string_mem.jc" 93 37 49# "expl:Integer cast"
       (Unsafe_uint8.of_int (0))) ))
      then
       begin
       (__retres :=
        (#"/home/maria/ded-rep/escape_string_mem.c" 39 9 14#
        "expl:Integer cast"
        (Unsafe_enum__bool_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 94 38 50# "expl:Integer cast"
         (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
      else ());
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 41 5 14#
      ((<)  (#"escape_string_mem.jc" 98 20 31# (sub_pointer_  !out end_1 ))
       (0) ))
      then
       (let _jessie_26 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 42 12 13#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (#"escape_string_mem.jc" 99 53 66# "expl:Integer cast"
        (Unsafe_int32.of_int (92))) )) in
       (let _jessie_27 = !out in
       (let _jessie_28 = (0) in
       (let _jessie_29 = _jessie_27 in
       (upd  charP_charM_end_1_4 _jessie_29 _jessie_26 ))))) else ());
      begin
      (out :=
       (shift_  !out
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 100 38 50# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 44 5 14#
       ((<)  (#"escape_string_mem.jc" 101 21 32# (sub_pointer_  !out end_1 ))
        (0) ))
       then
        (let _jessie_19 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 45 11 12#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 102 55 68# "expl:Integer cast"
         (Unsafe_int32.of_int (48))) )) in
        (let _jessie_20 = !out in
        (let _jessie_21 = (0) in
        (let _jessie_22 = _jessie_20 in
        (upd  charP_charM_end_1_4 _jessie_22 _jessie_19 ))))) else ());
       begin
       (out :=
        (shift_  !out
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 103 38 50# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        (let _jessie_12 = !out in
        (let _jessie_13 = dst_0 in
        (let _jessie_14 = (0) in
        (let _jessie_15 = _jessie_13 in
        (upd  char_xP_char_xM_dst_0_3 _jessie_15 _jessie_12 )))));
         begin
         (__retres :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 49 8 12#
          "expl:Integer cast"
          (Unsafe_enum__bool_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 105 37 49# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ))); (raise (Return_label_exc ())) end
        end end end end with Return_label_exc _jessie_1 ->
     'Return_label:
     'Return_label: begin (return := !__retres); (raise Return) end end));
     absurd  end with Return -> !return end)
  
  let escape_null_ensures_is_empty
  #"/home/maria/ded-rep/escape_string_mem.c" 34 12 63#
  "expl:Function escape_null, behavior is_empty" =
  fun
   (c_0 : Uint8.t) (dst_0 : (pointer char_xP)) (end_1 : (pointer voidP))
   (charP_charM_end_1_4 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_0_3
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_0_3_alloc_table :
   (alloc_table char_xP)) (voidP_end_1_4_alloc_table : (alloc_table voidP))
   (voidP_end_1_4_tag_table : (tag_table voidP)) 
   requires {
   ((Uint8.(<>) c_0 (#"escape_string_mem.jc" 53 18 30# "expl:Integer cast"
    (Uint8.of_int (0))))
   /\
   (((allocated voidP_end_1_4_alloc_table end_1) ->
     (((=) (typeof voidP_end_1_4_tag_table end_1) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_1_4_alloc_table end_1) i) /\
       ((<) i (offset_max voidP_end_1_4_alloc_table end_1))) ->
       ((=) (typeof voidP_end_1_4_tag_table (shift end_1 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 4 10 21#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=) (offset_min voidP_end_1_4_alloc_table end_1) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=) (offset_max voidP_end_1_4_alloc_table end_1) (0)))
    /\ (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 4 25 36#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=) (offset_min char_xP_dst_0_3_alloc_table dst_0) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=) (offset_max char_xP_dst_0_3_alloc_table dst_0) (0)))
    /\ (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 5 6 27#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=)
     (offset_min voidP_end_1_4_alloc_table
     (select !char_xP_char_xM_dst_0_3 dst_0)) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=)
     (offset_max voidP_end_1_4_alloc_table
     (select !char_xP_char_xM_dst_0_3 dst_0)) (1)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040# ((=) true true)) /\
    (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 6 10 45#
   (same_block (select !char_xP_char_xM_dst_0_3 dst_0) end_1)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 54 10 18# "expl:Assigns clause"
       (not_assigns voidP_end_1_4_alloc_table voidP_end_1_4_alloc_table (old
       !charP_charM_end_1_4) !charP_charM_end_1_4 pset_empty))
      /\
      (#"escape_string_mem.jc" 54 10 18# "expl:Assigns clause"
      (not_assigns char_xP_dst_0_3_alloc_table char_xP_dst_0_3_alloc_table
      (old !char_xP_char_xM_dst_0_3) !char_xP_char_xM_dst_0_3 pset_empty)))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 10 16 33#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) false))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out = ref (any_pointer  () : (pointer voidP)) in
    (let __retres = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     (out := (acc  !char_xP_char_xM_dst_0_3 dst_0 ));
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 38 5 6#
      (Unsafe_uint8.(<>)  c_0
       (#"escape_string_mem.jc" 93 37 49# "expl:Integer cast"
       (Unsafe_uint8.of_int (0))) ))
      then
       begin
       (__retres :=
        (#"/home/maria/ded-rep/escape_string_mem.c" 39 9 14#
        "expl:Integer cast"
        (Unsafe_enum__bool_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 94 38 50# "expl:Integer cast"
         (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
      else ());
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 41 5 14#
      ((<)  (#"escape_string_mem.jc" 98 20 31# (sub_pointer_  !out end_1 ))
       (0) ))
      then
       (let _jessie_47 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 42 12 13#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (#"escape_string_mem.jc" 99 53 66# "expl:Integer cast"
        (Unsafe_int32.of_int (92))) )) in
       (let _jessie_48 = !out in
       (let _jessie_49 = (0) in
       (let _jessie_50 = _jessie_48 in
       (upd  charP_charM_end_1_4 _jessie_50 _jessie_47 ))))) else ());
      begin
      (out :=
       (shift_  !out
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 100 38 50# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 44 5 14#
       ((<)  (#"escape_string_mem.jc" 101 21 32# (sub_pointer_  !out end_1 ))
        (0) ))
       then
        (let _jessie_40 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 45 11 12#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 102 55 68# "expl:Integer cast"
         (Unsafe_int32.of_int (48))) )) in
        (let _jessie_41 = !out in
        (let _jessie_42 = (0) in
        (let _jessie_43 = _jessie_41 in
        (upd  charP_charM_end_1_4 _jessie_43 _jessie_40 ))))) else ());
       begin
       (out :=
        (shift_  !out
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 103 38 50# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        (let _jessie_33 = !out in
        (let _jessie_34 = dst_0 in
        (let _jessie_35 = (0) in
        (let _jessie_36 = _jessie_34 in
        (upd  char_xP_char_xM_dst_0_3 _jessie_36 _jessie_33 )))));
         begin
         (__retres :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 49 8 12#
          "expl:Integer cast"
          (Unsafe_enum__bool_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 105 37 49# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ))); (raise (Return_label_exc ())) end
        end end end end with Return_label_exc _jessie_1 ->
     'Return_label:
     'Return_label: begin (return := !__retres); (raise Return) end end));
     absurd  end with Return -> !return end)
  
  let escape_null_ensures_size_one
  #"/home/maria/ded-rep/escape_string_mem.c" 34 12 63#
  "expl:Function escape_null, behavior size_one" =
  fun
   (c_0 : Uint8.t) (dst_0 : (pointer char_xP)) (end_1 : (pointer voidP))
   (charP_charM_end_1_4 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_0_3
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_0_3_alloc_table :
   (alloc_table char_xP)) (voidP_end_1_4_alloc_table : (alloc_table voidP))
   (voidP_end_1_4_tag_table : (tag_table voidP)) 
   requires {
   (((Uint8.(=) c_0 (#"escape_string_mem.jc" 65 19 31# "expl:Integer cast"
     (Uint8.of_int (0))))
    /\ ((=) (shift (select !char_xP_char_xM_dst_0_3 dst_0) (1)) end_1))
   /\
   (((allocated voidP_end_1_4_alloc_table end_1) ->
     (((=) (typeof voidP_end_1_4_tag_table end_1) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_1_4_alloc_table end_1) i) /\
       ((<) i (offset_max voidP_end_1_4_alloc_table end_1))) ->
       ((=) (typeof voidP_end_1_4_tag_table (shift end_1 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 4 10 21#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=) (offset_min voidP_end_1_4_alloc_table end_1) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=) (offset_max voidP_end_1_4_alloc_table end_1) (0)))
    /\ (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 4 25 36#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=) (offset_min char_xP_dst_0_3_alloc_table dst_0) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=) (offset_max char_xP_dst_0_3_alloc_table dst_0) (0)))
    /\ (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 5 6 27#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=)
     (offset_min voidP_end_1_4_alloc_table
     (select !char_xP_char_xM_dst_0_3 dst_0)) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=)
     (offset_max voidP_end_1_4_alloc_table
     (select !char_xP_char_xM_dst_0_3 dst_0)) (1)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040# ((=) true true)) /\
    (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 6 10 45#
   (same_block (select !char_xP_char_xM_dst_0_3 dst_0) end_1)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 66 10 46# "expl:Assigns clause"
       (not_assigns voidP_end_1_4_alloc_table voidP_end_1_4_alloc_table (old
       !charP_charM_end_1_4) !charP_charM_end_1_4
       (pset_singleton (select (old !char_xP_char_xM_dst_0_3) dst_0))))
      /\
      (#"escape_string_mem.jc" 66 10 46# "expl:Assigns clause"
      (not_assigns char_xP_dst_0_3_alloc_table char_xP_dst_0_3_alloc_table
      (old !char_xP_char_xM_dst_0_3) !char_xP_char_xM_dst_0_3
      (pset_singleton dst_0))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 21 16 38#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 21 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 21 16 38#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_0_3 dst_0)
      (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (2))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 21 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 22 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_1_4
      (shift (select !char_xP_char_xM_dst_0_3 dst_0) (Int.(-_) (2))))
      (#"escape_string_mem.jc" 71 33 45# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 23 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out = ref (any_pointer  () : (pointer voidP)) in
    (let __retres = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     (out := (acc  !char_xP_char_xM_dst_0_3 dst_0 ));
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 38 5 6#
      (Unsafe_uint8.(<>)  c_0
       (#"escape_string_mem.jc" 93 37 49# "expl:Integer cast"
       (Unsafe_uint8.of_int (0))) ))
      then
       begin
       (__retres :=
        (#"/home/maria/ded-rep/escape_string_mem.c" 39 9 14#
        "expl:Integer cast"
        (Unsafe_enum__bool_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 94 38 50# "expl:Integer cast"
         (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
      else ());
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 41 5 14#
      ((<)  (#"escape_string_mem.jc" 98 20 31# (sub_pointer_  !out end_1 ))
       (0) ))
      then
       (let _jessie_89 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 42 12 13#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (#"escape_string_mem.jc" 99 53 66# "expl:Integer cast"
        (Unsafe_int32.of_int (92))) )) in
       (let _jessie_90 = !out in
       (let _jessie_91 = (0) in
       (let _jessie_92 = _jessie_90 in
       (upd  charP_charM_end_1_4 _jessie_92 _jessie_89 ))))) else ());
      begin
      (out :=
       (shift_  !out
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 100 38 50# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 44 5 14#
       ((<)  (#"escape_string_mem.jc" 101 21 32# (sub_pointer_  !out end_1 ))
        (0) ))
       then
        (let _jessie_82 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 45 11 12#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 102 55 68# "expl:Integer cast"
         (Unsafe_int32.of_int (48))) )) in
        (let _jessie_83 = !out in
        (let _jessie_84 = (0) in
        (let _jessie_85 = _jessie_83 in
        (upd  charP_charM_end_1_4 _jessie_85 _jessie_82 ))))) else ());
       begin
       (out :=
        (shift_  !out
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 103 38 50# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        (let _jessie_75 = !out in
        (let _jessie_76 = dst_0 in
        (let _jessie_77 = (0) in
        (let _jessie_78 = _jessie_76 in
        (upd  char_xP_char_xM_dst_0_3 _jessie_78 _jessie_75 )))));
         begin
         (__retres :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 49 8 12#
          "expl:Integer cast"
          (Unsafe_enum__bool_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 105 37 49# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ))); (raise (Return_label_exc ())) end
        end end end end with Return_label_exc _jessie_1 ->
     'Return_label:
     'Return_label: begin (return := !__retres); (raise Return) end end));
     absurd  end with Return -> !return end)
  
  let escape_null_ensures_size_two
  #"/home/maria/ded-rep/escape_string_mem.c" 34 12 63#
  "expl:Function escape_null, behavior size_two" =
  fun
   (c_0 : Uint8.t) (dst_0 : (pointer char_xP)) (end_1 : (pointer voidP))
   (charP_charM_end_1_4 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_0_3
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_0_3_alloc_table :
   (alloc_table char_xP)) (voidP_end_1_4_alloc_table : (alloc_table voidP))
   (voidP_end_1_4_tag_table : (tag_table voidP)) 
   requires {
   (((Uint8.(=) c_0 (#"escape_string_mem.jc" 74 19 31# "expl:Integer cast"
     (Uint8.of_int (0))))
    /\
    ((same_block (shift (select !char_xP_char_xM_dst_0_3 dst_0) (1)) end_1)
    /\
    ((<)
    (sub_pointer (shift (select !char_xP_char_xM_dst_0_3 dst_0) (1)) end_1)
    (0))))
   /\
   (((allocated voidP_end_1_4_alloc_table end_1) ->
     (((=) (typeof voidP_end_1_4_tag_table end_1) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_1_4_alloc_table end_1) i) /\
       ((<) i (offset_max voidP_end_1_4_alloc_table end_1))) ->
       ((=) (typeof voidP_end_1_4_tag_table (shift end_1 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 4 10 21#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=) (offset_min voidP_end_1_4_alloc_table end_1) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=) (offset_max voidP_end_1_4_alloc_table end_1) (0)))
    /\ (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 4 25 36#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=) (offset_min char_xP_dst_0_3_alloc_table dst_0) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=) (offset_max char_xP_dst_0_3_alloc_table dst_0) (0)))
    /\ (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 5 6 27#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=)
     (offset_min voidP_end_1_4_alloc_table
     (select !char_xP_char_xM_dst_0_3 dst_0)) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=)
     (offset_max voidP_end_1_4_alloc_table
     (select !char_xP_char_xM_dst_0_3 dst_0)) (1)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040# ((=) true true)) /\
    (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 6 10 45#
   (same_block (select !char_xP_char_xM_dst_0_3 dst_0) end_1)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 77 10 75# "expl:Assigns clause"
       (not_assigns voidP_end_1_4_alloc_table voidP_end_1_4_alloc_table (old
       !charP_charM_end_1_4) !charP_charM_end_1_4
       (pset_union
       (pset_singleton (select (old !char_xP_char_xM_dst_0_3) dst_0))
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (1))))))
      /\
      (#"escape_string_mem.jc" 77 10 75# "expl:Assigns clause"
      (not_assigns char_xP_dst_0_3_alloc_table char_xP_dst_0_3_alloc_table
      (old !char_xP_char_xM_dst_0_3) !char_xP_char_xM_dst_0_3
      (pset_singleton dst_0))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_0_3 dst_0)
      (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (2))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 29 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_1_4
      (shift (select !char_xP_char_xM_dst_0_3 dst_0) (Int.(-_) (2))))
      (#"escape_string_mem.jc" 83 33 45# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 30 16 34#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_1_4
      (shift (select !char_xP_char_xM_dst_0_3 dst_0) (Int.(-_) (1))))
      (#"escape_string_mem.jc" 85 35 47# "expl:Integer cast" (Int8.of_int
      (48)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 31 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out = ref (any_pointer  () : (pointer voidP)) in
    (let __retres = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     (out := (acc  !char_xP_char_xM_dst_0_3 dst_0 ));
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 38 5 6#
      (Unsafe_uint8.(<>)  c_0
       (#"escape_string_mem.jc" 93 37 49# "expl:Integer cast"
       (Unsafe_uint8.of_int (0))) ))
      then
       begin
       (__retres :=
        (#"/home/maria/ded-rep/escape_string_mem.c" 39 9 14#
        "expl:Integer cast"
        (Unsafe_enum__bool_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 94 38 50# "expl:Integer cast"
         (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
      else ());
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 41 5 14#
      ((<)  (#"escape_string_mem.jc" 98 20 31# (sub_pointer_  !out end_1 ))
       (0) ))
      then
       (let _jessie_110 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 42 12 13#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (#"escape_string_mem.jc" 99 53 66# "expl:Integer cast"
        (Unsafe_int32.of_int (92))) )) in
       (let _jessie_111 = !out in
       (let _jessie_112 = (0) in
       (let _jessie_113 = _jessie_111 in
       (upd  charP_charM_end_1_4 _jessie_113 _jessie_110 ))))) else ());
      begin
      (out :=
       (shift_  !out
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 100 38 50# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 44 5 14#
       ((<)  (#"escape_string_mem.jc" 101 21 32# (sub_pointer_  !out end_1 ))
        (0) ))
       then
        (let _jessie_103 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 45 11 12#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 102 55 68# "expl:Integer cast"
         (Unsafe_int32.of_int (48))) )) in
        (let _jessie_104 = !out in
        (let _jessie_105 = (0) in
        (let _jessie_106 = _jessie_104 in
        (upd  charP_charM_end_1_4 _jessie_106 _jessie_103 ))))) else ());
       begin
       (out :=
        (shift_  !out
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 103 38 50# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        (let _jessie_96 = !out in
        (let _jessie_97 = dst_0 in
        (let _jessie_98 = (0) in
        (let _jessie_99 = _jessie_97 in
        (upd  char_xP_char_xM_dst_0_3 _jessie_99 _jessie_96 )))));
         begin
         (__retres :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 49 8 12#
          "expl:Integer cast"
          (Unsafe_enum__bool_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 105 37 49# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ))); (raise (Return_label_exc ())) end
        end end end end with Return_label_exc _jessie_1 ->
     'Return_label:
     'Return_label: begin (return := !__retres); (raise Return) end end));
     absurd  end with Return -> !return end)
  
  let escape_null_ensures_size_zero
  #"/home/maria/ded-rep/escape_string_mem.c" 34 12 63#
  "expl:Function escape_null, behavior size_zero" =
  fun
   (c_0 : Uint8.t) (dst_0 : (pointer char_xP)) (end_1 : (pointer voidP))
   (charP_charM_end_1_4 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_0_3
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_0_3_alloc_table :
   (alloc_table char_xP)) (voidP_end_1_4_alloc_table : (alloc_table voidP))
   (voidP_end_1_4_tag_table : (tag_table voidP)) 
   requires {
   (((Uint8.(=) c_0 (#"escape_string_mem.jc" 57 19 31# "expl:Integer cast"
     (Uint8.of_int (0))))
    /\
    ((same_block (select !char_xP_char_xM_dst_0_3 dst_0) end_1) /\
    ((>=) (sub_pointer (select !char_xP_char_xM_dst_0_3 dst_0) end_1) (0))))
   /\
   (((allocated voidP_end_1_4_alloc_table end_1) ->
     (((=) (typeof voidP_end_1_4_tag_table end_1) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_1_4_alloc_table end_1) i) /\
       ((<) i (offset_max voidP_end_1_4_alloc_table end_1))) ->
       ((=) (typeof voidP_end_1_4_tag_table (shift end_1 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 4 10 21#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=) (offset_min voidP_end_1_4_alloc_table end_1) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=) (offset_max voidP_end_1_4_alloc_table end_1) (0)))
    /\ (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 4 25 36#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=) (offset_min char_xP_dst_0_3_alloc_table dst_0) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=) (offset_max char_xP_dst_0_3_alloc_table dst_0) (0)))
    /\ (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 34 12 1040#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 5 6 27#
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((<=)
     (offset_min voidP_end_1_4_alloc_table
     (select !char_xP_char_xM_dst_0_3 dst_0)) (0)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040#
     ((>=)
     (offset_max voidP_end_1_4_alloc_table
     (select !char_xP_char_xM_dst_0_3 dst_0)) (1)))
    /\
    (#"escape_string_mem.jc" 34 12 1040#
    ((#"escape_string_mem.jc" 34 12 1040# ((=) true true)) /\
    (#"escape_string_mem.jc" 34 12 1040# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 6 10 45#
   (same_block (select !char_xP_char_xM_dst_0_3 dst_0) end_1)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 60 10 23# "expl:Assigns clause"
       (not_assigns voidP_end_1_4_alloc_table voidP_end_1_4_alloc_table (old
       !charP_charM_end_1_4) !charP_charM_end_1_4 pset_empty))
      /\
      (#"escape_string_mem.jc" 60 10 23# "expl:Assigns clause"
      (not_assigns char_xP_dst_0_3_alloc_table char_xP_dst_0_3_alloc_table
      (old !char_xP_char_xM_dst_0_3) !char_xP_char_xM_dst_0_3
      (pset_singleton dst_0))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 15 16 38#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 15 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 15 16 38#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_0_3 dst_0)
      (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (2))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 16 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out = ref (any_pointer  () : (pointer voidP)) in
    (let __retres = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     (out := (acc  !char_xP_char_xM_dst_0_3 dst_0 ));
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 38 5 6#
      (Unsafe_uint8.(<>)  c_0
       (#"escape_string_mem.jc" 93 37 49# "expl:Integer cast"
       (Unsafe_uint8.of_int (0))) ))
      then
       begin
       (__retres :=
        (#"/home/maria/ded-rep/escape_string_mem.c" 39 9 14#
        "expl:Integer cast"
        (Unsafe_enum__bool_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 94 38 50# "expl:Integer cast"
         (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
      else ());
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 41 5 14#
      ((<)  (#"escape_string_mem.jc" 98 20 31# (sub_pointer_  !out end_1 ))
       (0) ))
      then
       (let _jessie_68 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 42 12 13#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (#"escape_string_mem.jc" 99 53 66# "expl:Integer cast"
        (Unsafe_int32.of_int (92))) )) in
       (let _jessie_69 = !out in
       (let _jessie_70 = (0) in
       (let _jessie_71 = _jessie_69 in
       (upd  charP_charM_end_1_4 _jessie_71 _jessie_68 ))))) else ());
      begin
      (out :=
       (shift_  !out
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 100 38 50# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 44 5 14#
       ((<)  (#"escape_string_mem.jc" 101 21 32# (sub_pointer_  !out end_1 ))
        (0) ))
       then
        (let _jessie_61 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 45 11 12#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 102 55 68# "expl:Integer cast"
         (Unsafe_int32.of_int (48))) )) in
        (let _jessie_62 = !out in
        (let _jessie_63 = (0) in
        (let _jessie_64 = _jessie_62 in
        (upd  charP_charM_end_1_4 _jessie_64 _jessie_61 ))))) else ());
       begin
       (out :=
        (shift_  !out
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 103 38 50# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        (let _jessie_54 = !out in
        (let _jessie_55 = dst_0 in
        (let _jessie_56 = (0) in
        (let _jessie_57 = _jessie_55 in
        (upd  char_xP_char_xM_dst_0_3 _jessie_57 _jessie_54 )))));
         begin
         (__retres :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 49 8 12#
          "expl:Integer cast"
          (Unsafe_enum__bool_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 105 37 49# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ))); (raise (Return_label_exc ())) end
        end end end end with Return_label_exc _jessie_1 ->
     'Return_label:
     'Return_label: begin (return := !__retres); (raise Return) end end));
     absurd  end with Return -> !return end)
  
end

module Safe_int32_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Uint8.to_int n)) }
  
end

module Function_escape_octal_safety
#"/home/maria/ded-rep/escape_string_mem.c" 94 12 64#
"expl:escape_octal, safety"

  use enum.Uint8 
  
  use Safe_int8_of_Safe_int32 
  
  use Safe_int32_of_Safe_uint8 
  
  use Safe_int32 
  
  use Safe_enum__bool_of_Safe_int32 
  
  use Safe_enum__bool 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_upd_safe 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_sub_pointer_safe 
  
  use import core.Jessie_shift_safe 
  
  use import core.Jessie_return 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_charp_tag_id 
  
  use import core.Jessie_any_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_acc_safe 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  let escape_octal #"/home/maria/ded-rep/escape_string_mem.c" 94 12 64#
  "expl:Function escape_octal, safety" =
  fun
   (c_1 : Uint8.t) (dst_1 : (pointer char_xP)) (end_2 : (pointer voidP))
   (charP_charM_end_2_6 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_1_5
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_1_5_alloc_table :
   (alloc_table char_xP)) (voidP_end_2_6_alloc_table : (alloc_table voidP))
   (voidP_end_2_6_tag_table : (tag_table voidP)) 
   requires {
   (((allocated voidP_end_2_6_alloc_table end_2) ->
     (((=) (typeof voidP_end_2_6_tag_table end_2) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_2_6_alloc_table end_2) i) /\
       ((<) i (offset_max voidP_end_2_6_alloc_table end_2))) ->
       ((=) (typeof voidP_end_2_6_tag_table (shift end_2 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 10 21#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min voidP_end_2_6_alloc_table end_2) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max voidP_end_2_6_alloc_table end_2) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 25 36#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 54 6 27#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=)
     (offset_min voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=)
     (offset_max voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (3)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 55 13 48#
   (same_block (select !char_xP_char_xM_dst_1_5 dst_1) end_2))))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_enum__bool.any_  () ) in
   try
    begin
    (let out_0 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_0 = ref (Safe_enum__bool.any_  () ) in
    begin
    (out_0 :=
     (let _jessie_328 =
     (#"/home/maria/ded-rep/escape_string_mem.c" 96 13 17#
     "expl:Pointer dereference"
     (acc  char_xP_dst_1_5_alloc_table !char_xP_char_xM_dst_1_5 dst_1 )) in
     begin
     (assert {
     (#"/home/maria/ded-rep/escape_string_mem.c" 96 1 5#
     "expl:Pointer index bounds" true) }); _jessie_328 end));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 98 5 14#
     ((<)  (#"escape_string_mem.jc" 204 21 34# (sub_pointer_  !out_0 end_2 ))
      (0) ))
     then
      (let _jessie_330 =
      (let _jessie_329 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 99 12 13#
      "expl:Integer cast"
      (Safe_int8_of_Safe_int32.cast 
       (#"escape_string_mem.jc" 205 57 70# "expl:Integer cast"
       (Safe_int32.of_int (92))) )) in
      begin
      (assert {
      (#"/home/maria/ded-rep/escape_string_mem.c" 99 2 13#
      "expl:Pointer index bounds" true) }); _jessie_329 end) in
      (let _jessie_331 = !out_0 in
      (let _jessie_332 = (0) in
      (let _jessie_333 = _jessie_331 in
      (#"/home/maria/ded-rep/escape_string_mem.c" 99 2 13#
      "expl:Pointer dereference"
      (upd  voidP_end_2_6_alloc_table charP_charM_end_2_6 _jessie_331
       _jessie_330 )))))) else ());
     begin
     (out_0 :=
      (let _jessie_334 =
      (shift_typesafe  !out_0
       (Safe_int32.to_int 
        (#"escape_string_mem.jc" 206 42 54# "expl:Integer cast"
        (Safe_int32.of_int (1))) ) ) in
      begin
      (assert {
      (#"/home/maria/ded-rep/escape_string_mem.c" 100 1 6#
      "expl:Pointer index bounds" true) }); _jessie_334 end));
      begin
      any unit
      requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
      ensures {
        (#"/home/maria/ded-rep/escape_string_mem.c" 101 12 27#
        ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (1)))) } ;
       () end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 102 5 14#
      ((<) 
       (#"escape_string_mem.jc" 214 24 37# (sub_pointer_  !out_0 end_2 )) (0)
       ))
      then
       (let _jessie_336 =
       (let _jessie_335 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 104 9 29#
       "expl:Integer cast"
       (Safe_int8_of_Safe_int32.cast 
        (Safe_int32.(+) 
         (#"/home/maria/ded-rep/escape_string_mem.c" 104 10 22#
         "expl:Division by zero"
         (Safe_int32.(%) 
          (#"/home/maria/ded-rep/escape_string_mem.c" 104 11 17#
          "expl:Division by zero"
          (Safe_int32.(/) 
           (#"/home/maria/ded-rep/escape_string_mem.c" 104 11 12#
           "expl:Integer cast" (Safe_int32_of_Safe_uint8.cast  c_1 ))
           (#"escape_string_mem.jc" 221 64 77# "expl:Integer cast"
           (Safe_int32.of_int (64))) ))
          (#"escape_string_mem.jc" 222 63 75# "expl:Integer cast"
          (Safe_int32.of_int (7))) ))
         (#"escape_string_mem.jc" 223 62 75# "expl:Integer cast"
         (Safe_int32.of_int (48))) ) )) in
       begin
       (assert {
       (#"/home/maria/ded-rep/escape_string_mem.c" 104 2 29#
       "expl:Pointer index bounds" true) }); _jessie_335 end) in
       (let _jessie_337 = !out_0 in
       (let _jessie_338 = (0) in
       (let _jessie_339 = _jessie_337 in
       (#"/home/maria/ded-rep/escape_string_mem.c" 104 2 29#
       "expl:Pointer dereference"
       (upd  voidP_end_2_6_alloc_table charP_charM_end_2_6 _jessie_337
        _jessie_336 )))))) else ());
      begin
      (out_0 :=
       (let _jessie_340 =
       (shift_typesafe  !out_0
        (Safe_int32.to_int 
         (#"escape_string_mem.jc" 225 42 54# "expl:Integer cast"
         (Safe_int32.of_int (1))) ) ) in
       begin
       (assert {
       (#"/home/maria/ded-rep/escape_string_mem.c" 107 1 6#
       "expl:Pointer index bounds" true) }); _jessie_340 end));
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 108 12 27#
         ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (2)))) } ;
        () end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 109 5 14#
       ((<) 
        (#"escape_string_mem.jc" 233 24 37# (sub_pointer_  !out_0 end_2 ))
        (0) ))
       then
        (let _jessie_342 =
        (let _jessie_341 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 111 9 28#
        "expl:Integer cast"
        (Safe_int8_of_Safe_int32.cast 
         (Safe_int32.(+) 
          (#"/home/maria/ded-rep/escape_string_mem.c" 111 10 21#
          "expl:Division by zero"
          (Safe_int32.(%) 
           (#"/home/maria/ded-rep/escape_string_mem.c" 111 11 16#
           "expl:Division by zero"
           (Safe_int32.(/) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 111 11 12#
            "expl:Integer cast" (Safe_int32_of_Safe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 240 64 76# "expl:Integer cast"
            (Safe_int32.of_int (8))) ))
           (#"escape_string_mem.jc" 241 63 75# "expl:Integer cast"
           (Safe_int32.of_int (7))) ))
          (#"escape_string_mem.jc" 242 62 75# "expl:Integer cast"
          (Safe_int32.of_int (48))) ) )) in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 111 2 28#
        "expl:Pointer index bounds" true) }); _jessie_341 end) in
        (let _jessie_343 = !out_0 in
        (let _jessie_344 = (0) in
        (let _jessie_345 = _jessie_343 in
        (#"/home/maria/ded-rep/escape_string_mem.c" 111 2 28#
        "expl:Pointer dereference"
        (upd  voidP_end_2_6_alloc_table charP_charM_end_2_6 _jessie_343
         _jessie_342 )))))) else ());
       begin
       (out_0 :=
        (let _jessie_346 =
        (shift_typesafe  !out_0
         (Safe_int32.to_int 
          (#"escape_string_mem.jc" 244 42 54# "expl:Integer cast"
          (Safe_int32.of_int (1))) ) ) in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 114 1 6#
        "expl:Pointer index bounds" true) }); _jessie_346 end));
        begin
        any unit
        requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
        ensures {
          (#"/home/maria/ded-rep/escape_string_mem.c" 115 12 27#
          ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (3)))) } ;
         () end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 116 5 14#
        ((<) 
         (#"escape_string_mem.jc" 252 24 37# (sub_pointer_  !out_0 end_2 ))
         (0) ))
        then
         (let _jessie_348 =
         (let _jessie_347 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 118 9 22#
         "expl:Integer cast"
         (Safe_int8_of_Safe_int32.cast 
          (Safe_int32.(+) 
           (#"/home/maria/ded-rep/escape_string_mem.c" 118 10 15#
           "expl:Division by zero"
           (Safe_int32.(%) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 118 10 11#
            "expl:Integer cast" (Safe_int32_of_Safe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 257 63 75# "expl:Integer cast"
            (Safe_int32.of_int (7))) ))
           (#"escape_string_mem.jc" 258 62 75# "expl:Integer cast"
           (Safe_int32.of_int (48))) ) )) in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 118 2 22#
         "expl:Pointer index bounds" true) }); _jessie_347 end) in
         (let _jessie_349 = !out_0 in
         (let _jessie_350 = (0) in
         (let _jessie_351 = _jessie_349 in
         (#"/home/maria/ded-rep/escape_string_mem.c" 118 2 22#
         "expl:Pointer dereference"
         (upd  voidP_end_2_6_alloc_table charP_charM_end_2_6 _jessie_349
          _jessie_348 )))))) else ());
        begin
        (out_0 :=
         (let _jessie_352 =
         (shift_typesafe  !out_0
          (Safe_int32.to_int 
           (#"escape_string_mem.jc" 260 42 54# "expl:Integer cast"
           (Safe_int32.of_int (1))) ) ) in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 121 1 6#
         "expl:Pointer index bounds" true) }); _jessie_352 end));
         begin
         any unit
         requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
         ensures {
           (#"/home/maria/ded-rep/escape_string_mem.c" 122 12 27#
           ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (4))))
           } ; () end;
         begin
         (let _jessie_354 =
         (let _jessie_353 = !out_0 in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 124 1 11#
         "expl:Pointer index bounds" true) }); _jessie_353 end) in
         (let _jessie_355 = dst_1 in
         (let _jessie_356 = (0) in
         (let _jessie_357 = _jessie_355 in
         (#"/home/maria/ded-rep/escape_string_mem.c" 124 1 11#
         "expl:Pointer dereference"
         (upd  char_xP_dst_1_5_alloc_table char_xP_char_xM_dst_1_5
          _jessie_355 _jessie_354 ))))));
          begin
          (__retres_0 :=
           (let _jessie_358 =
           (#"/home/maria/ded-rep/escape_string_mem.c" 125 8 12#
           "expl:Integer cast"
           (Safe_enum__bool_of_Safe_int32.cast 
            (#"escape_string_mem.jc" 268 41 53# "expl:Integer cast"
            (Safe_int32.of_int (1))) )) in
           begin
           (assert {
           (#"/home/maria/ded-rep/escape_string_mem.c" 125 1 13#
           "expl:Pointer index bounds" true) }); _jessie_358 end));
           begin
           (return :=
            (let _jessie_359 = !__retres_0 in
            begin
            (assert {
            (#"escape_string_mem.jc" 270 7 24# "expl:Pointer index bounds"
            true) }); _jessie_359 end)); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
end

module Unsafe_int32_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Uint8.to_int n)) }
  
end

module Function_escape_octal_behaviors
#"/home/maria/ded-rep/escape_string_mem.c" 94 12 64#
"expl:escape_octal, behaviors"

  use Unsafe_int8_of_Unsafe_int32 
  
  use Unsafe_int32_of_Unsafe_uint8 
  
  use Unsafe_int32 
  
  use Unsafe_enum__bool_of_Unsafe_int32 
  
  use Unsafe_enum__bool 
  
  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_upd_unsafe 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_sub_pointer_unsafe 
  
  use import core.Jessie_shift_unsafe 
  
  use import core.Jessie_return 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_charp_tag_id 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_any_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_acc_unsafe 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use int.ComputerDivision 
  
  use why3.Bool.Bool 
  
  let escape_octal_ensures_default
  #"/home/maria/ded-rep/escape_string_mem.c" 94 12 64#
  "expl:Function escape_octal, default behavior" =
  fun
   (c_1 : Uint8.t) (dst_1 : (pointer char_xP)) (end_2 : (pointer voidP))
   (charP_charM_end_2_6 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_1_5
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_1_5_alloc_table :
   (alloc_table char_xP)) (voidP_end_2_6_alloc_table : (alloc_table voidP))
   (voidP_end_2_6_tag_table : (tag_table voidP)) 
   requires {
   (((allocated voidP_end_2_6_alloc_table end_2) ->
     (((=) (typeof voidP_end_2_6_tag_table end_2) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_2_6_alloc_table end_2) i) /\
       ((<) i (offset_max voidP_end_2_6_alloc_table end_2))) ->
       ((=) (typeof voidP_end_2_6_tag_table (shift end_2 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 10 21#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min voidP_end_2_6_alloc_table end_2) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max voidP_end_2_6_alloc_table end_2) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 25 36#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 54 6 27#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=)
     (offset_min voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=)
     (offset_max voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (3)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 55 13 48#
   (same_block (select !char_xP_char_xM_dst_1_5 dst_1) end_2))))))))) }
   ensures { ("expl:Postcondition" ("expl:Ensures clause" true)) }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_0 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_0 = ref (Unsafe_enum__bool.any_  () ) in
    begin
    (out_0 := (acc  !char_xP_char_xM_dst_1_5 dst_1 ));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 98 5 14#
     ((<)  (#"escape_string_mem.jc" 204 21 34# (sub_pointer_  !out_0 end_2 ))
      (0) ))
     then
      (let _jessie_138 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 99 12 13#
      "expl:Integer cast"
      (Unsafe_int8_of_Unsafe_int32.cast 
       (#"escape_string_mem.jc" 205 57 70# "expl:Integer cast"
       (Unsafe_int32.of_int (92))) )) in
      (let _jessie_139 = !out_0 in
      (let _jessie_140 = (0) in
      (let _jessie_141 = _jessie_139 in
      (upd  charP_charM_end_2_6 _jessie_141 _jessie_138 ))))) else ());
     begin
     (out_0 :=
      (shift_  !out_0
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 206 42 54# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ));
      begin
      (assert {
      (#"/home/maria/ded-rep/escape_string_mem.c" 101 12 27#
      "expl:Assertion in line 101"
      ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (1)))) });
       () end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 102 5 14#
      ((<) 
       (#"escape_string_mem.jc" 214 24 37# (sub_pointer_  !out_0 end_2 )) (0)
       ))
      then
       (let _jessie_144 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 104 9 29#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (Unsafe_int32.(+) 
         (Unsafe_int32.(%) 
          (Unsafe_int32.(/) 
           (#"/home/maria/ded-rep/escape_string_mem.c" 104 11 12#
           "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
           (#"escape_string_mem.jc" 221 64 77# "expl:Integer cast"
           (Unsafe_int32.of_int (64))) )
          (#"escape_string_mem.jc" 222 63 75# "expl:Integer cast"
          (Unsafe_int32.of_int (7))) )
         (#"escape_string_mem.jc" 223 62 75# "expl:Integer cast"
         (Unsafe_int32.of_int (48))) ) )) in
       (let _jessie_145 = !out_0 in
       (let _jessie_146 = (0) in
       (let _jessie_147 = _jessie_145 in
       (upd  charP_charM_end_2_6 _jessie_147 _jessie_144 ))))) else ());
      begin
      (out_0 :=
       (shift_  !out_0
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 225 42 54# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       begin
       (assert {
       (#"/home/maria/ded-rep/escape_string_mem.c" 108 12 27#
       "expl:Assertion in line 108"
       ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (2)))) });
        () end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 109 5 14#
       ((<) 
        (#"escape_string_mem.jc" 233 24 37# (sub_pointer_  !out_0 end_2 ))
        (0) ))
       then
        (let _jessie_150 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 111 9 28#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (Unsafe_int32.(+) 
          (Unsafe_int32.(%) 
           (Unsafe_int32.(/) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 111 11 12#
            "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 240 64 76# "expl:Integer cast"
            (Unsafe_int32.of_int (8))) )
           (#"escape_string_mem.jc" 241 63 75# "expl:Integer cast"
           (Unsafe_int32.of_int (7))) )
          (#"escape_string_mem.jc" 242 62 75# "expl:Integer cast"
          (Unsafe_int32.of_int (48))) ) )) in
        (let _jessie_151 = !out_0 in
        (let _jessie_152 = (0) in
        (let _jessie_153 = _jessie_151 in
        (upd  charP_charM_end_2_6 _jessie_153 _jessie_150 ))))) else ());
       begin
       (out_0 :=
        (shift_  !out_0
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 244 42 54# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 115 12 27#
        "expl:Assertion in line 115"
        ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (3)))) });
         () end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 116 5 14#
        ((<) 
         (#"escape_string_mem.jc" 252 24 37# (sub_pointer_  !out_0 end_2 ))
         (0) ))
        then
         (let _jessie_156 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 118 9 22#
         "expl:Integer cast"
         (Unsafe_int8_of_Unsafe_int32.cast 
          (Unsafe_int32.(+) 
           (Unsafe_int32.(%) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 118 10 11#
            "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 257 63 75# "expl:Integer cast"
            (Unsafe_int32.of_int (7))) )
           (#"escape_string_mem.jc" 258 62 75# "expl:Integer cast"
           (Unsafe_int32.of_int (48))) ) )) in
         (let _jessie_157 = !out_0 in
         (let _jessie_158 = (0) in
         (let _jessie_159 = _jessie_157 in
         (upd  charP_charM_end_2_6 _jessie_159 _jessie_156 ))))) else ());
        begin
        (out_0 :=
         (shift_  !out_0
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 260 42 54# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 122 12 27#
         "expl:Assertion in line 122"
         ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (4)))) });
          () end;
         begin
         (let _jessie_162 = !out_0 in
         (let _jessie_163 = dst_1 in
         (let _jessie_164 = (0) in
         (let _jessie_165 = _jessie_163 in
         (upd  char_xP_char_xM_dst_1_5 _jessie_165 _jessie_162 )))));
          begin
          (__retres_0 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 125 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 268 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) )));
           begin (return := !__retres_0); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
  let escape_octal_ensures_size_four
  #"/home/maria/ded-rep/escape_string_mem.c" 94 12 64#
  "expl:Function escape_octal, behavior size_four" =
  fun
   (c_1 : Uint8.t) (dst_1 : (pointer char_xP)) (end_2 : (pointer voidP))
   (charP_charM_end_2_6 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_1_5
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_1_5_alloc_table :
   (alloc_table char_xP)) (voidP_end_2_6_alloc_table : (alloc_table voidP))
   (voidP_end_2_6_tag_table : (tag_table voidP)) 
   requires {
   (((same_block (shift (select !char_xP_char_xM_dst_1_5 dst_1) (4)) end_2)
    /\
    ((<=)
    (sub_pointer (shift (select !char_xP_char_xM_dst_1_5 dst_1) (4)) end_2)
    (0)))
   /\
   (((allocated voidP_end_2_6_alloc_table end_2) ->
     (((=) (typeof voidP_end_2_6_tag_table end_2) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_2_6_alloc_table end_2) i) /\
       ((<) i (offset_max voidP_end_2_6_alloc_table end_2))) ->
       ((=) (typeof voidP_end_2_6_tag_table (shift end_2 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 10 21#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min voidP_end_2_6_alloc_table end_2) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max voidP_end_2_6_alloc_table end_2) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 25 36#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 54 6 27#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=)
     (offset_min voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=)
     (offset_max voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (3)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 55 13 48#
   (same_block (select !char_xP_char_xM_dst_1_5 dst_1) end_2)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 179 10 133# "expl:Assigns clause"
       (not_assigns voidP_end_2_6_alloc_table voidP_end_2_6_alloc_table (old
       !charP_charM_end_2_6) !charP_charM_end_2_6
       (pset_union
       (pset_singleton (select (old !char_xP_char_xM_dst_1_5) dst_1))
       (pset_union
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (1)))
       (pset_union
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (2)))
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (3))))))))
      /\
      (#"escape_string_mem.jc" 179 10 133# "expl:Assigns clause"
      (not_assigns char_xP_dst_1_5_alloc_table char_xP_dst_1_5_alloc_table
      (old !char_xP_char_xM_dst_1_5) !char_xP_char_xM_dst_1_5
      (pset_singleton dst_1))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
      (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 87 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_2_6
      (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (4))))
      (#"escape_string_mem.jc" 187 35 47# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 88 16 51#
      "expl:Ensures clause"
      ((=)
      (Int8.to_int
      (select !charP_charM_end_2_6
      (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (3)))))
      (Int.(+)
      (ComputerDivision.mod (ComputerDivision.div (Uint8.to_int c_1) (64))
      (7))
      (Int8.to_int (#"escape_string_mem.jc" 190 40 52# "expl:Integer cast"
      (Int8.of_int (48)))))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 89 16 50#
      "expl:Ensures clause"
      ((=)
      (Int8.to_int
      (select !charP_charM_end_2_6
      (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (2)))))
      (Int.(+)
      (ComputerDivision.mod (ComputerDivision.div (Uint8.to_int c_1) (8))
      (7))
      (Int8.to_int (#"escape_string_mem.jc" 193 42 54# "expl:Integer cast"
      (Int8.of_int (48)))))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 90 16 44#
      "expl:Ensures clause"
      ((=)
      (Int8.to_int
      (select !charP_charM_end_2_6
      (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (1)))))
      (Int.(+) (ComputerDivision.mod (Uint8.to_int c_1) (7))
      (Int8.to_int (#"escape_string_mem.jc" 196 44 56# "expl:Integer cast"
      (Int8.of_int (48)))))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 91 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_0 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_0 = ref (Unsafe_enum__bool.any_  () ) in
    begin
    (out_0 := (acc  !char_xP_char_xM_dst_1_5 dst_1 ));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 98 5 14#
     ((<)  (#"escape_string_mem.jc" 204 21 34# (sub_pointer_  !out_0 end_2 ))
      (0) ))
     then
      (let _jessie_298 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 99 12 13#
      "expl:Integer cast"
      (Unsafe_int8_of_Unsafe_int32.cast 
       (#"escape_string_mem.jc" 205 57 70# "expl:Integer cast"
       (Unsafe_int32.of_int (92))) )) in
      (let _jessie_299 = !out_0 in
      (let _jessie_300 = (0) in
      (let _jessie_301 = _jessie_299 in
      (upd  charP_charM_end_2_6 _jessie_301 _jessie_298 ))))) else ());
     begin
     (out_0 :=
      (shift_  !out_0
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 206 42 54# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ));
      begin
      any unit
      requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
      ensures {
        (#"/home/maria/ded-rep/escape_string_mem.c" 101 12 27#
        ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (1)))) } ;
       () end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 102 5 14#
      ((<) 
       (#"escape_string_mem.jc" 214 24 37# (sub_pointer_  !out_0 end_2 )) (0)
       ))
      then
       (let _jessie_304 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 104 9 29#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (Unsafe_int32.(+) 
         (Unsafe_int32.(%) 
          (Unsafe_int32.(/) 
           (#"/home/maria/ded-rep/escape_string_mem.c" 104 11 12#
           "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
           (#"escape_string_mem.jc" 221 64 77# "expl:Integer cast"
           (Unsafe_int32.of_int (64))) )
          (#"escape_string_mem.jc" 222 63 75# "expl:Integer cast"
          (Unsafe_int32.of_int (7))) )
         (#"escape_string_mem.jc" 223 62 75# "expl:Integer cast"
         (Unsafe_int32.of_int (48))) ) )) in
       (let _jessie_305 = !out_0 in
       (let _jessie_306 = (0) in
       (let _jessie_307 = _jessie_305 in
       (upd  charP_charM_end_2_6 _jessie_307 _jessie_304 ))))) else ());
      begin
      (out_0 :=
       (shift_  !out_0
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 225 42 54# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 108 12 27#
         ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (2)))) } ;
        () end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 109 5 14#
       ((<) 
        (#"escape_string_mem.jc" 233 24 37# (sub_pointer_  !out_0 end_2 ))
        (0) ))
       then
        (let _jessie_310 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 111 9 28#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (Unsafe_int32.(+) 
          (Unsafe_int32.(%) 
           (Unsafe_int32.(/) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 111 11 12#
            "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 240 64 76# "expl:Integer cast"
            (Unsafe_int32.of_int (8))) )
           (#"escape_string_mem.jc" 241 63 75# "expl:Integer cast"
           (Unsafe_int32.of_int (7))) )
          (#"escape_string_mem.jc" 242 62 75# "expl:Integer cast"
          (Unsafe_int32.of_int (48))) ) )) in
        (let _jessie_311 = !out_0 in
        (let _jessie_312 = (0) in
        (let _jessie_313 = _jessie_311 in
        (upd  charP_charM_end_2_6 _jessie_313 _jessie_310 ))))) else ());
       begin
       (out_0 :=
        (shift_  !out_0
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 244 42 54# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        any unit
        requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
        ensures {
          (#"/home/maria/ded-rep/escape_string_mem.c" 115 12 27#
          ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (3)))) } ;
         () end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 116 5 14#
        ((<) 
         (#"escape_string_mem.jc" 252 24 37# (sub_pointer_  !out_0 end_2 ))
         (0) ))
        then
         (let _jessie_316 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 118 9 22#
         "expl:Integer cast"
         (Unsafe_int8_of_Unsafe_int32.cast 
          (Unsafe_int32.(+) 
           (Unsafe_int32.(%) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 118 10 11#
            "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 257 63 75# "expl:Integer cast"
            (Unsafe_int32.of_int (7))) )
           (#"escape_string_mem.jc" 258 62 75# "expl:Integer cast"
           (Unsafe_int32.of_int (48))) ) )) in
         (let _jessie_317 = !out_0 in
         (let _jessie_318 = (0) in
         (let _jessie_319 = _jessie_317 in
         (upd  charP_charM_end_2_6 _jessie_319 _jessie_316 ))))) else ());
        begin
        (out_0 :=
         (shift_  !out_0
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 260 42 54# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         any unit
         requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
         ensures {
           (#"/home/maria/ded-rep/escape_string_mem.c" 122 12 27#
           ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (4))))
           } ; () end;
         begin
         (let _jessie_322 = !out_0 in
         (let _jessie_323 = dst_1 in
         (let _jessie_324 = (0) in
         (let _jessie_325 = _jessie_323 in
         (upd  char_xP_char_xM_dst_1_5 _jessie_325 _jessie_322 )))));
          begin
          (__retres_0 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 125 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 268 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) )));
           begin (return := !__retres_0); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
  let escape_octal_ensures_size_one
  #"/home/maria/ded-rep/escape_string_mem.c" 94 12 64#
  "expl:Function escape_octal, behavior size_one" =
  fun
   (c_1 : Uint8.t) (dst_1 : (pointer char_xP)) (end_2 : (pointer voidP))
   (charP_charM_end_2_6 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_1_5
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_1_5_alloc_table :
   (alloc_table char_xP)) (voidP_end_2_6_alloc_table : (alloc_table voidP))
   (voidP_end_2_6_tag_table : (tag_table voidP)) 
   requires {
   (((=) (shift (select !char_xP_char_xM_dst_1_5 dst_1) (1)) end_2) /\
   (((allocated voidP_end_2_6_alloc_table end_2) ->
     (((=) (typeof voidP_end_2_6_tag_table end_2) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_2_6_alloc_table end_2) i) /\
       ((<) i (offset_max voidP_end_2_6_alloc_table end_2))) ->
       ((=) (typeof voidP_end_2_6_tag_table (shift end_2 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 10 21#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min voidP_end_2_6_alloc_table end_2) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max voidP_end_2_6_alloc_table end_2) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 25 36#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 54 6 27#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=)
     (offset_min voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=)
     (offset_max voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (3)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 55 13 48#
   (same_block (select !char_xP_char_xM_dst_1_5 dst_1) end_2)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 139 10 46# "expl:Assigns clause"
       (not_assigns voidP_end_2_6_alloc_table voidP_end_2_6_alloc_table (old
       !charP_charM_end_2_6) !charP_charM_end_2_6
       (pset_singleton (select (old !char_xP_char_xM_dst_1_5) dst_1))))
      /\
      (#"escape_string_mem.jc" 139 10 46# "expl:Assigns clause"
      (not_assigns char_xP_dst_1_5_alloc_table char_xP_dst_1_5_alloc_table
      (old !char_xP_char_xM_dst_1_5) !char_xP_char_xM_dst_1_5
      (pset_singleton dst_1))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 64 16 38#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 64 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 64 16 38#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
      (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 64 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 65 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_2_6
      (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (4))))
      (#"escape_string_mem.jc" 144 35 47# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 66 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_0 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_0 = ref (Unsafe_enum__bool.any_  () ) in
    begin
    (out_0 := (acc  !char_xP_char_xM_dst_1_5 dst_1 ));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 98 5 14#
     ((<)  (#"escape_string_mem.jc" 204 21 34# (sub_pointer_  !out_0 end_2 ))
      (0) ))
     then
      (let _jessie_202 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 99 12 13#
      "expl:Integer cast"
      (Unsafe_int8_of_Unsafe_int32.cast 
       (#"escape_string_mem.jc" 205 57 70# "expl:Integer cast"
       (Unsafe_int32.of_int (92))) )) in
      (let _jessie_203 = !out_0 in
      (let _jessie_204 = (0) in
      (let _jessie_205 = _jessie_203 in
      (upd  charP_charM_end_2_6 _jessie_205 _jessie_202 ))))) else ());
     begin
     (out_0 :=
      (shift_  !out_0
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 206 42 54# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ));
      begin
      any unit
      requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
      ensures {
        (#"/home/maria/ded-rep/escape_string_mem.c" 101 12 27#
        ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (1)))) } ;
       () end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 102 5 14#
      ((<) 
       (#"escape_string_mem.jc" 214 24 37# (sub_pointer_  !out_0 end_2 )) (0)
       ))
      then
       (let _jessie_208 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 104 9 29#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (Unsafe_int32.(+) 
         (Unsafe_int32.(%) 
          (Unsafe_int32.(/) 
           (#"/home/maria/ded-rep/escape_string_mem.c" 104 11 12#
           "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
           (#"escape_string_mem.jc" 221 64 77# "expl:Integer cast"
           (Unsafe_int32.of_int (64))) )
          (#"escape_string_mem.jc" 222 63 75# "expl:Integer cast"
          (Unsafe_int32.of_int (7))) )
         (#"escape_string_mem.jc" 223 62 75# "expl:Integer cast"
         (Unsafe_int32.of_int (48))) ) )) in
       (let _jessie_209 = !out_0 in
       (let _jessie_210 = (0) in
       (let _jessie_211 = _jessie_209 in
       (upd  charP_charM_end_2_6 _jessie_211 _jessie_208 ))))) else ());
      begin
      (out_0 :=
       (shift_  !out_0
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 225 42 54# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 108 12 27#
         ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (2)))) } ;
        () end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 109 5 14#
       ((<) 
        (#"escape_string_mem.jc" 233 24 37# (sub_pointer_  !out_0 end_2 ))
        (0) ))
       then
        (let _jessie_214 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 111 9 28#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (Unsafe_int32.(+) 
          (Unsafe_int32.(%) 
           (Unsafe_int32.(/) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 111 11 12#
            "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 240 64 76# "expl:Integer cast"
            (Unsafe_int32.of_int (8))) )
           (#"escape_string_mem.jc" 241 63 75# "expl:Integer cast"
           (Unsafe_int32.of_int (7))) )
          (#"escape_string_mem.jc" 242 62 75# "expl:Integer cast"
          (Unsafe_int32.of_int (48))) ) )) in
        (let _jessie_215 = !out_0 in
        (let _jessie_216 = (0) in
        (let _jessie_217 = _jessie_215 in
        (upd  charP_charM_end_2_6 _jessie_217 _jessie_214 ))))) else ());
       begin
       (out_0 :=
        (shift_  !out_0
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 244 42 54# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        any unit
        requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
        ensures {
          (#"/home/maria/ded-rep/escape_string_mem.c" 115 12 27#
          ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (3)))) } ;
         () end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 116 5 14#
        ((<) 
         (#"escape_string_mem.jc" 252 24 37# (sub_pointer_  !out_0 end_2 ))
         (0) ))
        then
         (let _jessie_220 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 118 9 22#
         "expl:Integer cast"
         (Unsafe_int8_of_Unsafe_int32.cast 
          (Unsafe_int32.(+) 
           (Unsafe_int32.(%) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 118 10 11#
            "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 257 63 75# "expl:Integer cast"
            (Unsafe_int32.of_int (7))) )
           (#"escape_string_mem.jc" 258 62 75# "expl:Integer cast"
           (Unsafe_int32.of_int (48))) ) )) in
         (let _jessie_221 = !out_0 in
         (let _jessie_222 = (0) in
         (let _jessie_223 = _jessie_221 in
         (upd  charP_charM_end_2_6 _jessie_223 _jessie_220 ))))) else ());
        begin
        (out_0 :=
         (shift_  !out_0
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 260 42 54# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         any unit
         requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
         ensures {
           (#"/home/maria/ded-rep/escape_string_mem.c" 122 12 27#
           ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (4))))
           } ; () end;
         begin
         (let _jessie_226 = !out_0 in
         (let _jessie_227 = dst_1 in
         (let _jessie_228 = (0) in
         (let _jessie_229 = _jessie_227 in
         (upd  char_xP_char_xM_dst_1_5 _jessie_229 _jessie_226 )))));
          begin
          (__retres_0 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 125 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 268 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) )));
           begin (return := !__retres_0); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
  let escape_octal_ensures_size_three
  #"/home/maria/ded-rep/escape_string_mem.c" 94 12 64#
  "expl:Function escape_octal, behavior size_three" =
  fun
   (c_1 : Uint8.t) (dst_1 : (pointer char_xP)) (end_2 : (pointer voidP))
   (charP_charM_end_2_6 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_1_5
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_1_5_alloc_table :
   (alloc_table char_xP)) (voidP_end_2_6_alloc_table : (alloc_table voidP))
   (voidP_end_2_6_tag_table : (tag_table voidP)) 
   requires {
   (((=) (shift (select !char_xP_char_xM_dst_1_5 dst_1) (3)) end_2) /\
   (((allocated voidP_end_2_6_alloc_table end_2) ->
     (((=) (typeof voidP_end_2_6_tag_table end_2) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_2_6_alloc_table end_2) i) /\
       ((<) i (offset_max voidP_end_2_6_alloc_table end_2))) ->
       ((=) (typeof voidP_end_2_6_tag_table (shift end_2 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 10 21#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min voidP_end_2_6_alloc_table end_2) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max voidP_end_2_6_alloc_table end_2) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 25 36#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 54 6 27#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=)
     (offset_min voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=)
     (offset_max voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (3)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 55 13 48#
   (same_block (select !char_xP_char_xM_dst_1_5 dst_1) end_2)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 161 10 104# "expl:Assigns clause"
       (not_assigns voidP_end_2_6_alloc_table voidP_end_2_6_alloc_table (old
       !charP_charM_end_2_6) !charP_charM_end_2_6
       (pset_union
       (pset_singleton (select (old !char_xP_char_xM_dst_1_5) dst_1))
       (pset_union
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (1)))
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (2)))))))
      /\
      (#"escape_string_mem.jc" 161 10 104# "expl:Assigns clause"
      (not_assigns char_xP_dst_1_5_alloc_table char_xP_dst_1_5_alloc_table
      (old !char_xP_char_xM_dst_1_5) !char_xP_char_xM_dst_1_5
      (pset_singleton dst_1))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
      (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 78 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_2_6
      (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (4))))
      (#"escape_string_mem.jc" 168 35 47# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 79 16 51#
      "expl:Ensures clause"
      ((=)
      (Int8.to_int
      (select !charP_charM_end_2_6
      (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (3)))))
      (Int.(+)
      (ComputerDivision.mod (ComputerDivision.div (Uint8.to_int c_1) (64))
      (7))
      (Int8.to_int (#"escape_string_mem.jc" 171 40 52# "expl:Integer cast"
      (Int8.of_int (48)))))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 80 16 50#
      "expl:Ensures clause"
      ((=)
      (Int8.to_int
      (select !charP_charM_end_2_6
      (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (2)))))
      (Int.(+)
      (ComputerDivision.mod (ComputerDivision.div (Uint8.to_int c_1) (8))
      (7))
      (Int8.to_int (#"escape_string_mem.jc" 174 42 54# "expl:Integer cast"
      (Int8.of_int (48)))))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 81 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_0 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_0 = ref (Unsafe_enum__bool.any_  () ) in
    begin
    (out_0 := (acc  !char_xP_char_xM_dst_1_5 dst_1 ));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 98 5 14#
     ((<)  (#"escape_string_mem.jc" 204 21 34# (sub_pointer_  !out_0 end_2 ))
      (0) ))
     then
      (let _jessie_266 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 99 12 13#
      "expl:Integer cast"
      (Unsafe_int8_of_Unsafe_int32.cast 
       (#"escape_string_mem.jc" 205 57 70# "expl:Integer cast"
       (Unsafe_int32.of_int (92))) )) in
      (let _jessie_267 = !out_0 in
      (let _jessie_268 = (0) in
      (let _jessie_269 = _jessie_267 in
      (upd  charP_charM_end_2_6 _jessie_269 _jessie_266 ))))) else ());
     begin
     (out_0 :=
      (shift_  !out_0
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 206 42 54# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ));
      begin
      any unit
      requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
      ensures {
        (#"/home/maria/ded-rep/escape_string_mem.c" 101 12 27#
        ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (1)))) } ;
       () end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 102 5 14#
      ((<) 
       (#"escape_string_mem.jc" 214 24 37# (sub_pointer_  !out_0 end_2 )) (0)
       ))
      then
       (let _jessie_272 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 104 9 29#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (Unsafe_int32.(+) 
         (Unsafe_int32.(%) 
          (Unsafe_int32.(/) 
           (#"/home/maria/ded-rep/escape_string_mem.c" 104 11 12#
           "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
           (#"escape_string_mem.jc" 221 64 77# "expl:Integer cast"
           (Unsafe_int32.of_int (64))) )
          (#"escape_string_mem.jc" 222 63 75# "expl:Integer cast"
          (Unsafe_int32.of_int (7))) )
         (#"escape_string_mem.jc" 223 62 75# "expl:Integer cast"
         (Unsafe_int32.of_int (48))) ) )) in
       (let _jessie_273 = !out_0 in
       (let _jessie_274 = (0) in
       (let _jessie_275 = _jessie_273 in
       (upd  charP_charM_end_2_6 _jessie_275 _jessie_272 ))))) else ());
      begin
      (out_0 :=
       (shift_  !out_0
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 225 42 54# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 108 12 27#
         ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (2)))) } ;
        () end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 109 5 14#
       ((<) 
        (#"escape_string_mem.jc" 233 24 37# (sub_pointer_  !out_0 end_2 ))
        (0) ))
       then
        (let _jessie_278 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 111 9 28#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (Unsafe_int32.(+) 
          (Unsafe_int32.(%) 
           (Unsafe_int32.(/) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 111 11 12#
            "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 240 64 76# "expl:Integer cast"
            (Unsafe_int32.of_int (8))) )
           (#"escape_string_mem.jc" 241 63 75# "expl:Integer cast"
           (Unsafe_int32.of_int (7))) )
          (#"escape_string_mem.jc" 242 62 75# "expl:Integer cast"
          (Unsafe_int32.of_int (48))) ) )) in
        (let _jessie_279 = !out_0 in
        (let _jessie_280 = (0) in
        (let _jessie_281 = _jessie_279 in
        (upd  charP_charM_end_2_6 _jessie_281 _jessie_278 ))))) else ());
       begin
       (out_0 :=
        (shift_  !out_0
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 244 42 54# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        any unit
        requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
        ensures {
          (#"/home/maria/ded-rep/escape_string_mem.c" 115 12 27#
          ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (3)))) } ;
         () end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 116 5 14#
        ((<) 
         (#"escape_string_mem.jc" 252 24 37# (sub_pointer_  !out_0 end_2 ))
         (0) ))
        then
         (let _jessie_284 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 118 9 22#
         "expl:Integer cast"
         (Unsafe_int8_of_Unsafe_int32.cast 
          (Unsafe_int32.(+) 
           (Unsafe_int32.(%) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 118 10 11#
            "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 257 63 75# "expl:Integer cast"
            (Unsafe_int32.of_int (7))) )
           (#"escape_string_mem.jc" 258 62 75# "expl:Integer cast"
           (Unsafe_int32.of_int (48))) ) )) in
         (let _jessie_285 = !out_0 in
         (let _jessie_286 = (0) in
         (let _jessie_287 = _jessie_285 in
         (upd  charP_charM_end_2_6 _jessie_287 _jessie_284 ))))) else ());
        begin
        (out_0 :=
         (shift_  !out_0
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 260 42 54# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         any unit
         requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
         ensures {
           (#"/home/maria/ded-rep/escape_string_mem.c" 122 12 27#
           ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (4))))
           } ; () end;
         begin
         (let _jessie_290 = !out_0 in
         (let _jessie_291 = dst_1 in
         (let _jessie_292 = (0) in
         (let _jessie_293 = _jessie_291 in
         (upd  char_xP_char_xM_dst_1_5 _jessie_293 _jessie_290 )))));
          begin
          (__retres_0 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 125 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 268 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) )));
           begin (return := !__retres_0); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
  let escape_octal_ensures_size_two
  #"/home/maria/ded-rep/escape_string_mem.c" 94 12 64#
  "expl:Function escape_octal, behavior size_two" =
  fun
   (c_1 : Uint8.t) (dst_1 : (pointer char_xP)) (end_2 : (pointer voidP))
   (charP_charM_end_2_6 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_1_5
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_1_5_alloc_table :
   (alloc_table char_xP)) (voidP_end_2_6_alloc_table : (alloc_table voidP))
   (voidP_end_2_6_tag_table : (tag_table voidP)) 
   requires {
   (((=) (shift (select !char_xP_char_xM_dst_1_5 dst_1) (2)) end_2) /\
   (((allocated voidP_end_2_6_alloc_table end_2) ->
     (((=) (typeof voidP_end_2_6_tag_table end_2) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_2_6_alloc_table end_2) i) /\
       ((<) i (offset_max voidP_end_2_6_alloc_table end_2))) ->
       ((=) (typeof voidP_end_2_6_tag_table (shift end_2 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 10 21#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min voidP_end_2_6_alloc_table end_2) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max voidP_end_2_6_alloc_table end_2) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 25 36#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 54 6 27#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=)
     (offset_min voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=)
     (offset_max voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (3)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 55 13 48#
   (same_block (select !char_xP_char_xM_dst_1_5 dst_1) end_2)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 148 10 75# "expl:Assigns clause"
       (not_assigns voidP_end_2_6_alloc_table voidP_end_2_6_alloc_table (old
       !charP_charM_end_2_6) !charP_charM_end_2_6
       (pset_union
       (pset_singleton (select (old !char_xP_char_xM_dst_1_5) dst_1))
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (1))))))
      /\
      (#"escape_string_mem.jc" 148 10 75# "expl:Assigns clause"
      (not_assigns char_xP_dst_1_5_alloc_table char_xP_dst_1_5_alloc_table
      (old !char_xP_char_xM_dst_1_5) !char_xP_char_xM_dst_1_5
      (pset_singleton dst_1))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
      (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 71 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_2_6
      (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (4))))
      (#"escape_string_mem.jc" 154 35 47# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 72 16 51#
      "expl:Ensures clause"
      ((=)
      (Int8.to_int
      (select !charP_charM_end_2_6
      (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (3)))))
      (Int.(+)
      (ComputerDivision.mod (ComputerDivision.div (Uint8.to_int c_1) (64))
      (7))
      (Int8.to_int (#"escape_string_mem.jc" 157 40 52# "expl:Integer cast"
      (Int8.of_int (48)))))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 73 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_0 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_0 = ref (Unsafe_enum__bool.any_  () ) in
    begin
    (out_0 := (acc  !char_xP_char_xM_dst_1_5 dst_1 ));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 98 5 14#
     ((<)  (#"escape_string_mem.jc" 204 21 34# (sub_pointer_  !out_0 end_2 ))
      (0) ))
     then
      (let _jessie_234 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 99 12 13#
      "expl:Integer cast"
      (Unsafe_int8_of_Unsafe_int32.cast 
       (#"escape_string_mem.jc" 205 57 70# "expl:Integer cast"
       (Unsafe_int32.of_int (92))) )) in
      (let _jessie_235 = !out_0 in
      (let _jessie_236 = (0) in
      (let _jessie_237 = _jessie_235 in
      (upd  charP_charM_end_2_6 _jessie_237 _jessie_234 ))))) else ());
     begin
     (out_0 :=
      (shift_  !out_0
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 206 42 54# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ));
      begin
      any unit
      requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
      ensures {
        (#"/home/maria/ded-rep/escape_string_mem.c" 101 12 27#
        ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (1)))) } ;
       () end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 102 5 14#
      ((<) 
       (#"escape_string_mem.jc" 214 24 37# (sub_pointer_  !out_0 end_2 )) (0)
       ))
      then
       (let _jessie_240 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 104 9 29#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (Unsafe_int32.(+) 
         (Unsafe_int32.(%) 
          (Unsafe_int32.(/) 
           (#"/home/maria/ded-rep/escape_string_mem.c" 104 11 12#
           "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
           (#"escape_string_mem.jc" 221 64 77# "expl:Integer cast"
           (Unsafe_int32.of_int (64))) )
          (#"escape_string_mem.jc" 222 63 75# "expl:Integer cast"
          (Unsafe_int32.of_int (7))) )
         (#"escape_string_mem.jc" 223 62 75# "expl:Integer cast"
         (Unsafe_int32.of_int (48))) ) )) in
       (let _jessie_241 = !out_0 in
       (let _jessie_242 = (0) in
       (let _jessie_243 = _jessie_241 in
       (upd  charP_charM_end_2_6 _jessie_243 _jessie_240 ))))) else ());
      begin
      (out_0 :=
       (shift_  !out_0
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 225 42 54# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 108 12 27#
         ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (2)))) } ;
        () end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 109 5 14#
       ((<) 
        (#"escape_string_mem.jc" 233 24 37# (sub_pointer_  !out_0 end_2 ))
        (0) ))
       then
        (let _jessie_246 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 111 9 28#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (Unsafe_int32.(+) 
          (Unsafe_int32.(%) 
           (Unsafe_int32.(/) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 111 11 12#
            "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 240 64 76# "expl:Integer cast"
            (Unsafe_int32.of_int (8))) )
           (#"escape_string_mem.jc" 241 63 75# "expl:Integer cast"
           (Unsafe_int32.of_int (7))) )
          (#"escape_string_mem.jc" 242 62 75# "expl:Integer cast"
          (Unsafe_int32.of_int (48))) ) )) in
        (let _jessie_247 = !out_0 in
        (let _jessie_248 = (0) in
        (let _jessie_249 = _jessie_247 in
        (upd  charP_charM_end_2_6 _jessie_249 _jessie_246 ))))) else ());
       begin
       (out_0 :=
        (shift_  !out_0
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 244 42 54# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        any unit
        requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
        ensures {
          (#"/home/maria/ded-rep/escape_string_mem.c" 115 12 27#
          ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (3)))) } ;
         () end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 116 5 14#
        ((<) 
         (#"escape_string_mem.jc" 252 24 37# (sub_pointer_  !out_0 end_2 ))
         (0) ))
        then
         (let _jessie_252 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 118 9 22#
         "expl:Integer cast"
         (Unsafe_int8_of_Unsafe_int32.cast 
          (Unsafe_int32.(+) 
           (Unsafe_int32.(%) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 118 10 11#
            "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 257 63 75# "expl:Integer cast"
            (Unsafe_int32.of_int (7))) )
           (#"escape_string_mem.jc" 258 62 75# "expl:Integer cast"
           (Unsafe_int32.of_int (48))) ) )) in
         (let _jessie_253 = !out_0 in
         (let _jessie_254 = (0) in
         (let _jessie_255 = _jessie_253 in
         (upd  charP_charM_end_2_6 _jessie_255 _jessie_252 ))))) else ());
        begin
        (out_0 :=
         (shift_  !out_0
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 260 42 54# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         any unit
         requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
         ensures {
           (#"/home/maria/ded-rep/escape_string_mem.c" 122 12 27#
           ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (4))))
           } ; () end;
         begin
         (let _jessie_258 = !out_0 in
         (let _jessie_259 = dst_1 in
         (let _jessie_260 = (0) in
         (let _jessie_261 = _jessie_259 in
         (upd  char_xP_char_xM_dst_1_5 _jessie_261 _jessie_258 )))));
          begin
          (__retres_0 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 125 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 268 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) )));
           begin (return := !__retres_0); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
  let escape_octal_ensures_size_zero
  #"/home/maria/ded-rep/escape_string_mem.c" 94 12 64#
  "expl:Function escape_octal, behavior size_zero" =
  fun
   (c_1 : Uint8.t) (dst_1 : (pointer char_xP)) (end_2 : (pointer voidP))
   (charP_charM_end_2_6 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_1_5
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_1_5_alloc_table :
   (alloc_table char_xP)) (voidP_end_2_6_alloc_table : (alloc_table voidP))
   (voidP_end_2_6_tag_table : (tag_table voidP)) 
   requires {
   (((same_block (select !char_xP_char_xM_dst_1_5 dst_1) end_2) /\
    ((>=) (sub_pointer (select !char_xP_char_xM_dst_1_5 dst_1) end_2) (0)))
   /\
   (((allocated voidP_end_2_6_alloc_table end_2) ->
     (((=) (typeof voidP_end_2_6_tag_table end_2) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_2_6_alloc_table end_2) i) /\
       ((<) i (offset_max voidP_end_2_6_alloc_table end_2))) ->
       ((=) (typeof voidP_end_2_6_tag_table (shift end_2 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 10 21#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min voidP_end_2_6_alloc_table end_2) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max voidP_end_2_6_alloc_table end_2) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 53 25 36#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=) (offset_min char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=) (offset_max char_xP_dst_1_5_alloc_table dst_1) (0)))
    /\ (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 112 12 1091#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 54 6 27#
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((<=)
     (offset_min voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (0)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091#
     ((>=)
     (offset_max voidP_end_2_6_alloc_table
     (select !char_xP_char_xM_dst_1_5 dst_1)) (3)))
    /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091#
    ((#"escape_string_mem.jc" 112 12 1091# ((=) true true)) /\
    (#"escape_string_mem.jc" 112 12 1091# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 55 13 48#
   (same_block (select !char_xP_char_xM_dst_1_5 dst_1) end_2)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 133 10 23# "expl:Assigns clause"
       (not_assigns voidP_end_2_6_alloc_table voidP_end_2_6_alloc_table (old
       !charP_charM_end_2_6) !charP_charM_end_2_6 pset_empty))
      /\
      (#"escape_string_mem.jc" 133 10 23# "expl:Assigns clause"
      (not_assigns char_xP_dst_1_5_alloc_table char_xP_dst_1_5_alloc_table
      (old !char_xP_char_xM_dst_1_5) !char_xP_char_xM_dst_1_5
      (pset_singleton dst_1))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 59 16 38#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 59 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 59 16 38#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
      (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 60 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_0 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_0 = ref (Unsafe_enum__bool.any_  () ) in
    begin
    (out_0 := (acc  !char_xP_char_xM_dst_1_5 dst_1 ));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 98 5 14#
     ((<)  (#"escape_string_mem.jc" 204 21 34# (sub_pointer_  !out_0 end_2 ))
      (0) ))
     then
      (let _jessie_170 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 99 12 13#
      "expl:Integer cast"
      (Unsafe_int8_of_Unsafe_int32.cast 
       (#"escape_string_mem.jc" 205 57 70# "expl:Integer cast"
       (Unsafe_int32.of_int (92))) )) in
      (let _jessie_171 = !out_0 in
      (let _jessie_172 = (0) in
      (let _jessie_173 = _jessie_171 in
      (upd  charP_charM_end_2_6 _jessie_173 _jessie_170 ))))) else ());
     begin
     (out_0 :=
      (shift_  !out_0
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 206 42 54# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ));
      begin
      any unit
      requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
      ensures {
        (#"/home/maria/ded-rep/escape_string_mem.c" 101 12 27#
        ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (1)))) } ;
       () end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 102 5 14#
      ((<) 
       (#"escape_string_mem.jc" 214 24 37# (sub_pointer_  !out_0 end_2 )) (0)
       ))
      then
       (let _jessie_176 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 104 9 29#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (Unsafe_int32.(+) 
         (Unsafe_int32.(%) 
          (Unsafe_int32.(/) 
           (#"/home/maria/ded-rep/escape_string_mem.c" 104 11 12#
           "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
           (#"escape_string_mem.jc" 221 64 77# "expl:Integer cast"
           (Unsafe_int32.of_int (64))) )
          (#"escape_string_mem.jc" 222 63 75# "expl:Integer cast"
          (Unsafe_int32.of_int (7))) )
         (#"escape_string_mem.jc" 223 62 75# "expl:Integer cast"
         (Unsafe_int32.of_int (48))) ) )) in
       (let _jessie_177 = !out_0 in
       (let _jessie_178 = (0) in
       (let _jessie_179 = _jessie_177 in
       (upd  charP_charM_end_2_6 _jessie_179 _jessie_176 ))))) else ());
      begin
      (out_0 :=
       (shift_  !out_0
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 225 42 54# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 108 12 27#
         ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (2)))) } ;
        () end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 109 5 14#
       ((<) 
        (#"escape_string_mem.jc" 233 24 37# (sub_pointer_  !out_0 end_2 ))
        (0) ))
       then
        (let _jessie_182 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 111 9 28#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (Unsafe_int32.(+) 
          (Unsafe_int32.(%) 
           (Unsafe_int32.(/) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 111 11 12#
            "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 240 64 76# "expl:Integer cast"
            (Unsafe_int32.of_int (8))) )
           (#"escape_string_mem.jc" 241 63 75# "expl:Integer cast"
           (Unsafe_int32.of_int (7))) )
          (#"escape_string_mem.jc" 242 62 75# "expl:Integer cast"
          (Unsafe_int32.of_int (48))) ) )) in
        (let _jessie_183 = !out_0 in
        (let _jessie_184 = (0) in
        (let _jessie_185 = _jessie_183 in
        (upd  charP_charM_end_2_6 _jessie_185 _jessie_182 ))))) else ());
       begin
       (out_0 :=
        (shift_  !out_0
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 244 42 54# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        any unit
        requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
        ensures {
          (#"/home/maria/ded-rep/escape_string_mem.c" 115 12 27#
          ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (3)))) } ;
         () end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 116 5 14#
        ((<) 
         (#"escape_string_mem.jc" 252 24 37# (sub_pointer_  !out_0 end_2 ))
         (0) ))
        then
         (let _jessie_188 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 118 9 22#
         "expl:Integer cast"
         (Unsafe_int8_of_Unsafe_int32.cast 
          (Unsafe_int32.(+) 
           (Unsafe_int32.(%) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 118 10 11#
            "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_1 ))
            (#"escape_string_mem.jc" 257 63 75# "expl:Integer cast"
            (Unsafe_int32.of_int (7))) )
           (#"escape_string_mem.jc" 258 62 75# "expl:Integer cast"
           (Unsafe_int32.of_int (48))) ) )) in
         (let _jessie_189 = !out_0 in
         (let _jessie_190 = (0) in
         (let _jessie_191 = _jessie_189 in
         (upd  charP_charM_end_2_6 _jessie_191 _jessie_188 ))))) else ());
        begin
        (out_0 :=
         (shift_  !out_0
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 260 42 54# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         any unit
         requires { true } reads { char_xP_char_xM_dst_1_5, dst_1 }
         ensures {
           (#"/home/maria/ded-rep/escape_string_mem.c" 122 12 27#
           ((=) !out_0 (shift (select !char_xP_char_xM_dst_1_5 dst_1) (4))))
           } ; () end;
         begin
         (let _jessie_194 = !out_0 in
         (let _jessie_195 = dst_1 in
         (let _jessie_196 = (0) in
         (let _jessie_197 = _jessie_195 in
         (upd  char_xP_char_xM_dst_1_5 _jessie_197 _jessie_194 )))));
          begin
          (__retres_0 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 125 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 268 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) )));
           begin (return := !__retres_0); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
end

module Safe_int8_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { (Int8.in_bounds (Uint8.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint8.to_int n)) }
  
end

module Function_escape_passthrough_safety
#"/home/maria/ded-rep/escape_string_mem.c" 147 12 70#
"expl:escape_passthrough, safety"

  use enum.Uint8 
  
  use Safe_int8_of_Safe_uint8 
  
  use Safe_int32 
  
  use Safe_enum__bool_of_Safe_int32 
  
  use Safe_enum__bool 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_upd_safe 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_sub_pointer_safe 
  
  use import core.Jessie_shift_safe 
  
  use import core.Jessie_return 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_charp_tag_id 
  
  use import core.Jessie_any_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_acc_safe 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  let escape_passthrough
  #"/home/maria/ded-rep/escape_string_mem.c" 147 12 70#
  "expl:Function escape_passthrough, safety" =
  fun
   (c_2 : Uint8.t) (dst_2 : (pointer char_xP)) (end_3 : (pointer voidP))
   (charP_charM_end_3_8 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_2_7
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_2_7_alloc_table :
   (alloc_table char_xP)) (voidP_end_3_8_alloc_table : (alloc_table voidP))
   (voidP_end_3_8_tag_table : (tag_table voidP)) 
   requires {
   (((allocated voidP_end_3_8_alloc_table end_3) ->
     (((=) (typeof voidP_end_3_8_tag_table end_3) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_3_8_alloc_table end_3) i) /\
       ((<) i (offset_max voidP_end_3_8_alloc_table end_3))) ->
       ((=) (typeof voidP_end_3_8_tag_table (shift end_3 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 275 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 129 10 21#
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((<=) (offset_min voidP_end_3_8_alloc_table end_3) (0)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((>=) (offset_max voidP_end_3_8_alloc_table end_3) (0)))
    /\ (#"escape_string_mem.jc" 275 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 275 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 129 25 36#
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((<=) (offset_min char_xP_dst_2_7_alloc_table dst_2) (0)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((>=) (offset_max char_xP_dst_2_7_alloc_table dst_2) (0)))
    /\ (#"escape_string_mem.jc" 275 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 275 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 130 5 26#
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((<=)
     (offset_min voidP_end_3_8_alloc_table
     (select !char_xP_char_xM_dst_2_7 dst_2)) (0)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((>=)
     (offset_max voidP_end_3_8_alloc_table
     (select !char_xP_char_xM_dst_2_7 dst_2)) (1)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 275 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 131 13 48#
   (same_block (select !char_xP_char_xM_dst_2_7 dst_2) end_3))))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_enum__bool.any_  () ) in
   try
    begin
    (); ();
     (let out_1 = ref (any_pointer  () : (pointer voidP)) in
     (let __retres_1 = ref (Safe_enum__bool.any_  () ) in
     begin
     (out_1 :=
      (let _jessie_399 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 149 13 17#
      "expl:Pointer dereference"
      (acc  char_xP_dst_2_7_alloc_table !char_xP_char_xM_dst_2_7 dst_2 )) in
      begin
      (assert {
      (#"/home/maria/ded-rep/escape_string_mem.c" 149 1 5#
      "expl:Pointer index bounds" true) }); _jessie_399 end));
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 151 5 14#
      ((<) 
       (#"escape_string_mem.jc" 330 22 35# (sub_pointer_  !out_1 end_3 )) (0)
       ))
      then
       begin
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_2_7, dst_2 }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 153 13 24#
         ((=) !out_1 (select !char_xP_char_xM_dst_2_7 dst_2))) } ; () end;
        (let _jessie_401 =
        (let _jessie_400 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 154 9 16#
        "expl:Integer cast" (Safe_int8_of_Safe_uint8.cast  c_2 )) in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 154 2 16#
        "expl:Pointer index bounds" true) }); _jessie_400 end) in
        (let _jessie_402 = !out_1 in
        (let _jessie_403 = (0) in
        (let _jessie_404 = _jessie_402 in
        (#"/home/maria/ded-rep/escape_string_mem.c" 154 2 16#
        "expl:Pointer dereference"
        (upd  voidP_end_3_8_alloc_table charP_charM_end_3_8 _jessie_402
         _jessie_401 )))))) end else ());
      begin
      (let _jessie_406 =
      (let _jessie_405 =
      (shift_typesafe  !out_1
       (Safe_int32.to_int 
        (#"escape_string_mem.jc" 338 63 75# "expl:Integer cast"
        (Safe_int32.of_int (1))) ) ) in
      begin
      (assert {
      (#"/home/maria/ded-rep/escape_string_mem.c" 155 1 15#
      "expl:Pointer index bounds" true) }); _jessie_405 end) in
      (let _jessie_407 = dst_2 in
      (let _jessie_408 = (0) in
      (let _jessie_409 = _jessie_407 in
      (#"/home/maria/ded-rep/escape_string_mem.c" 155 1 15#
      "expl:Pointer dereference"
      (upd  char_xP_dst_2_7_alloc_table char_xP_char_xM_dst_2_7 _jessie_407
       _jessie_406 ))))));
       begin
       (__retres_1 :=
        (let _jessie_410 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 156 8 12#
        "expl:Integer cast"
        (Safe_enum__bool_of_Safe_int32.cast 
         (#"escape_string_mem.jc" 339 41 53# "expl:Integer cast"
         (Safe_int32.of_int (1))) )) in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 156 1 13#
        "expl:Pointer index bounds" true) }); _jessie_410 end));
        begin
        (return :=
         (let _jessie_411 = !__retres_1 in
         begin
         (assert {
         (#"escape_string_mem.jc" 341 7 24# "expl:Pointer index bounds" true)
         }); _jessie_411 end)); (raise Return) end end end end)); absurd  end
    with Return -> !return end)
  
end

module Unsafe_int8_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint8.to_int n)) }
  
end

module Function_escape_passthrough_behaviors
#"/home/maria/ded-rep/escape_string_mem.c" 147 12 70#
"expl:escape_passthrough, behaviors"

  use Unsafe_int8_of_Unsafe_uint8 
  
  use Unsafe_int32 
  
  use Unsafe_enum__bool_of_Unsafe_int32 
  
  use Unsafe_enum__bool 
  
  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_upd_unsafe 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_sub_pointer_unsafe 
  
  use import core.Jessie_shift_unsafe 
  
  use import core.Jessie_return 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_charp_tag_id 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_any_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_acc_unsafe 
  
  use Int8_of_Uint8 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  let escape_passthrough_ensures_default
  #"/home/maria/ded-rep/escape_string_mem.c" 147 12 70#
  "expl:Function escape_passthrough, default behavior" =
  fun
   (c_2 : Uint8.t) (dst_2 : (pointer char_xP)) (end_3 : (pointer voidP))
   (charP_charM_end_3_8 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_2_7
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_2_7_alloc_table :
   (alloc_table char_xP)) (voidP_end_3_8_alloc_table : (alloc_table voidP))
   (voidP_end_3_8_tag_table : (tag_table voidP)) 
   requires {
   (((allocated voidP_end_3_8_alloc_table end_3) ->
     (((=) (typeof voidP_end_3_8_tag_table end_3) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_3_8_alloc_table end_3) i) /\
       ((<) i (offset_max voidP_end_3_8_alloc_table end_3))) ->
       ((=) (typeof voidP_end_3_8_tag_table (shift end_3 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 275 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 129 10 21#
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((<=) (offset_min voidP_end_3_8_alloc_table end_3) (0)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((>=) (offset_max voidP_end_3_8_alloc_table end_3) (0)))
    /\ (#"escape_string_mem.jc" 275 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 275 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 129 25 36#
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((<=) (offset_min char_xP_dst_2_7_alloc_table dst_2) (0)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((>=) (offset_max char_xP_dst_2_7_alloc_table dst_2) (0)))
    /\ (#"escape_string_mem.jc" 275 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 275 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 130 5 26#
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((<=)
     (offset_min voidP_end_3_8_alloc_table
     (select !char_xP_char_xM_dst_2_7 dst_2)) (0)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((>=)
     (offset_max voidP_end_3_8_alloc_table
     (select !char_xP_char_xM_dst_2_7 dst_2)) (1)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 275 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 131 13 48#
   (same_block (select !char_xP_char_xM_dst_2_7 dst_2) end_3))))))))) }
   ensures { ("expl:Postcondition" ("expl:Ensures clause" true)) }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (check {
    (#"escape_string_mem.jc" 311 10 407# "expl:Behavior disjointness check"
    (not
    ((same_block (select !char_xP_char_xM_dst_2_7 dst_2) end_3) /\
    (((>=) (sub_pointer (select !char_xP_char_xM_dst_2_7 dst_2) end_3) (0))
    /\
    ((same_block (select !char_xP_char_xM_dst_2_7 dst_2) end_3) /\
    ((<) (sub_pointer (select !char_xP_char_xM_dst_2_7 dst_2) end_3) (0)))))))
    });
     (check {
     (#"escape_string_mem.jc" 318 10 388# "expl:Behavior completeness check"
     (((same_block (select !char_xP_char_xM_dst_2_7 dst_2) end_3) /\
      ((<) (sub_pointer (select !char_xP_char_xM_dst_2_7 dst_2) end_3) (0)))
     \/
     ((same_block (select !char_xP_char_xM_dst_2_7 dst_2) end_3) /\
     ((>=) (sub_pointer (select !char_xP_char_xM_dst_2_7 dst_2) end_3) (0)))))
     });
     (let out_1 = ref (any_pointer  () : (pointer voidP)) in
     (let __retres_1 = ref (Unsafe_enum__bool.any_  () ) in
     begin
     (out_1 := (acc  !char_xP_char_xM_dst_2_7 dst_2 ));
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 151 5 14#
      ((<) 
       (#"escape_string_mem.jc" 330 22 35# (sub_pointer_  !out_1 end_3 )) (0)
       ))
      then
       begin
       begin
       (assert {
       (#"/home/maria/ded-rep/escape_string_mem.c" 153 13 24#
       "expl:Assertion in line 153"
       ((=) !out_1 (select !char_xP_char_xM_dst_2_7 dst_2))) }); () end;
        (let _jessie_362 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 154 9 16#
        "expl:Integer cast" (Unsafe_int8_of_Unsafe_uint8.cast  c_2 )) in
        (let _jessie_363 = !out_1 in
        (let _jessie_364 = (0) in
        (let _jessie_365 = _jessie_363 in
        (upd  charP_charM_end_3_8 _jessie_365 _jessie_362 ))))) end else ());
      begin
      (let _jessie_367 =
      (shift_  !out_1
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 338 63 75# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ) in
      (let _jessie_368 = dst_2 in
      (let _jessie_369 = (0) in
      (let _jessie_370 = _jessie_368 in
      (upd  char_xP_char_xM_dst_2_7 _jessie_370 _jessie_367 )))));
       begin
       (__retres_1 :=
        (#"/home/maria/ded-rep/escape_string_mem.c" 156 8 12#
        "expl:Integer cast"
        (Unsafe_enum__bool_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 339 41 53# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) )));
        begin (return := !__retres_1); (raise Return) end end end end));
     absurd  end with Return -> !return end)
  
  let escape_passthrough_ensures_size_one
  #"/home/maria/ded-rep/escape_string_mem.c" 147 12 70#
  "expl:Function escape_passthrough, behavior size_one" =
  fun
   (c_2 : Uint8.t) (dst_2 : (pointer char_xP)) (end_3 : (pointer voidP))
   (charP_charM_end_3_8 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_2_7
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_2_7_alloc_table :
   (alloc_table char_xP)) (voidP_end_3_8_alloc_table : (alloc_table voidP))
   (voidP_end_3_8_tag_table : (tag_table voidP)) 
   requires {
   (((same_block (select !char_xP_char_xM_dst_2_7 dst_2) end_3) /\
    ((<) (sub_pointer (select !char_xP_char_xM_dst_2_7 dst_2) end_3) (0)))
   /\
   (((allocated voidP_end_3_8_alloc_table end_3) ->
     (((=) (typeof voidP_end_3_8_tag_table end_3) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_3_8_alloc_table end_3) i) /\
       ((<) i (offset_max voidP_end_3_8_alloc_table end_3))) ->
       ((=) (typeof voidP_end_3_8_tag_table (shift end_3 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 275 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 129 10 21#
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((<=) (offset_min voidP_end_3_8_alloc_table end_3) (0)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((>=) (offset_max voidP_end_3_8_alloc_table end_3) (0)))
    /\ (#"escape_string_mem.jc" 275 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 275 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 129 25 36#
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((<=) (offset_min char_xP_dst_2_7_alloc_table dst_2) (0)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((>=) (offset_max char_xP_dst_2_7_alloc_table dst_2) (0)))
    /\ (#"escape_string_mem.jc" 275 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 275 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 130 5 26#
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((<=)
     (offset_min voidP_end_3_8_alloc_table
     (select !char_xP_char_xM_dst_2_7 dst_2)) (0)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((>=)
     (offset_max voidP_end_3_8_alloc_table
     (select !char_xP_char_xM_dst_2_7 dst_2)) (1)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 275 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 131 13 48#
   (same_block (select !char_xP_char_xM_dst_2_7 dst_2) end_3)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 303 10 46# "expl:Assigns clause"
       (not_assigns voidP_end_3_8_alloc_table voidP_end_3_8_alloc_table (old
       !charP_charM_end_3_8) !charP_charM_end_3_8
       (pset_singleton (select (old !char_xP_char_xM_dst_2_7) dst_2))))
      /\
      (#"escape_string_mem.jc" 303 10 46# "expl:Assigns clause"
      (not_assigns char_xP_dst_2_7_alloc_table char_xP_dst_2_7_alloc_table
      (old !char_xP_char_xM_dst_2_7) !char_xP_char_xM_dst_2_7
      (pset_singleton dst_2))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 140 16 38#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 140 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 140 16 38#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_2_7 dst_2)
      (shift (select (old !char_xP_char_xM_dst_2_7) dst_2) (1))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 140 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 141 16 38#
      "expl:Ensures clause"
      (Int8.(=)
      (select (old !charP_charM_end_3_8)
      (select (old !char_xP_char_xM_dst_2_7) dst_2))
      (#"escape_string_mem.jc" 308 35 57# "expl:Integer cast"
      (Int8_of_Uint8.cast c_2))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 142 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (); ();
     (let out_1 = ref (any_pointer  () : (pointer voidP)) in
     (let __retres_1 = ref (Unsafe_enum__bool.any_  () ) in
     begin
     (out_1 := (acc  !char_xP_char_xM_dst_2_7 dst_2 ));
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 151 5 14#
      ((<) 
       (#"escape_string_mem.jc" 330 22 35# (sub_pointer_  !out_1 end_3 )) (0)
       ))
      then
       begin
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_2_7, dst_2 }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 153 13 24#
         ((=) !out_1 (select !char_xP_char_xM_dst_2_7 dst_2))) } ; () end;
        (let _jessie_388 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 154 9 16#
        "expl:Integer cast" (Unsafe_int8_of_Unsafe_uint8.cast  c_2 )) in
        (let _jessie_389 = !out_1 in
        (let _jessie_390 = (0) in
        (let _jessie_391 = _jessie_389 in
        (upd  charP_charM_end_3_8 _jessie_391 _jessie_388 ))))) end else ());
      begin
      (let _jessie_393 =
      (shift_  !out_1
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 338 63 75# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ) in
      (let _jessie_394 = dst_2 in
      (let _jessie_395 = (0) in
      (let _jessie_396 = _jessie_394 in
      (upd  char_xP_char_xM_dst_2_7 _jessie_396 _jessie_393 )))));
       begin
       (__retres_1 :=
        (#"/home/maria/ded-rep/escape_string_mem.c" 156 8 12#
        "expl:Integer cast"
        (Unsafe_enum__bool_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 339 41 53# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) )));
        begin (return := !__retres_1); (raise Return) end end end end));
     absurd  end with Return -> !return end)
  
  let escape_passthrough_ensures_size_zero
  #"/home/maria/ded-rep/escape_string_mem.c" 147 12 70#
  "expl:Function escape_passthrough, behavior size_zero" =
  fun
   (c_2 : Uint8.t) (dst_2 : (pointer char_xP)) (end_3 : (pointer voidP))
   (charP_charM_end_3_8 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_2_7
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_2_7_alloc_table :
   (alloc_table char_xP)) (voidP_end_3_8_alloc_table : (alloc_table voidP))
   (voidP_end_3_8_tag_table : (tag_table voidP)) 
   requires {
   (((same_block (select !char_xP_char_xM_dst_2_7 dst_2) end_3) /\
    ((>=) (sub_pointer (select !char_xP_char_xM_dst_2_7 dst_2) end_3) (0)))
   /\
   (((allocated voidP_end_3_8_alloc_table end_3) ->
     (((=) (typeof voidP_end_3_8_tag_table end_3) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_3_8_alloc_table end_3) i) /\
       ((<) i (offset_max voidP_end_3_8_alloc_table end_3))) ->
       ((=) (typeof voidP_end_3_8_tag_table (shift end_3 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 275 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 129 10 21#
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((<=) (offset_min voidP_end_3_8_alloc_table end_3) (0)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((>=) (offset_max voidP_end_3_8_alloc_table end_3) (0)))
    /\ (#"escape_string_mem.jc" 275 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 275 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 129 25 36#
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((<=) (offset_min char_xP_dst_2_7_alloc_table dst_2) (0)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((>=) (offset_max char_xP_dst_2_7_alloc_table dst_2) (0)))
    /\ (#"escape_string_mem.jc" 275 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 275 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 130 5 26#
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((<=)
     (offset_min voidP_end_3_8_alloc_table
     (select !char_xP_char_xM_dst_2_7 dst_2)) (0)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071#
     ((>=)
     (offset_max voidP_end_3_8_alloc_table
     (select !char_xP_char_xM_dst_2_7 dst_2)) (1)))
    /\
    (#"escape_string_mem.jc" 275 12 1071#
    ((#"escape_string_mem.jc" 275 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 275 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 131 13 48#
   (same_block (select !char_xP_char_xM_dst_2_7 dst_2) end_3)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 296 10 23# "expl:Assigns clause"
       (not_assigns voidP_end_3_8_alloc_table voidP_end_3_8_alloc_table (old
       !charP_charM_end_3_8) !charP_charM_end_3_8 pset_empty))
      /\
      (#"escape_string_mem.jc" 296 10 23# "expl:Assigns clause"
      (not_assigns char_xP_dst_2_7_alloc_table char_xP_dst_2_7_alloc_table
      (old !char_xP_char_xM_dst_2_7) !char_xP_char_xM_dst_2_7
      (pset_singleton dst_2))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 135 16 38#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 135 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 135 16 38#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_2_7 dst_2)
      (shift (select (old !char_xP_char_xM_dst_2_7) dst_2) (1))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 136 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (); ();
     (let out_1 = ref (any_pointer  () : (pointer voidP)) in
     (let __retres_1 = ref (Unsafe_enum__bool.any_  () ) in
     begin
     (out_1 := (acc  !char_xP_char_xM_dst_2_7 dst_2 ));
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 151 5 14#
      ((<) 
       (#"escape_string_mem.jc" 330 22 35# (sub_pointer_  !out_1 end_3 )) (0)
       ))
      then
       begin
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_2_7, dst_2 }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 153 13 24#
         ((=) !out_1 (select !char_xP_char_xM_dst_2_7 dst_2))) } ; () end;
        (let _jessie_375 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 154 9 16#
        "expl:Integer cast" (Unsafe_int8_of_Unsafe_uint8.cast  c_2 )) in
        (let _jessie_376 = !out_1 in
        (let _jessie_377 = (0) in
        (let _jessie_378 = _jessie_376 in
        (upd  charP_charM_end_3_8 _jessie_378 _jessie_375 ))))) end else ());
      begin
      (let _jessie_380 =
      (shift_  !out_1
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 338 63 75# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ) in
      (let _jessie_381 = dst_2 in
      (let _jessie_382 = (0) in
      (let _jessie_383 = _jessie_381 in
      (upd  char_xP_char_xM_dst_2_7 _jessie_383 _jessie_380 )))));
       begin
       (__retres_1 :=
        (#"/home/maria/ded-rep/escape_string_mem.c" 156 8 12#
        "expl:Integer cast"
        (Unsafe_enum__bool_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 339 41 53# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) )));
        begin (return := !__retres_1); (raise Return) end end end end));
     absurd  end with Return -> !return end)
  
end

theory Axiomatic_Es_Space

  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function escape_space int : Int8.t
  
  axiom N #"/home/maria/ded-rep/escape_string_mem.c" 162 11 37#
  "expl:Axiom N" :
  (#"/home/maria/ded-rep/escape_string_mem.c" 162 11 37#
  (Int8.(=)
  (escape_space
  (Int8.to_int (#"escape_string_mem.jc" 350 27 39# "expl:Integer cast"
  (Int8.of_int (10))))) (#"escape_string_mem.jc" 350 56 69#
  "expl:Integer cast" (Int8.of_int (110)))))
  
  axiom R #"/home/maria/ded-rep/escape_string_mem.c" 163 11 37#
  "expl:Axiom R" :
  (#"/home/maria/ded-rep/escape_string_mem.c" 163 11 37#
  (Int8.(=)
  (escape_space
  (Int8.to_int (#"escape_string_mem.jc" 353 27 39# "expl:Integer cast"
  (Int8.of_int (13))))) (#"escape_string_mem.jc" 353 56 69#
  "expl:Integer cast" (Int8.of_int (114)))))
  
  axiom T #"/home/maria/ded-rep/escape_string_mem.c" 164 11 37#
  "expl:Axiom T" :
  (#"/home/maria/ded-rep/escape_string_mem.c" 164 11 37#
  (Int8.(=)
  (escape_space
  (Int8.to_int (#"escape_string_mem.jc" 356 27 38# "expl:Integer cast"
  (Int8.of_int (9))))) (#"escape_string_mem.jc" 356 55 68#
  "expl:Integer cast" (Int8.of_int (116)))))
  
  axiom V #"/home/maria/ded-rep/escape_string_mem.c" 165 11 37#
  "expl:Axiom V" :
  (#"/home/maria/ded-rep/escape_string_mem.c" 165 11 37#
  (Int8.(=)
  (escape_space
  (Int8.to_int (#"escape_string_mem.jc" 359 27 39# "expl:Integer cast"
  (Int8.of_int (11))))) (#"escape_string_mem.jc" 359 56 69#
  "expl:Integer cast" (Int8.of_int (118)))))
  
  axiom F #"/home/maria/ded-rep/escape_string_mem.c" 166 11 37#
  "expl:Axiom F" :
  (#"/home/maria/ded-rep/escape_string_mem.c" 166 11 37#
  (Int8.(=)
  (escape_space
  (Int8.to_int (#"escape_string_mem.jc" 362 27 39# "expl:Integer cast"
  (Int8.of_int (12))))) (#"escape_string_mem.jc" 362 56 69#
  "expl:Integer cast" (Int8.of_int (102)))))
  
end

module Safe_uint8_of_Safe_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { (Uint8.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int32.to_int n)) }
  
end

module Function_escape_space_0_safety
#"/home/maria/ded-rep/escape_string_mem.c" 209 12 64#
"expl:escape_space, safety"

  use enum.Uint8 
  
  use Safe_uint8_of_Safe_int32 
  
  use Safe_uint8 
  
  use Safe_int8_of_Safe_uint8 
  
  use Safe_int8_of_Safe_int32 
  
  use Safe_int32_of_Safe_uint8 
  
  use Safe_int32 
  
  use Safe_enum__bool_of_Safe_int32 
  
  use Safe_enum__bool 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_upd_safe 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_sub_pointer_safe 
  
  use import core.Jessie_shift_safe 
  
  use import core.Jessie_return 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_charp_tag_id 
  
  use import core.Jessie_any_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_acc_safe 
  
  use enum.Int8 
  
  use import int.Int 
  
  use import Exceptions 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  let escape_space_0 #"/home/maria/ded-rep/escape_string_mem.c" 209 12 64#
  "expl:Function escape_space, safety" =
  fun
   (c_3 : Uint8.t) (dst_3 : (pointer char_xP)) (end_4 : (pointer voidP))
   (charP_charM_end_4_10 : ref (memory voidP Int8.t))
   (char_xP_char_xM_dst_3_9 : ref (memory char_xP (pointer voidP)))
   (char_xP_dst_3_9_alloc_table : (alloc_table char_xP))
   (voidP_end_4_10_alloc_table : (alloc_table voidP))
   (voidP_end_4_10_tag_table : (tag_table voidP)) 
   requires {
   (((allocated voidP_end_4_10_alloc_table end_4) ->
     (((=) (typeof voidP_end_4_10_tag_table end_4) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_4_10_alloc_table end_4) i) /\
       ((<) i (offset_max voidP_end_4_10_alloc_table end_4))) ->
       ((=) (typeof voidP_end_4_10_tag_table (shift end_4 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 171 10 21#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=) (offset_min voidP_end_4_10_alloc_table end_4) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=) (offset_max voidP_end_4_10_alloc_table end_4) (0)))
    /\ (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 171 25 36#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=) (offset_min char_xP_dst_3_9_alloc_table dst_3) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=) (offset_max char_xP_dst_3_9_alloc_table dst_3) (0)))
    /\ (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 172 6 27#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=)
     (offset_min voidP_end_4_10_alloc_table
     (select !char_xP_char_xM_dst_3_9 dst_3)) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=)
     (offset_max voidP_end_4_10_alloc_table
     (select !char_xP_char_xM_dst_3_9 dst_3)) (1)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 173 13 48#
   (same_block (select !char_xP_char_xM_dst_3_9 dst_3) end_4))))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_enum__bool.any_  () ) in
   try
    begin
    (let out_2 = ref (any_pointer  () : (pointer voidP)) in
    (let to_why3 = ref (Safe_uint8.any_  () ) in
    (let __retres_2 = ref (Safe_enum__bool.any_  () ) in
    try
     begin
     try
      begin
      (out_2 :=
       (let _jessie_547 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 211 13 17#
       "expl:Pointer dereference"
       (acc  char_xP_dst_3_9_alloc_table !char_xP_char_xM_dst_3_9 dst_3 )) in
       begin
       (assert {
       (#"/home/maria/ded-rep/escape_string_mem.c" 211 1 5#
       "expl:Pointer index bounds" true) }); _jessie_547 end));
       (let _jessie_4 =
       (let _jessie_548 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 214 9 10#
       "expl:Integer cast" (Safe_int32_of_Safe_uint8.cast  c_3 )) in
       begin (assert { ("expl:Pointer index bounds" true) }); _jessie_548 end)
       in
       begin
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
       (Safe_int32.(=)  _jessie_4
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        "expl:Integer cast" (Safe_int32.of_int (10))) ))
       then
        begin
        (to_why3 :=
         (let _jessie_549 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 216 9 10#
         "expl:Integer cast"
         (Safe_uint8_of_Safe_int32.cast 
          (#"escape_string_mem.jc" 448 38 52# "expl:Integer cast"
          (Safe_int32.of_int (110))) )) in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 216 2 10#
         "expl:Pointer index bounds" true) }); _jessie_549 end));
         (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Safe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Safe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Safe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Safe_int32.of_int (10))) ))))
        then
         begin
         (to_why3 :=
          (let _jessie_550 =
          (#"/home/maria/ded-rep/escape_string_mem.c" 219 9 10#
          "expl:Integer cast"
          (Safe_uint8_of_Safe_int32.cast 
           (#"escape_string_mem.jc" 453 38 52# "expl:Integer cast"
           (Safe_int32.of_int (114))) )) in
          begin
          (assert {
          (#"/home/maria/ded-rep/escape_string_mem.c" 219 2 10#
          "expl:Pointer index bounds" true) }); _jessie_550 end));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Safe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Safe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Safe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Safe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Safe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Safe_int32.of_int (10))) ))))))
        then
         begin
         (to_why3 :=
          (let _jessie_551 =
          (#"/home/maria/ded-rep/escape_string_mem.c" 222 9 10#
          "expl:Integer cast"
          (Safe_uint8_of_Safe_int32.cast 
           (#"escape_string_mem.jc" 458 38 52# "expl:Integer cast"
           (Safe_int32.of_int (116))) )) in
          begin
          (assert {
          (#"/home/maria/ded-rep/escape_string_mem.c" 222 2 10#
          "expl:Pointer index bounds" true) }); _jessie_551 end));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
         (Safe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
          "expl:Integer cast" (Safe_int32.of_int (11))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Safe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Safe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Safe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Safe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Safe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Safe_int32.of_int (10))) ))))))))
        then
         begin
         (to_why3 :=
          (let _jessie_552 =
          (#"/home/maria/ded-rep/escape_string_mem.c" 225 9 10#
          "expl:Integer cast"
          (Safe_uint8_of_Safe_int32.cast 
           (#"escape_string_mem.jc" 463 38 52# "expl:Integer cast"
           (Safe_int32.of_int (118))) )) in
          begin
          (assert {
          (#"/home/maria/ded-rep/escape_string_mem.c" 225 2 10#
          "expl:Pointer index bounds" true) }); _jessie_552 end));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 227 9 10#
         (Safe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 227 9 10#
          "expl:Integer cast" (Safe_int32.of_int (12))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
         (Safe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
          "expl:Integer cast" (Safe_int32.of_int (11))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Safe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Safe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Safe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Safe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Safe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Safe_int32.of_int (10))) ))))))))))
        then
         begin
         (to_why3 :=
          (let _jessie_553 =
          (#"/home/maria/ded-rep/escape_string_mem.c" 228 9 10#
          "expl:Integer cast"
          (Safe_uint8_of_Safe_int32.cast 
           (#"escape_string_mem.jc" 468 38 52# "expl:Integer cast"
           (Safe_int32.of_int (102))) )) in
          begin
          (assert {
          (#"/home/maria/ded-rep/escape_string_mem.c" 228 2 10#
          "expl:Pointer index bounds" true) }); _jessie_553 end));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if (true)
        then
         begin
         ();
          begin
          (__retres_2 :=
           (let _jessie_554 =
           (#"/home/maria/ded-rep/escape_string_mem.c" 231 9 14#
           "expl:Integer cast"
           (Safe_enum__bool_of_Safe_int32.cast 
            (#"escape_string_mem.jc" 474 46 58# "expl:Integer cast"
            (Safe_int32.of_int (0))) )) in
           begin
           (assert {
           (#"/home/maria/ded-rep/escape_string_mem.c" 231 2 15#
           "expl:Pointer index bounds" true) }); _jessie_554 end));
           (raise (Return_label_exc ())) end end else ()) end);
       (raise (Goto_switch_0_break_exc ())) end with Goto_switch_0_break_exc
      _jessie_2 ->
      'Switch_0_break:
      'Switch_0_break:
      begin
      ();
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 234 5 14#
       ((<) 
        (#"escape_string_mem.jc" 480 22 35# (sub_pointer_  !out_2 end_4 ))
        (0) ))
       then
        (let _jessie_556 =
        (let _jessie_555 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 235 12 13#
        "expl:Integer cast"
        (Safe_int8_of_Safe_int32.cast 
         (#"escape_string_mem.jc" 481 59 72# "expl:Integer cast"
         (Safe_int32.of_int (92))) )) in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 235 2 13#
        "expl:Pointer index bounds" true) }); _jessie_555 end) in
        (let _jessie_557 = !out_2 in
        (let _jessie_558 = (0) in
        (let _jessie_559 = _jessie_557 in
        (#"/home/maria/ded-rep/escape_string_mem.c" 235 2 13#
        "expl:Pointer dereference"
        (upd  voidP_end_4_10_alloc_table charP_charM_end_4_10 _jessie_557
         _jessie_556 )))))) else ());
       begin
       (out_2 :=
        (let _jessie_560 =
        (shift_typesafe  !out_2
         (Safe_int32.to_int 
          (#"escape_string_mem.jc" 482 44 56# "expl:Integer cast"
          (Safe_int32.of_int (1))) ) ) in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 236 1 6#
        "expl:Pointer index bounds" true) }); _jessie_560 end));
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 237 5 14#
        ((<) 
         (#"escape_string_mem.jc" 483 22 35# (sub_pointer_  !out_2 end_4 ))
         (0) ))
        then
         (let _jessie_562 =
         (let _jessie_561 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 238 9 11#
         "expl:Integer cast" (Safe_int8_of_Safe_uint8.cast  !to_why3 )) in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 238 2 11#
         "expl:Pointer index bounds" true) }); _jessie_561 end) in
         (let _jessie_563 = !out_2 in
         (let _jessie_564 = (0) in
         (let _jessie_565 = _jessie_563 in
         (#"/home/maria/ded-rep/escape_string_mem.c" 238 2 11#
         "expl:Pointer dereference"
         (upd  voidP_end_4_10_alloc_table charP_charM_end_4_10 _jessie_563
          _jessie_562 )))))) else ());
        begin
        (out_2 :=
         (let _jessie_566 =
         (shift_typesafe  !out_2
          (Safe_int32.to_int 
           (#"escape_string_mem.jc" 485 44 56# "expl:Integer cast"
           (Safe_int32.of_int (1))) ) ) in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 239 1 6#
         "expl:Pointer index bounds" true) }); _jessie_566 end));
         begin
         (let _jessie_568 =
         (let _jessie_567 = !out_2 in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 241 1 11#
         "expl:Pointer index bounds" true) }); _jessie_567 end) in
         (let _jessie_569 = dst_3 in
         (let _jessie_570 = (0) in
         (let _jessie_571 = _jessie_569 in
         (#"/home/maria/ded-rep/escape_string_mem.c" 241 1 11#
         "expl:Pointer dereference"
         (upd  char_xP_dst_3_9_alloc_table char_xP_char_xM_dst_3_9
          _jessie_569 _jessie_568 ))))));
          (__retres_2 :=
           (let _jessie_572 =
           (#"/home/maria/ded-rep/escape_string_mem.c" 242 8 12#
           "expl:Integer cast"
           (Safe_enum__bool_of_Safe_int32.cast 
            (#"escape_string_mem.jc" 487 41 53# "expl:Integer cast"
            (Safe_int32.of_int (1))) )) in
           begin
           (assert {
           (#"/home/maria/ded-rep/escape_string_mem.c" 242 1 13#
           "expl:Pointer index bounds" true) }); _jessie_572 end)) end end
       end end end; (raise (Return_label_exc ())) end with Return_label_exc
     _jessie_3 ->
     'Return_label:
     'Return_label:
     begin
     (return :=
      (let _jessie_573 = !__retres_2 in
      begin
      (assert {
      (#"escape_string_mem.jc" 489 7 24# "expl:Pointer index bounds" true) });
       _jessie_573 end)); (raise Return) end end))); absurd  end with Return
    -> !return end)
  
end

module Unsafe_uint8_of_Unsafe_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int32.to_int n)) }
  
end

module Function_escape_space_0_behaviors
#"/home/maria/ded-rep/escape_string_mem.c" 209 12 64#
"expl:escape_space, behaviors"

  use Unsafe_uint8_of_Unsafe_int32 
  
  use Unsafe_uint8 
  
  use Unsafe_int8_of_Unsafe_uint8 
  
  use Unsafe_int8_of_Unsafe_int32 
  
  use Unsafe_int32_of_Unsafe_uint8 
  
  use Unsafe_int32 
  
  use Unsafe_enum__bool_of_Unsafe_int32 
  
  use Unsafe_enum__bool 
  
  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_upd_unsafe 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_sub_pointer_unsafe 
  
  use import core.Jessie_shift_unsafe 
  
  use import core.Jessie_return 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_charp_tag_id 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_any_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_acc_unsafe 
  
  use enum.Int8 
  
  use import int.Int 
  
  use import Exceptions 
  
  use Enum__bool 
  
  use import Axiomatic_Es_Space 
  
  use why3.Bool.Bool 
  
  let escape_space_ensures_default
  #"/home/maria/ded-rep/escape_string_mem.c" 209 12 64#
  "expl:Function escape_space, default behavior" =
  fun
   (c_3 : Uint8.t) (dst_3 : (pointer char_xP)) (end_4 : (pointer voidP))
   (charP_charM_end_4_10 : ref (memory voidP Int8.t))
   (char_xP_char_xM_dst_3_9 : ref (memory char_xP (pointer voidP)))
   (char_xP_dst_3_9_alloc_table : (alloc_table char_xP))
   (voidP_end_4_10_alloc_table : (alloc_table voidP))
   (voidP_end_4_10_tag_table : (tag_table voidP)) 
   requires {
   (((allocated voidP_end_4_10_alloc_table end_4) ->
     (((=) (typeof voidP_end_4_10_tag_table end_4) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_4_10_alloc_table end_4) i) /\
       ((<) i (offset_max voidP_end_4_10_alloc_table end_4))) ->
       ((=) (typeof voidP_end_4_10_tag_table (shift end_4 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 171 10 21#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=) (offset_min voidP_end_4_10_alloc_table end_4) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=) (offset_max voidP_end_4_10_alloc_table end_4) (0)))
    /\ (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 171 25 36#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=) (offset_min char_xP_dst_3_9_alloc_table dst_3) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=) (offset_max char_xP_dst_3_9_alloc_table dst_3) (0)))
    /\ (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 172 6 27#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=)
     (offset_min voidP_end_4_10_alloc_table
     (select !char_xP_char_xM_dst_3_9 dst_3)) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=)
     (offset_max voidP_end_4_10_alloc_table
     (select !char_xP_char_xM_dst_3_9 dst_3)) (1)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 173 13 48#
   (same_block (select !char_xP_char_xM_dst_3_9 dst_3) end_4))))))))) }
   ensures { ("expl:Postcondition" ("expl:Ensures clause" true)) }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_2 = ref (any_pointer  () : (pointer voidP)) in
    (let to_why3 = ref (Unsafe_uint8.any_  () ) in
    (let __retres_2 = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     try
      begin
      (out_2 := (acc  !char_xP_char_xM_dst_3_9 dst_3 ));
       (let _jessie_4 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 214 9 10#
       "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_3 )) in
       begin
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
       (Unsafe_int32.(=)  _jessie_4
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        "expl:Integer cast" (Unsafe_int32.of_int (10))) ))
       then
        begin
        (to_why3 :=
         (#"/home/maria/ded-rep/escape_string_mem.c" 216 9 10#
         "expl:Integer cast"
         (Unsafe_uint8_of_Unsafe_int32.cast 
          (#"escape_string_mem.jc" 448 38 52# "expl:Integer cast"
          (Unsafe_int32.of_int (110))) )));
         (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 219 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 453 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (114))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 222 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 458 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (116))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (11))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 225 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 463 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (118))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 227 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 227 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (12))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (11))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 228 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 468 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (102))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if (true)
        then
         begin
         ();
          begin
          (__retres_2 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 231 9 14#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 474 46 58# "expl:Integer cast"
            (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
         end else ()) end); (raise (Goto_switch_0_break_exc ())) end with
      Goto_switch_0_break_exc _jessie_2 ->
      'Switch_0_break:
      'Switch_0_break:
      begin
      ();
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 234 5 14#
       ((<) 
        (#"escape_string_mem.jc" 480 22 35# (sub_pointer_  !out_2 end_4 ))
        (0) ))
       then
        (let _jessie_421 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 235 12 13#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 481 59 72# "expl:Integer cast"
         (Unsafe_int32.of_int (92))) )) in
        (let _jessie_422 = !out_2 in
        (let _jessie_423 = (0) in
        (let _jessie_424 = _jessie_422 in
        (upd  charP_charM_end_4_10 _jessie_424 _jessie_421 ))))) else ());
       begin
       (out_2 :=
        (shift_  !out_2
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 482 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 237 5 14#
        ((<) 
         (#"escape_string_mem.jc" 483 22 35# (sub_pointer_  !out_2 end_4 ))
         (0) ))
        then
         (let _jessie_427 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 238 9 11#
         "expl:Integer cast" (Unsafe_int8_of_Unsafe_uint8.cast  !to_why3 ))
         in
         (let _jessie_428 = !out_2 in
         (let _jessie_429 = (0) in
         (let _jessie_430 = _jessie_428 in
         (upd  charP_charM_end_4_10 _jessie_430 _jessie_427 ))))) else ());
        begin
        (out_2 :=
         (shift_  !out_2
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 485 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         (let _jessie_433 = !out_2 in
         (let _jessie_434 = dst_3 in
         (let _jessie_435 = (0) in
         (let _jessie_436 = _jessie_434 in
         (upd  char_xP_char_xM_dst_3_9 _jessie_436 _jessie_433 )))));
          (__retres_2 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 242 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 487 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) ))) end end end end end;
      (raise (Return_label_exc ())) end with Return_label_exc _jessie_3 ->
     'Return_label:
     'Return_label: begin (return := !__retres_2); (raise Return) end end)));
     absurd  end with Return -> !return end)
  
  let escape_space_ensures_is_empty
  #"/home/maria/ded-rep/escape_string_mem.c" 209 12 64#
  "expl:Function escape_space, behavior is_empty" =
  fun
   (c_3 : Uint8.t) (dst_3 : (pointer char_xP)) (end_4 : (pointer voidP))
   (charP_charM_end_4_10 : ref (memory voidP Int8.t))
   (char_xP_char_xM_dst_3_9 : ref (memory char_xP (pointer voidP)))
   (char_xP_dst_3_9_alloc_table : (alloc_table char_xP))
   (voidP_end_4_10_alloc_table : (alloc_table voidP))
   (voidP_end_4_10_tag_table : (tag_table voidP)) 
   requires {
   ((((<>) (Uint8.to_int c_3)
     (Int8.to_int (#"escape_string_mem.jc" 386 36 48# "expl:Integer cast"
     (Int8.of_int (10)))))
    /\
    (((<>) (Uint8.to_int c_3)
     (Int8.to_int (#"escape_string_mem.jc" 387 37 48# "expl:Integer cast"
     (Int8.of_int (9)))))
    /\
    (((<>) (Uint8.to_int c_3)
     (Int8.to_int (#"escape_string_mem.jc" 388 36 48# "expl:Integer cast"
     (Int8.of_int (13)))))
    /\
    (((<>) (Uint8.to_int c_3)
     (Int8.to_int (#"escape_string_mem.jc" 389 35 47# "expl:Integer cast"
     (Int8.of_int (11)))))
    /\
    ((<>) (Uint8.to_int c_3)
    (Int8.to_int (#"escape_string_mem.jc" 390 34 46# "expl:Integer cast"
    (Int8.of_int (12)))))))))
   /\
   (((allocated voidP_end_4_10_alloc_table end_4) ->
     (((=) (typeof voidP_end_4_10_tag_table end_4) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_4_10_alloc_table end_4) i) /\
       ((<) i (offset_max voidP_end_4_10_alloc_table end_4))) ->
       ((=) (typeof voidP_end_4_10_tag_table (shift end_4 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 171 10 21#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=) (offset_min voidP_end_4_10_alloc_table end_4) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=) (offset_max voidP_end_4_10_alloc_table end_4) (0)))
    /\ (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 171 25 36#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=) (offset_min char_xP_dst_3_9_alloc_table dst_3) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=) (offset_max char_xP_dst_3_9_alloc_table dst_3) (0)))
    /\ (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 172 6 27#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=)
     (offset_min voidP_end_4_10_alloc_table
     (select !char_xP_char_xM_dst_3_9 dst_3)) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=)
     (offset_max voidP_end_4_10_alloc_table
     (select !char_xP_char_xM_dst_3_9 dst_3)) (1)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 173 13 48#
   (same_block (select !char_xP_char_xM_dst_3_9 dst_3) end_4)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 391 10 18# "expl:Assigns clause"
       (not_assigns voidP_end_4_10_alloc_table voidP_end_4_10_alloc_table
       (old !charP_charM_end_4_10) !charP_charM_end_4_10 pset_empty))
      /\
      (#"escape_string_mem.jc" 391 10 18# "expl:Assigns clause"
      (not_assigns char_xP_dst_3_9_alloc_table char_xP_dst_3_9_alloc_table
      (old !char_xP_char_xM_dst_3_9) !char_xP_char_xM_dst_3_9 pset_empty)))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 179 16 33#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) false))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_2 = ref (any_pointer  () : (pointer voidP)) in
    (let to_why3 = ref (Unsafe_uint8.any_  () ) in
    (let __retres_2 = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     try
      begin
      (out_2 := (acc  !char_xP_char_xM_dst_3_9 dst_3 ));
       (let _jessie_4 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 214 9 10#
       "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_3 )) in
       begin
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
       (Unsafe_int32.(=)  _jessie_4
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        "expl:Integer cast" (Unsafe_int32.of_int (10))) ))
       then
        begin
        (to_why3 :=
         (#"/home/maria/ded-rep/escape_string_mem.c" 216 9 10#
         "expl:Integer cast"
         (Unsafe_uint8_of_Unsafe_int32.cast 
          (#"escape_string_mem.jc" 448 38 52# "expl:Integer cast"
          (Unsafe_int32.of_int (110))) )));
         (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 219 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 453 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (114))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 222 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 458 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (116))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (11))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 225 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 463 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (118))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 227 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 227 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (12))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (11))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 228 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 468 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (102))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if (true)
        then
         begin
         ();
          begin
          (__retres_2 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 231 9 14#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 474 46 58# "expl:Integer cast"
            (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
         end else ()) end); (raise (Goto_switch_0_break_exc ())) end with
      Goto_switch_0_break_exc _jessie_2 ->
      'Switch_0_break:
      'Switch_0_break:
      begin
      ();
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 234 5 14#
       ((<) 
        (#"escape_string_mem.jc" 480 22 35# (sub_pointer_  !out_2 end_4 ))
        (0) ))
       then
        (let _jessie_448 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 235 12 13#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 481 59 72# "expl:Integer cast"
         (Unsafe_int32.of_int (92))) )) in
        (let _jessie_449 = !out_2 in
        (let _jessie_450 = (0) in
        (let _jessie_451 = _jessie_449 in
        (upd  charP_charM_end_4_10 _jessie_451 _jessie_448 ))))) else ());
       begin
       (out_2 :=
        (shift_  !out_2
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 482 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 237 5 14#
        ((<) 
         (#"escape_string_mem.jc" 483 22 35# (sub_pointer_  !out_2 end_4 ))
         (0) ))
        then
         (let _jessie_454 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 238 9 11#
         "expl:Integer cast" (Unsafe_int8_of_Unsafe_uint8.cast  !to_why3 ))
         in
         (let _jessie_455 = !out_2 in
         (let _jessie_456 = (0) in
         (let _jessie_457 = _jessie_455 in
         (upd  charP_charM_end_4_10 _jessie_457 _jessie_454 ))))) else ());
        begin
        (out_2 :=
         (shift_  !out_2
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 485 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         (let _jessie_460 = !out_2 in
         (let _jessie_461 = dst_3 in
         (let _jessie_462 = (0) in
         (let _jessie_463 = _jessie_461 in
         (upd  char_xP_char_xM_dst_3_9 _jessie_463 _jessie_460 )))));
          (__retres_2 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 242 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 487 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) ))) end end end end end;
      (raise (Return_label_exc ())) end with Return_label_exc _jessie_3 ->
     'Return_label:
     'Return_label: begin (return := !__retres_2); (raise Return) end end)));
     absurd  end with Return -> !return end)
  
  let escape_space_ensures_size_one
  #"/home/maria/ded-rep/escape_string_mem.c" 209 12 64#
  "expl:Function escape_space, behavior size_one" =
  fun
   (c_3 : Uint8.t) (dst_3 : (pointer char_xP)) (end_4 : (pointer voidP))
   (charP_charM_end_4_10 : ref (memory voidP Int8.t))
   (char_xP_char_xM_dst_3_9 : ref (memory char_xP (pointer voidP)))
   (char_xP_dst_3_9_alloc_table : (alloc_table char_xP))
   (voidP_end_4_10_alloc_table : (alloc_table voidP))
   (voidP_end_4_10_tag_table : (tag_table voidP)) 
   requires {
   (((((=) (Uint8.to_int c_3)
      (Int8.to_int (#"escape_string_mem.jc" 406 37 49# "expl:Integer cast"
      (Int8.of_int (10)))))
     \/
     (((=) (Uint8.to_int c_3)
      (Int8.to_int (#"escape_string_mem.jc" 407 38 49# "expl:Integer cast"
      (Int8.of_int (9)))))
     \/
     (((=) (Uint8.to_int c_3)
      (Int8.to_int (#"escape_string_mem.jc" 408 37 49# "expl:Integer cast"
      (Int8.of_int (13)))))
     \/
     (((=) (Uint8.to_int c_3)
      (Int8.to_int (#"escape_string_mem.jc" 409 36 48# "expl:Integer cast"
      (Int8.of_int (11)))))
     \/
     ((=) (Uint8.to_int c_3)
     (Int8.to_int (#"escape_string_mem.jc" 410 35 47# "expl:Integer cast"
     (Int8.of_int (12)))))))))
    /\ ((=) (shift (select !char_xP_char_xM_dst_3_9 dst_3) (1)) end_4))
   /\
   (((allocated voidP_end_4_10_alloc_table end_4) ->
     (((=) (typeof voidP_end_4_10_tag_table end_4) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_4_10_alloc_table end_4) i) /\
       ((<) i (offset_max voidP_end_4_10_alloc_table end_4))) ->
       ((=) (typeof voidP_end_4_10_tag_table (shift end_4 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 171 10 21#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=) (offset_min voidP_end_4_10_alloc_table end_4) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=) (offset_max voidP_end_4_10_alloc_table end_4) (0)))
    /\ (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 171 25 36#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=) (offset_min char_xP_dst_3_9_alloc_table dst_3) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=) (offset_max char_xP_dst_3_9_alloc_table dst_3) (0)))
    /\ (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 172 6 27#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=)
     (offset_min voidP_end_4_10_alloc_table
     (select !char_xP_char_xM_dst_3_9 dst_3)) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=)
     (offset_max voidP_end_4_10_alloc_table
     (select !char_xP_char_xM_dst_3_9 dst_3)) (1)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 173 13 48#
   (same_block (select !char_xP_char_xM_dst_3_9 dst_3) end_4)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 412 10 46# "expl:Assigns clause"
       (not_assigns voidP_end_4_10_alloc_table voidP_end_4_10_alloc_table
       (old !charP_charM_end_4_10) !charP_charM_end_4_10
       (pset_singleton (select (old !char_xP_char_xM_dst_3_9) dst_3))))
      /\
      (#"escape_string_mem.jc" 412 10 46# "expl:Assigns clause"
      (not_assigns char_xP_dst_3_9_alloc_table char_xP_dst_3_9_alloc_table
      (old !char_xP_char_xM_dst_3_9) !char_xP_char_xM_dst_3_9
      (pset_singleton dst_3))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 194 16 38#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 194 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 194 16 38#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_3_9 dst_3)
      (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (2))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 194 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 195 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_4_10
      (shift (select !char_xP_char_xM_dst_3_9 dst_3) (Int.(-_) (2))))
      (#"escape_string_mem.jc" 417 35 47# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 196 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_2 = ref (any_pointer  () : (pointer voidP)) in
    (let to_why3 = ref (Unsafe_uint8.any_  () ) in
    (let __retres_2 = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     try
      begin
      (out_2 := (acc  !char_xP_char_xM_dst_3_9 dst_3 ));
       (let _jessie_4 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 214 9 10#
       "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_3 )) in
       begin
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
       (Unsafe_int32.(=)  _jessie_4
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        "expl:Integer cast" (Unsafe_int32.of_int (10))) ))
       then
        begin
        (to_why3 :=
         (#"/home/maria/ded-rep/escape_string_mem.c" 216 9 10#
         "expl:Integer cast"
         (Unsafe_uint8_of_Unsafe_int32.cast 
          (#"escape_string_mem.jc" 448 38 52# "expl:Integer cast"
          (Unsafe_int32.of_int (110))) )));
         (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 219 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 453 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (114))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 222 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 458 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (116))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (11))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 225 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 463 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (118))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 227 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 227 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (12))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (11))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 228 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 468 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (102))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if (true)
        then
         begin
         ();
          begin
          (__retres_2 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 231 9 14#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 474 46 58# "expl:Integer cast"
            (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
         end else ()) end); (raise (Goto_switch_0_break_exc ())) end with
      Goto_switch_0_break_exc _jessie_2 ->
      'Switch_0_break:
      'Switch_0_break:
      begin
      ();
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 234 5 14#
       ((<) 
        (#"escape_string_mem.jc" 480 22 35# (sub_pointer_  !out_2 end_4 ))
        (0) ))
       then
        (let _jessie_502 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 235 12 13#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 481 59 72# "expl:Integer cast"
         (Unsafe_int32.of_int (92))) )) in
        (let _jessie_503 = !out_2 in
        (let _jessie_504 = (0) in
        (let _jessie_505 = _jessie_503 in
        (upd  charP_charM_end_4_10 _jessie_505 _jessie_502 ))))) else ());
       begin
       (out_2 :=
        (shift_  !out_2
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 482 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 237 5 14#
        ((<) 
         (#"escape_string_mem.jc" 483 22 35# (sub_pointer_  !out_2 end_4 ))
         (0) ))
        then
         (let _jessie_508 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 238 9 11#
         "expl:Integer cast" (Unsafe_int8_of_Unsafe_uint8.cast  !to_why3 ))
         in
         (let _jessie_509 = !out_2 in
         (let _jessie_510 = (0) in
         (let _jessie_511 = _jessie_509 in
         (upd  charP_charM_end_4_10 _jessie_511 _jessie_508 ))))) else ());
        begin
        (out_2 :=
         (shift_  !out_2
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 485 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         (let _jessie_514 = !out_2 in
         (let _jessie_515 = dst_3 in
         (let _jessie_516 = (0) in
         (let _jessie_517 = _jessie_515 in
         (upd  char_xP_char_xM_dst_3_9 _jessie_517 _jessie_514 )))));
          (__retres_2 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 242 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 487 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) ))) end end end end end;
      (raise (Return_label_exc ())) end with Return_label_exc _jessie_3 ->
     'Return_label:
     'Return_label: begin (return := !__retres_2); (raise Return) end end)));
     absurd  end with Return -> !return end)
  
  let escape_space_ensures_size_two
  #"/home/maria/ded-rep/escape_string_mem.c" 209 12 64#
  "expl:Function escape_space, behavior size_two" =
  fun
   (c_3 : Uint8.t) (dst_3 : (pointer char_xP)) (end_4 : (pointer voidP))
   (charP_charM_end_4_10 : ref (memory voidP Int8.t))
   (char_xP_char_xM_dst_3_9 : ref (memory char_xP (pointer voidP)))
   (char_xP_dst_3_9_alloc_table : (alloc_table char_xP))
   (voidP_end_4_10_alloc_table : (alloc_table voidP))
   (voidP_end_4_10_tag_table : (tag_table voidP)) 
   requires {
   (((((=) (Uint8.to_int c_3)
      (Int8.to_int (#"escape_string_mem.jc" 420 37 49# "expl:Integer cast"
      (Int8.of_int (10)))))
     \/
     (((=) (Uint8.to_int c_3)
      (Int8.to_int (#"escape_string_mem.jc" 421 38 49# "expl:Integer cast"
      (Int8.of_int (9)))))
     \/
     (((=) (Uint8.to_int c_3)
      (Int8.to_int (#"escape_string_mem.jc" 422 37 49# "expl:Integer cast"
      (Int8.of_int (13)))))
     \/
     (((=) (Uint8.to_int c_3)
      (Int8.to_int (#"escape_string_mem.jc" 423 36 48# "expl:Integer cast"
      (Int8.of_int (11)))))
     \/
     ((=) (Uint8.to_int c_3)
     (Int8.to_int (#"escape_string_mem.jc" 424 35 47# "expl:Integer cast"
     (Int8.of_int (12)))))))))
    /\
    ((same_block (shift (select !char_xP_char_xM_dst_3_9 dst_3) (1)) end_4)
    /\
    ((<)
    (sub_pointer (shift (select !char_xP_char_xM_dst_3_9 dst_3) (1)) end_4)
    (0))))
   /\
   (((allocated voidP_end_4_10_alloc_table end_4) ->
     (((=) (typeof voidP_end_4_10_tag_table end_4) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_4_10_alloc_table end_4) i) /\
       ((<) i (offset_max voidP_end_4_10_alloc_table end_4))) ->
       ((=) (typeof voidP_end_4_10_tag_table (shift end_4 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 171 10 21#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=) (offset_min voidP_end_4_10_alloc_table end_4) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=) (offset_max voidP_end_4_10_alloc_table end_4) (0)))
    /\ (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 171 25 36#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=) (offset_min char_xP_dst_3_9_alloc_table dst_3) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=) (offset_max char_xP_dst_3_9_alloc_table dst_3) (0)))
    /\ (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 172 6 27#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=)
     (offset_min voidP_end_4_10_alloc_table
     (select !char_xP_char_xM_dst_3_9 dst_3)) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=)
     (offset_max voidP_end_4_10_alloc_table
     (select !char_xP_char_xM_dst_3_9 dst_3)) (1)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 173 13 48#
   (same_block (select !char_xP_char_xM_dst_3_9 dst_3) end_4)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 427 10 75# "expl:Assigns clause"
       (not_assigns voidP_end_4_10_alloc_table voidP_end_4_10_alloc_table
       (old !charP_charM_end_4_10) !charP_charM_end_4_10
       (pset_union
       (pset_singleton (select (old !char_xP_char_xM_dst_3_9) dst_3))
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (1))))))
      /\
      (#"escape_string_mem.jc" 427 10 75# "expl:Assigns clause"
      (not_assigns char_xP_dst_3_9_alloc_table char_xP_dst_3_9_alloc_table
      (old !char_xP_char_xM_dst_3_9) !char_xP_char_xM_dst_3_9
      (pset_singleton dst_3))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_3_9 dst_3)
      (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (2))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 204 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_4_10
      (shift (select !char_xP_char_xM_dst_3_9 dst_3) (Int.(-_) (2))))
      (#"escape_string_mem.jc" 433 35 47# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 205 16 47#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_4_10
      (shift (select !char_xP_char_xM_dst_3_9 dst_3) (Int.(-_) (1))))
      (escape_space (Uint8.to_int c_3))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 206 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_2 = ref (any_pointer  () : (pointer voidP)) in
    (let to_why3 = ref (Unsafe_uint8.any_  () ) in
    (let __retres_2 = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     try
      begin
      (out_2 := (acc  !char_xP_char_xM_dst_3_9 dst_3 ));
       (let _jessie_4 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 214 9 10#
       "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_3 )) in
       begin
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
       (Unsafe_int32.(=)  _jessie_4
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        "expl:Integer cast" (Unsafe_int32.of_int (10))) ))
       then
        begin
        (to_why3 :=
         (#"/home/maria/ded-rep/escape_string_mem.c" 216 9 10#
         "expl:Integer cast"
         (Unsafe_uint8_of_Unsafe_int32.cast 
          (#"escape_string_mem.jc" 448 38 52# "expl:Integer cast"
          (Unsafe_int32.of_int (110))) )));
         (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 219 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 453 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (114))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 222 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 458 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (116))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (11))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 225 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 463 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (118))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 227 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 227 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (12))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (11))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 228 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 468 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (102))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if (true)
        then
         begin
         ();
          begin
          (__retres_2 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 231 9 14#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 474 46 58# "expl:Integer cast"
            (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
         end else ()) end); (raise (Goto_switch_0_break_exc ())) end with
      Goto_switch_0_break_exc _jessie_2 ->
      'Switch_0_break:
      'Switch_0_break:
      begin
      ();
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 234 5 14#
       ((<) 
        (#"escape_string_mem.jc" 480 22 35# (sub_pointer_  !out_2 end_4 ))
        (0) ))
       then
        (let _jessie_529 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 235 12 13#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 481 59 72# "expl:Integer cast"
         (Unsafe_int32.of_int (92))) )) in
        (let _jessie_530 = !out_2 in
        (let _jessie_531 = (0) in
        (let _jessie_532 = _jessie_530 in
        (upd  charP_charM_end_4_10 _jessie_532 _jessie_529 ))))) else ());
       begin
       (out_2 :=
        (shift_  !out_2
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 482 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 237 5 14#
        ((<) 
         (#"escape_string_mem.jc" 483 22 35# (sub_pointer_  !out_2 end_4 ))
         (0) ))
        then
         (let _jessie_535 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 238 9 11#
         "expl:Integer cast" (Unsafe_int8_of_Unsafe_uint8.cast  !to_why3 ))
         in
         (let _jessie_536 = !out_2 in
         (let _jessie_537 = (0) in
         (let _jessie_538 = _jessie_536 in
         (upd  charP_charM_end_4_10 _jessie_538 _jessie_535 ))))) else ());
        begin
        (out_2 :=
         (shift_  !out_2
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 485 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         (let _jessie_541 = !out_2 in
         (let _jessie_542 = dst_3 in
         (let _jessie_543 = (0) in
         (let _jessie_544 = _jessie_542 in
         (upd  char_xP_char_xM_dst_3_9 _jessie_544 _jessie_541 )))));
          (__retres_2 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 242 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 487 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) ))) end end end end end;
      (raise (Return_label_exc ())) end with Return_label_exc _jessie_3 ->
     'Return_label:
     'Return_label: begin (return := !__retres_2); (raise Return) end end)));
     absurd  end with Return -> !return end)
  
  let escape_space_ensures_size_zero
  #"/home/maria/ded-rep/escape_string_mem.c" 209 12 64#
  "expl:Function escape_space, behavior size_zero" =
  fun
   (c_3 : Uint8.t) (dst_3 : (pointer char_xP)) (end_4 : (pointer voidP))
   (charP_charM_end_4_10 : ref (memory voidP Int8.t))
   (char_xP_char_xM_dst_3_9 : ref (memory char_xP (pointer voidP)))
   (char_xP_dst_3_9_alloc_table : (alloc_table char_xP))
   (voidP_end_4_10_alloc_table : (alloc_table voidP))
   (voidP_end_4_10_tag_table : (tag_table voidP)) 
   requires {
   (((((=) (Uint8.to_int c_3)
      (Int8.to_int (#"escape_string_mem.jc" 394 37 49# "expl:Integer cast"
      (Int8.of_int (10)))))
     \/
     (((=) (Uint8.to_int c_3)
      (Int8.to_int (#"escape_string_mem.jc" 395 38 49# "expl:Integer cast"
      (Int8.of_int (9)))))
     \/
     (((=) (Uint8.to_int c_3)
      (Int8.to_int (#"escape_string_mem.jc" 396 37 49# "expl:Integer cast"
      (Int8.of_int (13)))))
     \/
     (((=) (Uint8.to_int c_3)
      (Int8.to_int (#"escape_string_mem.jc" 397 36 48# "expl:Integer cast"
      (Int8.of_int (11)))))
     \/
     ((=) (Uint8.to_int c_3)
     (Int8.to_int (#"escape_string_mem.jc" 398 35 47# "expl:Integer cast"
     (Int8.of_int (12)))))))))
    /\
    ((same_block (select !char_xP_char_xM_dst_3_9 dst_3) end_4) /\
    ((>=) (sub_pointer (select !char_xP_char_xM_dst_3_9 dst_3) end_4) (0))))
   /\
   (((allocated voidP_end_4_10_alloc_table end_4) ->
     (((=) (typeof voidP_end_4_10_tag_table end_4) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_4_10_alloc_table end_4) i) /\
       ((<) i (offset_max voidP_end_4_10_alloc_table end_4))) ->
       ((=) (typeof voidP_end_4_10_tag_table (shift end_4 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 171 10 21#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=) (offset_min voidP_end_4_10_alloc_table end_4) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=) (offset_max voidP_end_4_10_alloc_table end_4) (0)))
    /\ (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 171 25 36#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=) (offset_min char_xP_dst_3_9_alloc_table dst_3) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=) (offset_max char_xP_dst_3_9_alloc_table dst_3) (0)))
    /\ (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 367 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 172 6 27#
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((<=)
     (offset_min voidP_end_4_10_alloc_table
     (select !char_xP_char_xM_dst_3_9 dst_3)) (0)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071#
     ((>=)
     (offset_max voidP_end_4_10_alloc_table
     (select !char_xP_char_xM_dst_3_9 dst_3)) (1)))
    /\
    (#"escape_string_mem.jc" 367 12 1071#
    ((#"escape_string_mem.jc" 367 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 367 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 173 13 48#
   (same_block (select !char_xP_char_xM_dst_3_9 dst_3) end_4)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 401 10 23# "expl:Assigns clause"
       (not_assigns voidP_end_4_10_alloc_table voidP_end_4_10_alloc_table
       (old !charP_charM_end_4_10) !charP_charM_end_4_10 pset_empty))
      /\
      (#"escape_string_mem.jc" 401 10 23# "expl:Assigns clause"
      (not_assigns char_xP_dst_3_9_alloc_table char_xP_dst_3_9_alloc_table
      (old !char_xP_char_xM_dst_3_9) !char_xP_char_xM_dst_3_9
      (pset_singleton dst_3))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 186 16 38#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 186 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 186 16 38#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_3_9 dst_3)
      (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (2))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 187 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_2 = ref (any_pointer  () : (pointer voidP)) in
    (let to_why3 = ref (Unsafe_uint8.any_  () ) in
    (let __retres_2 = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     try
      begin
      (out_2 := (acc  !char_xP_char_xM_dst_3_9 dst_3 ));
       (let _jessie_4 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 214 9 10#
       "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_3 )) in
       begin
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
       (Unsafe_int32.(=)  _jessie_4
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        "expl:Integer cast" (Unsafe_int32.of_int (10))) ))
       then
        begin
        (to_why3 :=
         (#"/home/maria/ded-rep/escape_string_mem.c" 216 9 10#
         "expl:Integer cast"
         (Unsafe_uint8_of_Unsafe_int32.cast 
          (#"escape_string_mem.jc" 448 38 52# "expl:Integer cast"
          (Unsafe_int32.of_int (110))) )));
         (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 219 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 453 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (114))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 222 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 458 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (116))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (11))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 225 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 463 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (118))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 227 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 227 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (12))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 224 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (11))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 221 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (9))) ))
        ||
        (#"escape_string_mem.jc" 446 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
         (Unsafe_int32.(=)  _jessie_4
          (#"/home/maria/ded-rep/escape_string_mem.c" 218 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (13))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
        (Unsafe_int32.(=)  _jessie_4
         (#"/home/maria/ded-rep/escape_string_mem.c" 215 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (10))) ))))))))))
        then
         begin
         (to_why3 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 228 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 468 38 52# "expl:Integer cast"
           (Unsafe_int32.of_int (102))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if (true)
        then
         begin
         ();
          begin
          (__retres_2 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 231 9 14#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 474 46 58# "expl:Integer cast"
            (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
         end else ()) end); (raise (Goto_switch_0_break_exc ())) end with
      Goto_switch_0_break_exc _jessie_2 ->
      'Switch_0_break:
      'Switch_0_break:
      begin
      ();
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 234 5 14#
       ((<) 
        (#"escape_string_mem.jc" 480 22 35# (sub_pointer_  !out_2 end_4 ))
        (0) ))
       then
        (let _jessie_475 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 235 12 13#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 481 59 72# "expl:Integer cast"
         (Unsafe_int32.of_int (92))) )) in
        (let _jessie_476 = !out_2 in
        (let _jessie_477 = (0) in
        (let _jessie_478 = _jessie_476 in
        (upd  charP_charM_end_4_10 _jessie_478 _jessie_475 ))))) else ());
       begin
       (out_2 :=
        (shift_  !out_2
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 482 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 237 5 14#
        ((<) 
         (#"escape_string_mem.jc" 483 22 35# (sub_pointer_  !out_2 end_4 ))
         (0) ))
        then
         (let _jessie_481 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 238 9 11#
         "expl:Integer cast" (Unsafe_int8_of_Unsafe_uint8.cast  !to_why3 ))
         in
         (let _jessie_482 = !out_2 in
         (let _jessie_483 = (0) in
         (let _jessie_484 = _jessie_482 in
         (upd  charP_charM_end_4_10 _jessie_484 _jessie_481 ))))) else ());
        begin
        (out_2 :=
         (shift_  !out_2
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 485 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         (let _jessie_487 = !out_2 in
         (let _jessie_488 = dst_3 in
         (let _jessie_489 = (0) in
         (let _jessie_490 = _jessie_488 in
         (upd  char_xP_char_xM_dst_3_9 _jessie_490 _jessie_487 )))));
          (__retres_2 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 242 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 487 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) ))) end end end end end;
      (raise (Return_label_exc ())) end with Return_label_exc _jessie_3 ->
     'Return_label:
     'Return_label: begin (return := !__retres_2); (raise Return) end end)));
     absurd  end with Return -> !return end)
  
end

theory Axiomatic_Es_Special

  use enum.Int8 
  
  use why3.Bool.Bool 
  
  function escape_special int : Int8.t
  
  axiom Sl #"/home/maria/ded-rep/escape_string_mem.c" 247 13 42#
  "expl:Axiom Sl" :
  (#"/home/maria/ded-rep/escape_string_mem.c" 247 13 42#
  (Int8.(=)
  (escape_special
  (Int8.to_int (#"escape_string_mem.jc" 498 29 41# "expl:Integer cast"
  (Int8.of_int (92))))) (#"escape_string_mem.jc" 498 58 70#
  "expl:Integer cast" (Int8.of_int (92)))))
  
  axiom A #"/home/maria/ded-rep/escape_string_mem.c" 248 13 41#
  "expl:Axiom A" :
  (#"/home/maria/ded-rep/escape_string_mem.c" 248 13 41#
  (Int8.(=)
  (escape_special
  (Int8.to_int (#"escape_string_mem.jc" 501 29 40# "expl:Integer cast"
  (Int8.of_int (7))))) (#"escape_string_mem.jc" 501 57 69#
  "expl:Integer cast" (Int8.of_int (97)))))
  
  axiom E #"/home/maria/ded-rep/escape_string_mem.c" 249 13 41#
  "expl:Axiom E" :
  (#"/home/maria/ded-rep/escape_string_mem.c" 249 13 41#
  (Int8.(=)
  (escape_special
  (Int8.to_int (#"escape_string_mem.jc" 504 29 44# "expl:Integer cast"
  (Int8.of_int (23653))))) (#"escape_string_mem.jc" 504 61 74#
  "expl:Integer cast" (Int8.of_int (101)))))
  
end

module Function_escape_special_0_safety
#"/home/maria/ded-rep/escape_string_mem.c" 288 12 66#
"expl:escape_special, safety"

  use enum.Uint8 
  
  use Safe_uint8_of_Safe_int32 
  
  use Safe_uint8 
  
  use Safe_int8_of_Safe_uint8 
  
  use Safe_int8_of_Safe_int32 
  
  use Safe_int32_of_Safe_uint8 
  
  use Safe_int32 
  
  use Safe_enum__bool_of_Safe_int32 
  
  use Safe_enum__bool 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_upd_safe 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_sub_pointer_safe 
  
  use import core.Jessie_shift_safe 
  
  use import core.Jessie_return 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_charp_tag_id 
  
  use import core.Jessie_any_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_acc_safe 
  
  use enum.Int8 
  
  use import int.Int 
  
  use import Exceptions 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  let escape_special_0 #"/home/maria/ded-rep/escape_string_mem.c" 288 12 66#
  "expl:Function escape_special, safety" =
  fun
   (c_4 : Uint8.t) (dst_4 : (pointer char_xP)) (end_5 : (pointer voidP))
   (charP_charM_end_5_12 : ref (memory voidP Int8.t))
   (char_xP_char_xM_dst_4_11 : ref (memory char_xP (pointer voidP)))
   (char_xP_dst_4_11_alloc_table : (alloc_table char_xP))
   (voidP_end_5_12_alloc_table : (alloc_table voidP))
   (voidP_end_5_12_tag_table : (tag_table voidP)) 
   requires {
   (((allocated voidP_end_5_12_alloc_table end_5) ->
     (((=) (typeof voidP_end_5_12_tag_table end_5) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_5_12_alloc_table end_5) i) /\
       ((<) i (offset_max voidP_end_5_12_alloc_table end_5))) ->
       ((=) (typeof voidP_end_5_12_tag_table (shift end_5 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 254 10 21#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=) (offset_min voidP_end_5_12_alloc_table end_5) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=) (offset_max voidP_end_5_12_alloc_table end_5) (0)))
    /\ (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 254 25 36#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=) (offset_min char_xP_dst_4_11_alloc_table dst_4) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=) (offset_max char_xP_dst_4_11_alloc_table dst_4) (0)))
    /\ (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 255 6 27#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=)
     (offset_min voidP_end_5_12_alloc_table
     (select !char_xP_char_xM_dst_4_11 dst_4)) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=)
     (offset_max voidP_end_5_12_alloc_table
     (select !char_xP_char_xM_dst_4_11 dst_4)) (1)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 256 13 48#
   (same_block (select !char_xP_char_xM_dst_4_11 dst_4) end_5))))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_enum__bool.any_  () ) in
   try
    begin
    (let out_3 = ref (any_pointer  () : (pointer voidP)) in
    (let to_0 = ref (Safe_uint8.any_  () ) in
    (let __retres_3 = ref (Safe_enum__bool.any_  () ) in
    try
     begin
     try
      begin
      (out_3 :=
       (let _jessie_699 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 290 13 17#
       "expl:Pointer dereference"
       (acc  char_xP_dst_4_11_alloc_table !char_xP_char_xM_dst_4_11 dst_4 ))
       in
       begin
       (assert {
       (#"/home/maria/ded-rep/escape_string_mem.c" 290 1 5#
       "expl:Pointer index bounds" true) }); _jessie_699 end));
       (let _jessie_8 =
       (let _jessie_700 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 293 9 10#
       "expl:Integer cast" (Safe_int32_of_Safe_uint8.cast  c_4 )) in
       begin (assert { ("expl:Pointer index bounds" true) }); _jessie_700 end)
       in
       begin
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
       (Safe_int32.(=)  _jessie_8
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        "expl:Integer cast" (Safe_int32.of_int (92))) ))
       then
        begin
        (to_0 :=
         (let _jessie_701 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 295 10 11#
         "expl:Integer cast"
         (Safe_uint8_of_Safe_int32.cast 
          (#"escape_string_mem.jc" 582 40 53# "expl:Integer cast"
          (Safe_int32.of_int (92))) )) in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 295 2 11#
         "expl:Pointer index bounds" true) }); _jessie_701 end));
         (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
         (Safe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
          "expl:Integer cast" (Safe_int32.of_int (7))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        (Safe_int32.(=)  _jessie_8
         (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
         "expl:Integer cast" (Safe_int32.of_int (92))) ))))
        then
         begin
         (to_0 :=
          (let _jessie_702 =
          (#"/home/maria/ded-rep/escape_string_mem.c" 298 9 10#
          "expl:Integer cast"
          (Safe_uint8_of_Safe_int32.cast 
           (#"escape_string_mem.jc" 587 40 53# "expl:Integer cast"
           (Safe_int32.of_int (97))) )) in
          begin
          (assert {
          (#"/home/maria/ded-rep/escape_string_mem.c" 298 2 10#
          "expl:Pointer index bounds" true) }); _jessie_702 end));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 300 9 10#
         (Safe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 300 9 10#
          "expl:Integer cast" (Safe_int32.of_int (27))) ))
        ||
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
         (Safe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
          "expl:Integer cast" (Safe_int32.of_int (7))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        (Safe_int32.(=)  _jessie_8
         (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
         "expl:Integer cast" (Safe_int32.of_int (92))) ))))))
        then
         begin
         (to_0 :=
          (let _jessie_703 =
          (#"/home/maria/ded-rep/escape_string_mem.c" 301 9 10#
          "expl:Integer cast"
          (Safe_uint8_of_Safe_int32.cast 
           (#"escape_string_mem.jc" 592 40 54# "expl:Integer cast"
           (Safe_int32.of_int (101))) )) in
          begin
          (assert {
          (#"/home/maria/ded-rep/escape_string_mem.c" 301 2 10#
          "expl:Pointer index bounds" true) }); _jessie_703 end));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if (true)
        then
         begin
         ();
          begin
          (__retres_3 :=
           (let _jessie_704 =
           (#"/home/maria/ded-rep/escape_string_mem.c" 304 9 14#
           "expl:Integer cast"
           (Safe_enum__bool_of_Safe_int32.cast 
            (#"escape_string_mem.jc" 598 46 58# "expl:Integer cast"
            (Safe_int32.of_int (0))) )) in
           begin
           (assert {
           (#"/home/maria/ded-rep/escape_string_mem.c" 304 2 15#
           "expl:Pointer index bounds" true) }); _jessie_704 end));
           (raise (Return_label_exc ())) end end else ()) end);
       (raise (Goto_switch_0_break_exc ())) end with Goto_switch_0_break_exc
      _jessie_6 ->
      'Switch_0_break:
      'Switch_0_break:
      begin
      ();
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 307 5 14#
       ((<) 
        (#"escape_string_mem.jc" 604 22 35# (sub_pointer_  !out_3 end_5 ))
        (0) ))
       then
        (let _jessie_706 =
        (let _jessie_705 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 308 12 13#
        "expl:Integer cast"
        (Safe_int8_of_Safe_int32.cast 
         (#"escape_string_mem.jc" 605 59 72# "expl:Integer cast"
         (Safe_int32.of_int (92))) )) in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 308 2 13#
        "expl:Pointer index bounds" true) }); _jessie_705 end) in
        (let _jessie_707 = !out_3 in
        (let _jessie_708 = (0) in
        (let _jessie_709 = _jessie_707 in
        (#"/home/maria/ded-rep/escape_string_mem.c" 308 2 13#
        "expl:Pointer dereference"
        (upd  voidP_end_5_12_alloc_table charP_charM_end_5_12 _jessie_707
         _jessie_706 )))))) else ());
       begin
       (out_3 :=
        (let _jessie_710 =
        (shift_typesafe  !out_3
         (Safe_int32.to_int 
          (#"escape_string_mem.jc" 606 44 56# "expl:Integer cast"
          (Safe_int32.of_int (1))) ) ) in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 309 1 6#
        "expl:Pointer index bounds" true) }); _jessie_710 end));
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 310 5 14#
        ((<) 
         (#"escape_string_mem.jc" 607 22 35# (sub_pointer_  !out_3 end_5 ))
         (0) ))
        then
         (let _jessie_712 =
         (let _jessie_711 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 311 9 11#
         "expl:Integer cast" (Safe_int8_of_Safe_uint8.cast  !to_0 )) in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 311 2 11#
         "expl:Pointer index bounds" true) }); _jessie_711 end) in
         (let _jessie_713 = !out_3 in
         (let _jessie_714 = (0) in
         (let _jessie_715 = _jessie_713 in
         (#"/home/maria/ded-rep/escape_string_mem.c" 311 2 11#
         "expl:Pointer dereference"
         (upd  voidP_end_5_12_alloc_table charP_charM_end_5_12 _jessie_713
          _jessie_712 )))))) else ());
        begin
        (out_3 :=
         (let _jessie_716 =
         (shift_typesafe  !out_3
          (Safe_int32.to_int 
           (#"escape_string_mem.jc" 609 44 56# "expl:Integer cast"
           (Safe_int32.of_int (1))) ) ) in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 312 1 6#
         "expl:Pointer index bounds" true) }); _jessie_716 end));
         begin
         (let _jessie_718 =
         (let _jessie_717 = !out_3 in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 314 1 11#
         "expl:Pointer index bounds" true) }); _jessie_717 end) in
         (let _jessie_719 = dst_4 in
         (let _jessie_720 = (0) in
         (let _jessie_721 = _jessie_719 in
         (#"/home/maria/ded-rep/escape_string_mem.c" 314 1 11#
         "expl:Pointer dereference"
         (upd  char_xP_dst_4_11_alloc_table char_xP_char_xM_dst_4_11
          _jessie_719 _jessie_718 ))))));
          (__retres_3 :=
           (let _jessie_722 =
           (#"/home/maria/ded-rep/escape_string_mem.c" 315 8 12#
           "expl:Integer cast"
           (Safe_enum__bool_of_Safe_int32.cast 
            (#"escape_string_mem.jc" 611 41 53# "expl:Integer cast"
            (Safe_int32.of_int (1))) )) in
           begin
           (assert {
           (#"/home/maria/ded-rep/escape_string_mem.c" 315 1 13#
           "expl:Pointer index bounds" true) }); _jessie_722 end)) end end
       end end end; (raise (Return_label_exc ())) end with Return_label_exc
     _jessie_7 ->
     'Return_label:
     'Return_label:
     begin
     (return :=
      (let _jessie_723 = !__retres_3 in
      begin
      (assert {
      (#"escape_string_mem.jc" 613 7 24# "expl:Pointer index bounds" true) });
       _jessie_723 end)); (raise Return) end end))); absurd  end with Return
    -> !return end)
  
end

module Function_escape_special_0_behaviors
#"/home/maria/ded-rep/escape_string_mem.c" 288 12 66#
"expl:escape_special, behaviors"

  use Unsafe_uint8_of_Unsafe_int32 
  
  use Unsafe_uint8 
  
  use Unsafe_int8_of_Unsafe_uint8 
  
  use Unsafe_int8_of_Unsafe_int32 
  
  use Unsafe_int32_of_Unsafe_uint8 
  
  use Unsafe_int32 
  
  use Unsafe_enum__bool_of_Unsafe_int32 
  
  use Unsafe_enum__bool 
  
  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_upd_unsafe 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_sub_pointer_unsafe 
  
  use import core.Jessie_shift_unsafe 
  
  use import core.Jessie_return 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_charp_tag_id 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_any_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_acc_unsafe 
  
  use enum.Int8 
  
  use import int.Int 
  
  use import Exceptions 
  
  use Enum__bool 
  
  use import Axiomatic_Es_Special 
  
  use why3.Bool.Bool 
  
  let escape_special_ensures_default
  #"/home/maria/ded-rep/escape_string_mem.c" 288 12 66#
  "expl:Function escape_special, default behavior" =
  fun
   (c_4 : Uint8.t) (dst_4 : (pointer char_xP)) (end_5 : (pointer voidP))
   (charP_charM_end_5_12 : ref (memory voidP Int8.t))
   (char_xP_char_xM_dst_4_11 : ref (memory char_xP (pointer voidP)))
   (char_xP_dst_4_11_alloc_table : (alloc_table char_xP))
   (voidP_end_5_12_alloc_table : (alloc_table voidP))
   (voidP_end_5_12_tag_table : (tag_table voidP)) 
   requires {
   (((allocated voidP_end_5_12_alloc_table end_5) ->
     (((=) (typeof voidP_end_5_12_tag_table end_5) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_5_12_alloc_table end_5) i) /\
       ((<) i (offset_max voidP_end_5_12_alloc_table end_5))) ->
       ((=) (typeof voidP_end_5_12_tag_table (shift end_5 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 254 10 21#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=) (offset_min voidP_end_5_12_alloc_table end_5) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=) (offset_max voidP_end_5_12_alloc_table end_5) (0)))
    /\ (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 254 25 36#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=) (offset_min char_xP_dst_4_11_alloc_table dst_4) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=) (offset_max char_xP_dst_4_11_alloc_table dst_4) (0)))
    /\ (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 255 6 27#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=)
     (offset_min voidP_end_5_12_alloc_table
     (select !char_xP_char_xM_dst_4_11 dst_4)) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=)
     (offset_max voidP_end_5_12_alloc_table
     (select !char_xP_char_xM_dst_4_11 dst_4)) (1)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 256 13 48#
   (same_block (select !char_xP_char_xM_dst_4_11 dst_4) end_5))))))))) }
   ensures { ("expl:Postcondition" ("expl:Ensures clause" true)) }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_3 = ref (any_pointer  () : (pointer voidP)) in
    (let to_0 = ref (Unsafe_uint8.any_  () ) in
    (let __retres_3 = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     try
      begin
      (out_3 := (acc  !char_xP_char_xM_dst_4_11 dst_4 ));
       (let _jessie_8 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 293 9 10#
       "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_4 )) in
       begin
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
       (Unsafe_int32.(=)  _jessie_8
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        "expl:Integer cast" (Unsafe_int32.of_int (92))) ))
       then
        begin
        (to_0 :=
         (#"/home/maria/ded-rep/escape_string_mem.c" 295 10 11#
         "expl:Integer cast"
         (Unsafe_uint8_of_Unsafe_int32.cast 
          (#"escape_string_mem.jc" 582 40 53# "expl:Integer cast"
          (Unsafe_int32.of_int (92))) )));
         (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (7))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        (Unsafe_int32.(=)  _jessie_8
         (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (92))) ))))
        then
         begin
         (to_0 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 298 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 587 40 53# "expl:Integer cast"
           (Unsafe_int32.of_int (97))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 300 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 300 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (27))) ))
        ||
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (7))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        (Unsafe_int32.(=)  _jessie_8
         (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (92))) ))))))
        then
         begin
         (to_0 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 301 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 592 40 54# "expl:Integer cast"
           (Unsafe_int32.of_int (101))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if (true)
        then
         begin
         ();
          begin
          (__retres_3 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 304 9 14#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 598 46 58# "expl:Integer cast"
            (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
         end else ()) end); (raise (Goto_switch_0_break_exc ())) end with
      Goto_switch_0_break_exc _jessie_6 ->
      'Switch_0_break:
      'Switch_0_break:
      begin
      ();
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 307 5 14#
       ((<) 
        (#"escape_string_mem.jc" 604 22 35# (sub_pointer_  !out_3 end_5 ))
        (0) ))
       then
        (let _jessie_581 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 308 12 13#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 605 59 72# "expl:Integer cast"
         (Unsafe_int32.of_int (92))) )) in
        (let _jessie_582 = !out_3 in
        (let _jessie_583 = (0) in
        (let _jessie_584 = _jessie_582 in
        (upd  charP_charM_end_5_12 _jessie_584 _jessie_581 ))))) else ());
       begin
       (out_3 :=
        (shift_  !out_3
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 606 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 310 5 14#
        ((<) 
         (#"escape_string_mem.jc" 607 22 35# (sub_pointer_  !out_3 end_5 ))
         (0) ))
        then
         (let _jessie_587 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 311 9 11#
         "expl:Integer cast" (Unsafe_int8_of_Unsafe_uint8.cast  !to_0 )) in
         (let _jessie_588 = !out_3 in
         (let _jessie_589 = (0) in
         (let _jessie_590 = _jessie_588 in
         (upd  charP_charM_end_5_12 _jessie_590 _jessie_587 ))))) else ());
        begin
        (out_3 :=
         (shift_  !out_3
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 609 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         (let _jessie_593 = !out_3 in
         (let _jessie_594 = dst_4 in
         (let _jessie_595 = (0) in
         (let _jessie_596 = _jessie_594 in
         (upd  char_xP_char_xM_dst_4_11 _jessie_596 _jessie_593 )))));
          (__retres_3 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 315 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 611 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) ))) end end end end end;
      (raise (Return_label_exc ())) end with Return_label_exc _jessie_7 ->
     'Return_label:
     'Return_label: begin (return := !__retres_3); (raise Return) end end)));
     absurd  end with Return -> !return end)
  
  let escape_special_ensures_is_empty
  #"/home/maria/ded-rep/escape_string_mem.c" 288 12 66#
  "expl:Function escape_special, behavior is_empty" =
  fun
   (c_4 : Uint8.t) (dst_4 : (pointer char_xP)) (end_5 : (pointer voidP))
   (charP_charM_end_5_12 : ref (memory voidP Int8.t))
   (char_xP_char_xM_dst_4_11 : ref (memory char_xP (pointer voidP)))
   (char_xP_dst_4_11_alloc_table : (alloc_table char_xP))
   (voidP_end_5_12_alloc_table : (alloc_table voidP))
   (voidP_end_5_12_tag_table : (tag_table voidP)) 
   requires {
   ((((<>) (Uint8.to_int c_4)
     (Int8.to_int (#"escape_string_mem.jc" 528 34 46# "expl:Integer cast"
     (Int8.of_int (92)))))
    /\
    (((<>) (Uint8.to_int c_4)
     (Int8.to_int (#"escape_string_mem.jc" 529 35 46# "expl:Integer cast"
     (Int8.of_int (7)))))
    /\
    ((<>) (Uint8.to_int c_4)
    (Int8.to_int (#"escape_string_mem.jc" 530 34 49# "expl:Integer cast"
    (Int8.of_int (23653)))))))
   /\
   (((allocated voidP_end_5_12_alloc_table end_5) ->
     (((=) (typeof voidP_end_5_12_tag_table end_5) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_5_12_alloc_table end_5) i) /\
       ((<) i (offset_max voidP_end_5_12_alloc_table end_5))) ->
       ((=) (typeof voidP_end_5_12_tag_table (shift end_5 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 254 10 21#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=) (offset_min voidP_end_5_12_alloc_table end_5) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=) (offset_max voidP_end_5_12_alloc_table end_5) (0)))
    /\ (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 254 25 36#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=) (offset_min char_xP_dst_4_11_alloc_table dst_4) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=) (offset_max char_xP_dst_4_11_alloc_table dst_4) (0)))
    /\ (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 255 6 27#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=)
     (offset_min voidP_end_5_12_alloc_table
     (select !char_xP_char_xM_dst_4_11 dst_4)) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=)
     (offset_max voidP_end_5_12_alloc_table
     (select !char_xP_char_xM_dst_4_11 dst_4)) (1)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 256 13 48#
   (same_block (select !char_xP_char_xM_dst_4_11 dst_4) end_5)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 531 10 18# "expl:Assigns clause"
       (not_assigns voidP_end_5_12_alloc_table voidP_end_5_12_alloc_table
       (old !charP_charM_end_5_12) !charP_charM_end_5_12 pset_empty))
      /\
      (#"escape_string_mem.jc" 531 10 18# "expl:Assigns clause"
      (not_assigns char_xP_dst_4_11_alloc_table char_xP_dst_4_11_alloc_table
      (old !char_xP_char_xM_dst_4_11) !char_xP_char_xM_dst_4_11 pset_empty)))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 261 16 33#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) false))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_3 = ref (any_pointer  () : (pointer voidP)) in
    (let to_0 = ref (Unsafe_uint8.any_  () ) in
    (let __retres_3 = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     try
      begin
      (out_3 := (acc  !char_xP_char_xM_dst_4_11 dst_4 ));
       (let _jessie_8 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 293 9 10#
       "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_4 )) in
       begin
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
       (Unsafe_int32.(=)  _jessie_8
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        "expl:Integer cast" (Unsafe_int32.of_int (92))) ))
       then
        begin
        (to_0 :=
         (#"/home/maria/ded-rep/escape_string_mem.c" 295 10 11#
         "expl:Integer cast"
         (Unsafe_uint8_of_Unsafe_int32.cast 
          (#"escape_string_mem.jc" 582 40 53# "expl:Integer cast"
          (Unsafe_int32.of_int (92))) )));
         (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (7))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        (Unsafe_int32.(=)  _jessie_8
         (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (92))) ))))
        then
         begin
         (to_0 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 298 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 587 40 53# "expl:Integer cast"
           (Unsafe_int32.of_int (97))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 300 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 300 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (27))) ))
        ||
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (7))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        (Unsafe_int32.(=)  _jessie_8
         (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (92))) ))))))
        then
         begin
         (to_0 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 301 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 592 40 54# "expl:Integer cast"
           (Unsafe_int32.of_int (101))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if (true)
        then
         begin
         ();
          begin
          (__retres_3 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 304 9 14#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 598 46 58# "expl:Integer cast"
            (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
         end else ()) end); (raise (Goto_switch_0_break_exc ())) end with
      Goto_switch_0_break_exc _jessie_6 ->
      'Switch_0_break:
      'Switch_0_break:
      begin
      ();
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 307 5 14#
       ((<) 
        (#"escape_string_mem.jc" 604 22 35# (sub_pointer_  !out_3 end_5 ))
        (0) ))
       then
        (let _jessie_606 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 308 12 13#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 605 59 72# "expl:Integer cast"
         (Unsafe_int32.of_int (92))) )) in
        (let _jessie_607 = !out_3 in
        (let _jessie_608 = (0) in
        (let _jessie_609 = _jessie_607 in
        (upd  charP_charM_end_5_12 _jessie_609 _jessie_606 ))))) else ());
       begin
       (out_3 :=
        (shift_  !out_3
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 606 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 310 5 14#
        ((<) 
         (#"escape_string_mem.jc" 607 22 35# (sub_pointer_  !out_3 end_5 ))
         (0) ))
        then
         (let _jessie_612 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 311 9 11#
         "expl:Integer cast" (Unsafe_int8_of_Unsafe_uint8.cast  !to_0 )) in
         (let _jessie_613 = !out_3 in
         (let _jessie_614 = (0) in
         (let _jessie_615 = _jessie_613 in
         (upd  charP_charM_end_5_12 _jessie_615 _jessie_612 ))))) else ());
        begin
        (out_3 :=
         (shift_  !out_3
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 609 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         (let _jessie_618 = !out_3 in
         (let _jessie_619 = dst_4 in
         (let _jessie_620 = (0) in
         (let _jessie_621 = _jessie_619 in
         (upd  char_xP_char_xM_dst_4_11 _jessie_621 _jessie_618 )))));
          (__retres_3 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 315 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 611 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) ))) end end end end end;
      (raise (Return_label_exc ())) end with Return_label_exc _jessie_7 ->
     'Return_label:
     'Return_label: begin (return := !__retres_3); (raise Return) end end)));
     absurd  end with Return -> !return end)
  
  let escape_special_ensures_size_one
  #"/home/maria/ded-rep/escape_string_mem.c" 288 12 66#
  "expl:Function escape_special, behavior size_one" =
  fun
   (c_4 : Uint8.t) (dst_4 : (pointer char_xP)) (end_5 : (pointer voidP))
   (charP_charM_end_5_12 : ref (memory voidP Int8.t))
   (char_xP_char_xM_dst_4_11 : ref (memory char_xP (pointer voidP)))
   (char_xP_dst_4_11_alloc_table : (alloc_table char_xP))
   (voidP_end_5_12_alloc_table : (alloc_table voidP))
   (voidP_end_5_12_tag_table : (tag_table voidP)) 
   requires {
   (((((=) (Uint8.to_int c_4)
      (Int8.to_int (#"escape_string_mem.jc" 544 35 47# "expl:Integer cast"
      (Int8.of_int (92)))))
     \/
     (((=) (Uint8.to_int c_4)
      (Int8.to_int (#"escape_string_mem.jc" 545 36 47# "expl:Integer cast"
      (Int8.of_int (7)))))
     \/
     ((=) (Uint8.to_int c_4)
     (Int8.to_int (#"escape_string_mem.jc" 546 35 50# "expl:Integer cast"
     (Int8.of_int (23653)))))))
    /\ ((=) (shift (select !char_xP_char_xM_dst_4_11 dst_4) (1)) end_5))
   /\
   (((allocated voidP_end_5_12_alloc_table end_5) ->
     (((=) (typeof voidP_end_5_12_tag_table end_5) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_5_12_alloc_table end_5) i) /\
       ((<) i (offset_max voidP_end_5_12_alloc_table end_5))) ->
       ((=) (typeof voidP_end_5_12_tag_table (shift end_5 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 254 10 21#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=) (offset_min voidP_end_5_12_alloc_table end_5) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=) (offset_max voidP_end_5_12_alloc_table end_5) (0)))
    /\ (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 254 25 36#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=) (offset_min char_xP_dst_4_11_alloc_table dst_4) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=) (offset_max char_xP_dst_4_11_alloc_table dst_4) (0)))
    /\ (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 255 6 27#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=)
     (offset_min voidP_end_5_12_alloc_table
     (select !char_xP_char_xM_dst_4_11 dst_4)) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=)
     (offset_max voidP_end_5_12_alloc_table
     (select !char_xP_char_xM_dst_4_11 dst_4)) (1)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 256 13 48#
   (same_block (select !char_xP_char_xM_dst_4_11 dst_4) end_5)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 548 10 46# "expl:Assigns clause"
       (not_assigns voidP_end_5_12_alloc_table voidP_end_5_12_alloc_table
       (old !charP_charM_end_5_12) !charP_charM_end_5_12
       (pset_singleton (select (old !char_xP_char_xM_dst_4_11) dst_4))))
      /\
      (#"escape_string_mem.jc" 548 10 46# "expl:Assigns clause"
      (not_assigns char_xP_dst_4_11_alloc_table char_xP_dst_4_11_alloc_table
      (old !char_xP_char_xM_dst_4_11) !char_xP_char_xM_dst_4_11
      (pset_singleton dst_4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 274 16 38#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 274 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 274 16 38#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_4_11 dst_4)
      (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (2))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 274 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 275 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_5_12
      (shift (select !char_xP_char_xM_dst_4_11 dst_4) (Int.(-_) (2))))
      (#"escape_string_mem.jc" 553 35 47# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 276 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_3 = ref (any_pointer  () : (pointer voidP)) in
    (let to_0 = ref (Unsafe_uint8.any_  () ) in
    (let __retres_3 = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     try
      begin
      (out_3 := (acc  !char_xP_char_xM_dst_4_11 dst_4 ));
       (let _jessie_8 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 293 9 10#
       "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_4 )) in
       begin
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
       (Unsafe_int32.(=)  _jessie_8
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        "expl:Integer cast" (Unsafe_int32.of_int (92))) ))
       then
        begin
        (to_0 :=
         (#"/home/maria/ded-rep/escape_string_mem.c" 295 10 11#
         "expl:Integer cast"
         (Unsafe_uint8_of_Unsafe_int32.cast 
          (#"escape_string_mem.jc" 582 40 53# "expl:Integer cast"
          (Unsafe_int32.of_int (92))) )));
         (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (7))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        (Unsafe_int32.(=)  _jessie_8
         (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (92))) ))))
        then
         begin
         (to_0 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 298 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 587 40 53# "expl:Integer cast"
           (Unsafe_int32.of_int (97))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 300 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 300 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (27))) ))
        ||
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (7))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        (Unsafe_int32.(=)  _jessie_8
         (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (92))) ))))))
        then
         begin
         (to_0 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 301 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 592 40 54# "expl:Integer cast"
           (Unsafe_int32.of_int (101))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if (true)
        then
         begin
         ();
          begin
          (__retres_3 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 304 9 14#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 598 46 58# "expl:Integer cast"
            (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
         end else ()) end); (raise (Goto_switch_0_break_exc ())) end with
      Goto_switch_0_break_exc _jessie_6 ->
      'Switch_0_break:
      'Switch_0_break:
      begin
      ();
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 307 5 14#
       ((<) 
        (#"escape_string_mem.jc" 604 22 35# (sub_pointer_  !out_3 end_5 ))
        (0) ))
       then
        (let _jessie_656 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 308 12 13#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 605 59 72# "expl:Integer cast"
         (Unsafe_int32.of_int (92))) )) in
        (let _jessie_657 = !out_3 in
        (let _jessie_658 = (0) in
        (let _jessie_659 = _jessie_657 in
        (upd  charP_charM_end_5_12 _jessie_659 _jessie_656 ))))) else ());
       begin
       (out_3 :=
        (shift_  !out_3
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 606 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 310 5 14#
        ((<) 
         (#"escape_string_mem.jc" 607 22 35# (sub_pointer_  !out_3 end_5 ))
         (0) ))
        then
         (let _jessie_662 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 311 9 11#
         "expl:Integer cast" (Unsafe_int8_of_Unsafe_uint8.cast  !to_0 )) in
         (let _jessie_663 = !out_3 in
         (let _jessie_664 = (0) in
         (let _jessie_665 = _jessie_663 in
         (upd  charP_charM_end_5_12 _jessie_665 _jessie_662 ))))) else ());
        begin
        (out_3 :=
         (shift_  !out_3
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 609 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         (let _jessie_668 = !out_3 in
         (let _jessie_669 = dst_4 in
         (let _jessie_670 = (0) in
         (let _jessie_671 = _jessie_669 in
         (upd  char_xP_char_xM_dst_4_11 _jessie_671 _jessie_668 )))));
          (__retres_3 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 315 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 611 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) ))) end end end end end;
      (raise (Return_label_exc ())) end with Return_label_exc _jessie_7 ->
     'Return_label:
     'Return_label: begin (return := !__retres_3); (raise Return) end end)));
     absurd  end with Return -> !return end)
  
  let escape_special_ensures_size_two
  #"/home/maria/ded-rep/escape_string_mem.c" 288 12 66#
  "expl:Function escape_special, behavior size_two" =
  fun
   (c_4 : Uint8.t) (dst_4 : (pointer char_xP)) (end_5 : (pointer voidP))
   (charP_charM_end_5_12 : ref (memory voidP Int8.t))
   (char_xP_char_xM_dst_4_11 : ref (memory char_xP (pointer voidP)))
   (char_xP_dst_4_11_alloc_table : (alloc_table char_xP))
   (voidP_end_5_12_alloc_table : (alloc_table voidP))
   (voidP_end_5_12_tag_table : (tag_table voidP)) 
   requires {
   (((((=) (Uint8.to_int c_4)
      (Int8.to_int (#"escape_string_mem.jc" 556 35 47# "expl:Integer cast"
      (Int8.of_int (92)))))
     \/
     (((=) (Uint8.to_int c_4)
      (Int8.to_int (#"escape_string_mem.jc" 557 36 47# "expl:Integer cast"
      (Int8.of_int (7)))))
     \/
     ((=) (Uint8.to_int c_4)
     (Int8.to_int (#"escape_string_mem.jc" 558 35 50# "expl:Integer cast"
     (Int8.of_int (23653)))))))
    /\
    ((same_block (shift (select !char_xP_char_xM_dst_4_11 dst_4) (1)) end_5)
    /\
    ((<)
    (sub_pointer (shift (select !char_xP_char_xM_dst_4_11 dst_4) (1)) end_5)
    (0))))
   /\
   (((allocated voidP_end_5_12_alloc_table end_5) ->
     (((=) (typeof voidP_end_5_12_tag_table end_5) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_5_12_alloc_table end_5) i) /\
       ((<) i (offset_max voidP_end_5_12_alloc_table end_5))) ->
       ((=) (typeof voidP_end_5_12_tag_table (shift end_5 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 254 10 21#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=) (offset_min voidP_end_5_12_alloc_table end_5) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=) (offset_max voidP_end_5_12_alloc_table end_5) (0)))
    /\ (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 254 25 36#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=) (offset_min char_xP_dst_4_11_alloc_table dst_4) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=) (offset_max char_xP_dst_4_11_alloc_table dst_4) (0)))
    /\ (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 255 6 27#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=)
     (offset_min voidP_end_5_12_alloc_table
     (select !char_xP_char_xM_dst_4_11 dst_4)) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=)
     (offset_max voidP_end_5_12_alloc_table
     (select !char_xP_char_xM_dst_4_11 dst_4)) (1)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 256 13 48#
   (same_block (select !char_xP_char_xM_dst_4_11 dst_4) end_5)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 561 10 75# "expl:Assigns clause"
       (not_assigns voidP_end_5_12_alloc_table voidP_end_5_12_alloc_table
       (old !charP_charM_end_5_12) !charP_charM_end_5_12
       (pset_union
       (pset_singleton (select (old !char_xP_char_xM_dst_4_11) dst_4))
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (1))))))
      /\
      (#"escape_string_mem.jc" 561 10 75# "expl:Assigns clause"
      (not_assigns char_xP_dst_4_11_alloc_table char_xP_dst_4_11_alloc_table
      (old !char_xP_char_xM_dst_4_11) !char_xP_char_xM_dst_4_11
      (pset_singleton dst_4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_4_11 dst_4)
      (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (2))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 283 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_5_12
      (shift (select !char_xP_char_xM_dst_4_11 dst_4) (Int.(-_) (2))))
      (#"escape_string_mem.jc" 567 35 47# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 284 16 49#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_5_12
      (shift (select !char_xP_char_xM_dst_4_11 dst_4) (Int.(-_) (1))))
      (escape_special (Uint8.to_int c_4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 285 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_3 = ref (any_pointer  () : (pointer voidP)) in
    (let to_0 = ref (Unsafe_uint8.any_  () ) in
    (let __retres_3 = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     try
      begin
      (out_3 := (acc  !char_xP_char_xM_dst_4_11 dst_4 ));
       (let _jessie_8 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 293 9 10#
       "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_4 )) in
       begin
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
       (Unsafe_int32.(=)  _jessie_8
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        "expl:Integer cast" (Unsafe_int32.of_int (92))) ))
       then
        begin
        (to_0 :=
         (#"/home/maria/ded-rep/escape_string_mem.c" 295 10 11#
         "expl:Integer cast"
         (Unsafe_uint8_of_Unsafe_int32.cast 
          (#"escape_string_mem.jc" 582 40 53# "expl:Integer cast"
          (Unsafe_int32.of_int (92))) )));
         (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (7))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        (Unsafe_int32.(=)  _jessie_8
         (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (92))) ))))
        then
         begin
         (to_0 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 298 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 587 40 53# "expl:Integer cast"
           (Unsafe_int32.of_int (97))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 300 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 300 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (27))) ))
        ||
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (7))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        (Unsafe_int32.(=)  _jessie_8
         (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (92))) ))))))
        then
         begin
         (to_0 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 301 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 592 40 54# "expl:Integer cast"
           (Unsafe_int32.of_int (101))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if (true)
        then
         begin
         ();
          begin
          (__retres_3 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 304 9 14#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 598 46 58# "expl:Integer cast"
            (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
         end else ()) end); (raise (Goto_switch_0_break_exc ())) end with
      Goto_switch_0_break_exc _jessie_6 ->
      'Switch_0_break:
      'Switch_0_break:
      begin
      ();
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 307 5 14#
       ((<) 
        (#"escape_string_mem.jc" 604 22 35# (sub_pointer_  !out_3 end_5 ))
        (0) ))
       then
        (let _jessie_681 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 308 12 13#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 605 59 72# "expl:Integer cast"
         (Unsafe_int32.of_int (92))) )) in
        (let _jessie_682 = !out_3 in
        (let _jessie_683 = (0) in
        (let _jessie_684 = _jessie_682 in
        (upd  charP_charM_end_5_12 _jessie_684 _jessie_681 ))))) else ());
       begin
       (out_3 :=
        (shift_  !out_3
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 606 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 310 5 14#
        ((<) 
         (#"escape_string_mem.jc" 607 22 35# (sub_pointer_  !out_3 end_5 ))
         (0) ))
        then
         (let _jessie_687 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 311 9 11#
         "expl:Integer cast" (Unsafe_int8_of_Unsafe_uint8.cast  !to_0 )) in
         (let _jessie_688 = !out_3 in
         (let _jessie_689 = (0) in
         (let _jessie_690 = _jessie_688 in
         (upd  charP_charM_end_5_12 _jessie_690 _jessie_687 ))))) else ());
        begin
        (out_3 :=
         (shift_  !out_3
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 609 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         (let _jessie_693 = !out_3 in
         (let _jessie_694 = dst_4 in
         (let _jessie_695 = (0) in
         (let _jessie_696 = _jessie_694 in
         (upd  char_xP_char_xM_dst_4_11 _jessie_696 _jessie_693 )))));
          (__retres_3 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 315 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 611 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) ))) end end end end end;
      (raise (Return_label_exc ())) end with Return_label_exc _jessie_7 ->
     'Return_label:
     'Return_label: begin (return := !__retres_3); (raise Return) end end)));
     absurd  end with Return -> !return end)
  
  let escape_special_ensures_size_zero
  #"/home/maria/ded-rep/escape_string_mem.c" 288 12 66#
  "expl:Function escape_special, behavior size_zero" =
  fun
   (c_4 : Uint8.t) (dst_4 : (pointer char_xP)) (end_5 : (pointer voidP))
   (charP_charM_end_5_12 : ref (memory voidP Int8.t))
   (char_xP_char_xM_dst_4_11 : ref (memory char_xP (pointer voidP)))
   (char_xP_dst_4_11_alloc_table : (alloc_table char_xP))
   (voidP_end_5_12_alloc_table : (alloc_table voidP))
   (voidP_end_5_12_tag_table : (tag_table voidP)) 
   requires {
   (((((=) (Uint8.to_int c_4)
      (Int8.to_int (#"escape_string_mem.jc" 534 35 47# "expl:Integer cast"
      (Int8.of_int (92)))))
     \/
     (((=) (Uint8.to_int c_4)
      (Int8.to_int (#"escape_string_mem.jc" 535 36 47# "expl:Integer cast"
      (Int8.of_int (7)))))
     \/
     ((=) (Uint8.to_int c_4)
     (Int8.to_int (#"escape_string_mem.jc" 536 35 50# "expl:Integer cast"
     (Int8.of_int (23653)))))))
    /\
    ((same_block (select !char_xP_char_xM_dst_4_11 dst_4) end_5) /\
    ((>=) (sub_pointer (select !char_xP_char_xM_dst_4_11 dst_4) end_5) (0))))
   /\
   (((allocated voidP_end_5_12_alloc_table end_5) ->
     (((=) (typeof voidP_end_5_12_tag_table end_5) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_5_12_alloc_table end_5) i) /\
       ((<) i (offset_max voidP_end_5_12_alloc_table end_5))) ->
       ((=) (typeof voidP_end_5_12_tag_table (shift end_5 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 254 10 21#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=) (offset_min voidP_end_5_12_alloc_table end_5) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=) (offset_max voidP_end_5_12_alloc_table end_5) (0)))
    /\ (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 254 25 36#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=) (offset_min char_xP_dst_4_11_alloc_table dst_4) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=) (offset_max char_xP_dst_4_11_alloc_table dst_4) (0)))
    /\ (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 509 12 1071#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 255 6 27#
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((<=)
     (offset_min voidP_end_5_12_alloc_table
     (select !char_xP_char_xM_dst_4_11 dst_4)) (0)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071#
     ((>=)
     (offset_max voidP_end_5_12_alloc_table
     (select !char_xP_char_xM_dst_4_11 dst_4)) (1)))
    /\
    (#"escape_string_mem.jc" 509 12 1071#
    ((#"escape_string_mem.jc" 509 12 1071# ((=) true true)) /\
    (#"escape_string_mem.jc" 509 12 1071# ((=) true true)))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 256 13 48#
   (same_block (select !char_xP_char_xM_dst_4_11 dst_4) end_5)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 539 10 23# "expl:Assigns clause"
       (not_assigns voidP_end_5_12_alloc_table voidP_end_5_12_alloc_table
       (old !charP_charM_end_5_12) !charP_charM_end_5_12 pset_empty))
      /\
      (#"escape_string_mem.jc" 539 10 23# "expl:Assigns clause"
      (not_assigns char_xP_dst_4_11_alloc_table char_xP_dst_4_11_alloc_table
      (old !char_xP_char_xM_dst_4_11) !char_xP_char_xM_dst_4_11
      (pset_singleton dst_4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 267 16 38#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 267 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 267 16 38#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_4_11 dst_4)
      (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (2))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 268 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_3 = ref (any_pointer  () : (pointer voidP)) in
    (let to_0 = ref (Unsafe_uint8.any_  () ) in
    (let __retres_3 = ref (Unsafe_enum__bool.any_  () ) in
    try
     begin
     try
      begin
      (out_3 := (acc  !char_xP_char_xM_dst_4_11 dst_4 ));
       (let _jessie_8 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 293 9 10#
       "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c_4 )) in
       begin
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
       (Unsafe_int32.(=)  _jessie_8
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        "expl:Integer cast" (Unsafe_int32.of_int (92))) ))
       then
        begin
        (to_0 :=
         (#"/home/maria/ded-rep/escape_string_mem.c" 295 10 11#
         "expl:Integer cast"
         (Unsafe_uint8_of_Unsafe_int32.cast 
          (#"escape_string_mem.jc" 582 40 53# "expl:Integer cast"
          (Unsafe_int32.of_int (92))) )));
         (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (7))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        (Unsafe_int32.(=)  _jessie_8
         (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (92))) ))))
        then
         begin
         (to_0 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 298 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 587 40 53# "expl:Integer cast"
           (Unsafe_int32.of_int (97))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 300 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 300 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (27))) ))
        ||
        (#"escape_string_mem.jc" 580 14 39#
        ((#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
         (Unsafe_int32.(=)  _jessie_8
          (#"/home/maria/ded-rep/escape_string_mem.c" 297 9 10#
          "expl:Integer cast" (Unsafe_int32.of_int (7))) ))
        ||
        (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
        (Unsafe_int32.(=)  _jessie_8
         (#"/home/maria/ded-rep/escape_string_mem.c" 294 9 10#
         "expl:Integer cast" (Unsafe_int32.of_int (92))) ))))))
        then
         begin
         (to_0 :=
          (#"/home/maria/ded-rep/escape_string_mem.c" 301 9 10#
          "expl:Integer cast"
          (Unsafe_uint8_of_Unsafe_int32.cast 
           (#"escape_string_mem.jc" 592 40 54# "expl:Integer cast"
           (Unsafe_int32.of_int (101))) )));
          (raise (Goto_switch_0_break_exc ())) end else ());
        (if (true)
        then
         begin
         ();
          begin
          (__retres_3 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 304 9 14#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 598 46 58# "expl:Integer cast"
            (Unsafe_int32.of_int (0))) ))); (raise (Return_label_exc ())) end
         end else ()) end); (raise (Goto_switch_0_break_exc ())) end with
      Goto_switch_0_break_exc _jessie_6 ->
      'Switch_0_break:
      'Switch_0_break:
      begin
      ();
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 307 5 14#
       ((<) 
        (#"escape_string_mem.jc" 604 22 35# (sub_pointer_  !out_3 end_5 ))
        (0) ))
       then
        (let _jessie_631 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 308 12 13#
        "expl:Integer cast"
        (Unsafe_int8_of_Unsafe_int32.cast 
         (#"escape_string_mem.jc" 605 59 72# "expl:Integer cast"
         (Unsafe_int32.of_int (92))) )) in
        (let _jessie_632 = !out_3 in
        (let _jessie_633 = (0) in
        (let _jessie_634 = _jessie_632 in
        (upd  charP_charM_end_5_12 _jessie_634 _jessie_631 ))))) else ());
       begin
       (out_3 :=
        (shift_  !out_3
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 606 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 310 5 14#
        ((<) 
         (#"escape_string_mem.jc" 607 22 35# (sub_pointer_  !out_3 end_5 ))
         (0) ))
        then
         (let _jessie_637 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 311 9 11#
         "expl:Integer cast" (Unsafe_int8_of_Unsafe_uint8.cast  !to_0 )) in
         (let _jessie_638 = !out_3 in
         (let _jessie_639 = (0) in
         (let _jessie_640 = _jessie_638 in
         (upd  charP_charM_end_5_12 _jessie_640 _jessie_637 ))))) else ());
        begin
        (out_3 :=
         (shift_  !out_3
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 609 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         (let _jessie_643 = !out_3 in
         (let _jessie_644 = dst_4 in
         (let _jessie_645 = (0) in
         (let _jessie_646 = _jessie_644 in
         (upd  char_xP_char_xM_dst_4_11 _jessie_646 _jessie_643 )))));
          (__retres_3 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 315 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 611 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) ))) end end end end end;
      (raise (Return_label_exc ())) end with Return_label_exc _jessie_7 ->
     'Return_label:
     'Return_label: begin (return := !__retres_3); (raise Return) end end)));
     absurd  end with Return -> !return end)
  
end

module Globals_struct_charp

  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val charP_charM_hex_asc_2: ref (memory voidP Int8.t)
  
  val hex_asc: (pointer voidP)
  
end

module Globals_root_voidp

  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_alloc_table 
  
  use why3.Bool.Bool 
  
  val voidP_hex_asc_2_tag_table: ref (tag_table voidP)
  
  val voidP_hex_asc_2_alloc_table: ref (alloc_table voidP)
  
end

module Function_escape_hex_safety
#"/home/maria/ded-rep/escape_string_mem.c" 360 12 62#
"expl:escape_hex, safety"

  use enum.Uint8 
  
  use Safe_int8_of_Safe_int32 
  
  use Safe_int32_of_Safe_uint8 
  
  use Safe_int32 
  
  use Safe_enum__bool_of_Safe_int32 
  
  use Safe_enum__bool 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_upd_safe 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_sub_pointer_safe 
  
  use import core.Jessie_shift_safe 
  
  use import core.Jessie_return 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_charp_tag_id 
  
  use import core.Jessie_any_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_acc_safe 
  
  use import core.Jessie_acc_offset_safe 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  use import Globals_struct_charp 
  
  use import Globals_root_voidp 
  
  let escape_hex #"/home/maria/ded-rep/escape_string_mem.c" 360 12 62#
  "expl:Function escape_hex, safety" =
  fun
   (c : Uint8.t) (dst : (pointer char_xP)) (end_0 : (pointer voidP))
   (charP_charM_end_0_14 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_13
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_13_alloc_table :
   (alloc_table char_xP)) (voidP_end_0_14_alloc_table : (alloc_table voidP))
   (voidP_end_0_14_tag_table : (tag_table voidP)) 
   requires {
   (((allocated voidP_end_0_14_alloc_table end_0) ->
     (((=) (typeof voidP_end_0_14_tag_table end_0) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_0_14_alloc_table end_0) i) /\
       ((<) i (offset_max voidP_end_0_14_alloc_table end_0))) ->
       ((=) (typeof voidP_end_0_14_tag_table (shift end_0 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 10 21#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min voidP_end_0_14_alloc_table end_0) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max voidP_end_0_14_alloc_table end_0) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 25 36#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min char_xP_dst_13_alloc_table dst) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max char_xP_dst_13_alloc_table dst) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 320 6 27#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=)
     (offset_min voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=)
     (offset_max voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (3)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 321 13 48#
   (same_block (select !char_xP_char_xM_dst_13 dst) end_0))))))))) }
   ensures { ("expl:Postcondition" true) }  ->
   'Init:
   (let return = ref (Safe_enum__bool.any_  () ) in
   try
    begin
    (let out_4 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_4 = ref (Safe_enum__bool.any_  () ) in
    begin
    (out_4 :=
     (let _jessie_916 =
     (#"/home/maria/ded-rep/escape_string_mem.c" 362 13 17#
     "expl:Pointer dereference"
     (acc  char_xP_dst_13_alloc_table !char_xP_char_xM_dst_13 dst )) in
     begin
     (assert {
     (#"/home/maria/ded-rep/escape_string_mem.c" 362 1 5#
     "expl:Pointer index bounds" true) }); _jessie_916 end));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 364 5 14#
     ((<)  (#"escape_string_mem.jc" 709 22 35# (sub_pointer_  !out_4 end_0 ))
      (0) ))
     then
      (let _jessie_918 =
      (let _jessie_917 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 365 12 13#
      "expl:Integer cast"
      (Safe_int8_of_Safe_int32.cast 
       (#"escape_string_mem.jc" 710 59 72# "expl:Integer cast"
       (Safe_int32.of_int (92))) )) in
      begin
      (assert {
      (#"/home/maria/ded-rep/escape_string_mem.c" 365 2 13#
      "expl:Pointer index bounds" true) }); _jessie_917 end) in
      (let _jessie_919 = !out_4 in
      (let _jessie_920 = (0) in
      (let _jessie_921 = _jessie_919 in
      (#"/home/maria/ded-rep/escape_string_mem.c" 365 2 13#
      "expl:Pointer dereference"
      (upd  voidP_end_0_14_alloc_table charP_charM_end_0_14 _jessie_919
       _jessie_918 )))))) else ());
     begin
     (out_4 :=
      (let _jessie_922 =
      (shift_typesafe  !out_4
       (Safe_int32.to_int 
        (#"escape_string_mem.jc" 711 44 56# "expl:Integer cast"
        (Safe_int32.of_int (1))) ) ) in
      begin
      (assert {
      (#"/home/maria/ded-rep/escape_string_mem.c" 366 1 6#
      "expl:Pointer index bounds" true) }); _jessie_922 end));
      begin
      any unit
      requires { true } reads { char_xP_char_xM_dst_13, dst }
      ensures {
        (#"/home/maria/ded-rep/escape_string_mem.c" 367 12 27#
        ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (1)))) } ; ()
      end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 368 5 14#
      ((<) 
       (#"escape_string_mem.jc" 719 25 38# (sub_pointer_  !out_4 end_0 )) (0)
       ))
      then
       (let _jessie_924 =
       (let _jessie_923 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 369 11 12#
       "expl:Integer cast"
       (Safe_int8_of_Safe_int32.cast 
        (#"escape_string_mem.jc" 720 62 76# "expl:Integer cast"
        (Safe_int32.of_int (120))) )) in
       begin
       (assert {
       (#"/home/maria/ded-rep/escape_string_mem.c" 369 2 12#
       "expl:Pointer index bounds" true) }); _jessie_923 end) in
       (let _jessie_925 = !out_4 in
       (let _jessie_926 = (0) in
       (let _jessie_927 = _jessie_925 in
       (#"/home/maria/ded-rep/escape_string_mem.c" 369 2 12#
       "expl:Pointer dereference"
       (upd  voidP_end_0_14_alloc_table charP_charM_end_0_14 _jessie_925
        _jessie_924 )))))) else ());
      begin
      (out_4 :=
       (let _jessie_928 =
       (shift_typesafe  !out_4
        (Safe_int32.to_int 
         (#"escape_string_mem.jc" 722 44 56# "expl:Integer cast"
         (Safe_int32.of_int (1))) ) ) in
       begin
       (assert {
       (#"/home/maria/ded-rep/escape_string_mem.c" 370 1 6#
       "expl:Pointer index bounds" true) }); _jessie_928 end));
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_13, dst }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 371 12 27#
         ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (2)))) } ;
        () end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 372 5 14#
       ((<) 
        (#"escape_string_mem.jc" 730 25 38# (sub_pointer_  !out_4 end_0 ))
        (0) ))
       then
        (let _jessie_930 =
        (let _jessie_929 =
        (#"/home/maria/ded-rep/escape_string_mem.c" 373 9 34#
        "expl:Pointer dereference"
        (acc_offset_typesafe  !voidP_hex_asc_2_alloc_table
         !charP_charM_hex_asc_2 hex_asc
         (Safe_int32.to_int 
          (#"/home/maria/ded-rep/escape_string_mem.c" 373 17 33#
          "expl:Division by zero"
          (Safe_int32.(/) 
           (#"/home/maria/ded-rep/escape_string_mem.c" 373 18 27#
           "expl:Division by zero"
           (Safe_int32.(%) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 373 19 20#
            "expl:Integer cast" (Safe_int32_of_Safe_uint8.cast  c ))
            (#"escape_string_mem.jc" 738 66 80# "expl:Integer cast"
            (Safe_int32.of_int (240))) ))
           (#"escape_string_mem.jc" 739 65 78# "expl:Integer cast"
           (Safe_int32.of_int (16))) )) ) )) in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 373 2 34#
        "expl:Pointer index bounds" true) }); _jessie_929 end) in
        (let _jessie_931 = !out_4 in
        (let _jessie_932 = (0) in
        (let _jessie_933 = _jessie_931 in
        (#"/home/maria/ded-rep/escape_string_mem.c" 373 2 34#
        "expl:Pointer dereference"
        (upd  voidP_end_0_14_alloc_table charP_charM_end_0_14 _jessie_931
         _jessie_930 )))))) else ());
       begin
       (out_4 :=
        (let _jessie_934 =
        (shift_typesafe  !out_4
         (Safe_int32.to_int 
          (#"escape_string_mem.jc" 741 44 56# "expl:Integer cast"
          (Safe_int32.of_int (1))) ) ) in
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 374 1 6#
        "expl:Pointer index bounds" true) }); _jessie_934 end));
        begin
        any unit
        requires { true } reads { char_xP_char_xM_dst_13, dst }
        ensures {
          (#"/home/maria/ded-rep/escape_string_mem.c" 375 12 27#
          ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (3)))) } ;
         () end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 376 5 14#
        ((<) 
         (#"escape_string_mem.jc" 749 25 38# (sub_pointer_  !out_4 end_0 ))
         (0) ))
        then
         (let _jessie_936 =
         (let _jessie_935 =
         (#"/home/maria/ded-rep/escape_string_mem.c" 377 9 28#
         "expl:Pointer dereference"
         (acc_offset_typesafe  !voidP_hex_asc_2_alloc_table
          !charP_charM_hex_asc_2 hex_asc
          (Safe_int32.to_int 
           (#"/home/maria/ded-rep/escape_string_mem.c" 377 18 26#
           "expl:Division by zero"
           (Safe_int32.(%) 
            (#"/home/maria/ded-rep/escape_string_mem.c" 377 19 20#
            "expl:Integer cast" (Safe_int32_of_Safe_uint8.cast  c ))
            (#"escape_string_mem.jc" 755 65 78# "expl:Integer cast"
            (Safe_int32.of_int (15))) )) ) )) in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 377 2 28#
         "expl:Pointer index bounds" true) }); _jessie_935 end) in
         (let _jessie_937 = !out_4 in
         (let _jessie_938 = (0) in
         (let _jessie_939 = _jessie_937 in
         (#"/home/maria/ded-rep/escape_string_mem.c" 377 2 28#
         "expl:Pointer dereference"
         (upd  voidP_end_0_14_alloc_table charP_charM_end_0_14 _jessie_937
          _jessie_936 )))))) else ());
        begin
        (out_4 :=
         (let _jessie_940 =
         (shift_typesafe  !out_4
          (Safe_int32.to_int 
           (#"escape_string_mem.jc" 757 44 56# "expl:Integer cast"
           (Safe_int32.of_int (1))) ) ) in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 378 1 6#
         "expl:Pointer index bounds" true) }); _jessie_940 end));
         begin
         any unit
         requires { true } reads { char_xP_char_xM_dst_13, dst }
         ensures {
           (#"/home/maria/ded-rep/escape_string_mem.c" 379 12 27#
           ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (4)))) } ;
          () end;
         begin
         (let _jessie_942 =
         (let _jessie_941 = !out_4 in
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 381 1 11#
         "expl:Pointer index bounds" true) }); _jessie_941 end) in
         (let _jessie_943 = dst in
         (let _jessie_944 = (0) in
         (let _jessie_945 = _jessie_943 in
         (#"/home/maria/ded-rep/escape_string_mem.c" 381 1 11#
         "expl:Pointer dereference"
         (upd  char_xP_dst_13_alloc_table char_xP_char_xM_dst_13 _jessie_943
          _jessie_942 ))))));
          begin
          (__retres_4 :=
           (let _jessie_946 =
           (#"/home/maria/ded-rep/escape_string_mem.c" 382 8 12#
           "expl:Integer cast"
           (Safe_enum__bool_of_Safe_int32.cast 
            (#"escape_string_mem.jc" 765 41 53# "expl:Integer cast"
            (Safe_int32.of_int (1))) )) in
           begin
           (assert {
           (#"/home/maria/ded-rep/escape_string_mem.c" 382 1 13#
           "expl:Pointer index bounds" true) }); _jessie_946 end));
           begin
           (return :=
            (let _jessie_947 = !__retres_4 in
            begin
            (assert {
            (#"escape_string_mem.jc" 767 7 24# "expl:Pointer index bounds"
            true) }); _jessie_947 end)); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
end

module Function_escape_hex_behaviors
#"/home/maria/ded-rep/escape_string_mem.c" 360 12 62#
"expl:escape_hex, behaviors"

  use Unsafe_int8_of_Unsafe_int32 
  
  use Unsafe_int32_of_Unsafe_uint8 
  
  use Unsafe_int32 
  
  use Unsafe_enum__bool_of_Unsafe_int32 
  
  use Unsafe_enum__bool 
  
  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_upd_unsafe 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_sub_pointer_unsafe 
  
  use import core.Jessie_shift_unsafe 
  
  use import core.Jessie_return 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_charp_tag_id 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_any_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_acc_unsafe 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use int.ComputerDivision 
  
  use why3.Bool.Bool 
  
  use import Globals_struct_charp 
  
  use import Globals_root_voidp 
  
  let escape_hex_ensures_default
  #"/home/maria/ded-rep/escape_string_mem.c" 360 12 62#
  "expl:Function escape_hex, default behavior" =
  fun
   (c : Uint8.t) (dst : (pointer char_xP)) (end_0 : (pointer voidP))
   (charP_charM_end_0_14 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_13
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_13_alloc_table :
   (alloc_table char_xP)) (voidP_end_0_14_alloc_table : (alloc_table voidP))
   (voidP_end_0_14_tag_table : (tag_table voidP)) 
   requires {
   (((allocated voidP_end_0_14_alloc_table end_0) ->
     (((=) (typeof voidP_end_0_14_tag_table end_0) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_0_14_alloc_table end_0) i) /\
       ((<) i (offset_max voidP_end_0_14_alloc_table end_0))) ->
       ((=) (typeof voidP_end_0_14_tag_table (shift end_0 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 10 21#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min voidP_end_0_14_alloc_table end_0) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max voidP_end_0_14_alloc_table end_0) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 25 36#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min char_xP_dst_13_alloc_table dst) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max char_xP_dst_13_alloc_table dst) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 320 6 27#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=)
     (offset_min voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=)
     (offset_max voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (3)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 321 13 48#
   (same_block (select !char_xP_char_xM_dst_13 dst) end_0))))))))) }
   ensures { ("expl:Postcondition" ("expl:Ensures clause" true)) }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_4 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_4 = ref (Unsafe_enum__bool.any_  () ) in
    begin
    (out_4 := (acc  !char_xP_char_xM_dst_13 dst ));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 364 5 14#
     ((<)  (#"escape_string_mem.jc" 709 22 35# (sub_pointer_  !out_4 end_0 ))
      (0) ))
     then
      (let _jessie_726 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 365 12 13#
      "expl:Integer cast"
      (Unsafe_int8_of_Unsafe_int32.cast 
       (#"escape_string_mem.jc" 710 59 72# "expl:Integer cast"
       (Unsafe_int32.of_int (92))) )) in
      (let _jessie_727 = !out_4 in
      (let _jessie_728 = (0) in
      (let _jessie_729 = _jessie_727 in
      (upd  charP_charM_end_0_14 _jessie_729 _jessie_726 ))))) else ());
     begin
     (out_4 :=
      (shift_  !out_4
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 711 44 56# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ));
      begin
      (assert {
      (#"/home/maria/ded-rep/escape_string_mem.c" 367 12 27#
      "expl:Assertion in line 367"
      ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (1)))) }); ()
      end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 368 5 14#
      ((<) 
       (#"escape_string_mem.jc" 719 25 38# (sub_pointer_  !out_4 end_0 )) (0)
       ))
      then
       (let _jessie_732 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 369 11 12#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (#"escape_string_mem.jc" 720 62 76# "expl:Integer cast"
        (Unsafe_int32.of_int (120))) )) in
       (let _jessie_733 = !out_4 in
       (let _jessie_734 = (0) in
       (let _jessie_735 = _jessie_733 in
       (upd  charP_charM_end_0_14 _jessie_735 _jessie_732 ))))) else ());
      begin
      (out_4 :=
       (shift_  !out_4
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 722 44 56# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       begin
       (assert {
       (#"/home/maria/ded-rep/escape_string_mem.c" 371 12 27#
       "expl:Assertion in line 371"
       ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (2)))) }); ()
       end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 372 5 14#
       ((<) 
        (#"escape_string_mem.jc" 730 25 38# (sub_pointer_  !out_4 end_0 ))
        (0) ))
       then
        (let _jessie_738 =
        (acc  !charP_charM_hex_asc_2
         (shift_  hex_asc
          (Unsafe_int32.to_int 
           (Unsafe_int32.(/) 
            (Unsafe_int32.(%) 
             (#"/home/maria/ded-rep/escape_string_mem.c" 373 19 20#
             "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c ))
             (#"escape_string_mem.jc" 738 66 80# "expl:Integer cast"
             (Unsafe_int32.of_int (240))) )
            (#"escape_string_mem.jc" 739 65 78# "expl:Integer cast"
            (Unsafe_int32.of_int (16))) ) ) ) ) in
        (let _jessie_739 = !out_4 in
        (let _jessie_740 = (0) in
        (let _jessie_741 = _jessie_739 in
        (upd  charP_charM_end_0_14 _jessie_741 _jessie_738 ))))) else ());
       begin
       (out_4 :=
        (shift_  !out_4
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 741 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        (assert {
        (#"/home/maria/ded-rep/escape_string_mem.c" 375 12 27#
        "expl:Assertion in line 375"
        ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (3)))) }); ()
        end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 376 5 14#
        ((<) 
         (#"escape_string_mem.jc" 749 25 38# (sub_pointer_  !out_4 end_0 ))
         (0) ))
        then
         (let _jessie_744 =
         (acc  !charP_charM_hex_asc_2
          (shift_  hex_asc
           (Unsafe_int32.to_int 
            (Unsafe_int32.(%) 
             (#"/home/maria/ded-rep/escape_string_mem.c" 377 19 20#
             "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c ))
             (#"escape_string_mem.jc" 755 65 78# "expl:Integer cast"
             (Unsafe_int32.of_int (15))) ) ) ) ) in
         (let _jessie_745 = !out_4 in
         (let _jessie_746 = (0) in
         (let _jessie_747 = _jessie_745 in
         (upd  charP_charM_end_0_14 _jessie_747 _jessie_744 ))))) else ());
        begin
        (out_4 :=
         (shift_  !out_4
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 757 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         (assert {
         (#"/home/maria/ded-rep/escape_string_mem.c" 379 12 27#
         "expl:Assertion in line 379"
         ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (4)))) });
          () end;
         begin
         (let _jessie_750 = !out_4 in
         (let _jessie_751 = dst in
         (let _jessie_752 = (0) in
         (let _jessie_753 = _jessie_751 in
         (upd  char_xP_char_xM_dst_13 _jessie_753 _jessie_750 )))));
          begin
          (__retres_4 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 382 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 765 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) )));
           begin (return := !__retres_4); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
  let escape_hex_ensures_size_four
  #"/home/maria/ded-rep/escape_string_mem.c" 360 12 62#
  "expl:Function escape_hex, behavior size_four" =
  fun
   (c : Uint8.t) (dst : (pointer char_xP)) (end_0 : (pointer voidP))
   (charP_charM_end_0_14 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_13
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_13_alloc_table :
   (alloc_table char_xP)) (voidP_end_0_14_alloc_table : (alloc_table voidP))
   (voidP_end_0_14_tag_table : (tag_table voidP)) 
   requires {
   (((same_block (shift (select !char_xP_char_xM_dst_13 dst) (4)) end_0) /\
    ((<=)
    (sub_pointer (shift (select !char_xP_char_xM_dst_13 dst) (4)) end_0) (0)))
   /\
   (((allocated voidP_end_0_14_alloc_table end_0) ->
     (((=) (typeof voidP_end_0_14_tag_table end_0) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_0_14_alloc_table end_0) i) /\
       ((<) i (offset_max voidP_end_0_14_alloc_table end_0))) ->
       ((=) (typeof voidP_end_0_14_tag_table (shift end_0 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 10 21#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min voidP_end_0_14_alloc_table end_0) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max voidP_end_0_14_alloc_table end_0) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 25 36#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min char_xP_dst_13_alloc_table dst) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max char_xP_dst_13_alloc_table dst) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 320 6 27#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=)
     (offset_min voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=)
     (offset_max voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (3)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 321 13 48#
   (same_block (select !char_xP_char_xM_dst_13 dst) end_0)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 684 10 123# "expl:Assigns clause"
       (not_assigns voidP_end_0_14_alloc_table voidP_end_0_14_alloc_table
       (old !charP_charM_end_0_14) !charP_charM_end_0_14
       (pset_union
       (pset_singleton (select (old !char_xP_char_xM_dst_13) dst))
       (pset_union
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_13) dst) (1)))
       (pset_union
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_13) dst) (2)))
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_13) dst) (3))))))))
      /\
      (#"escape_string_mem.jc" 684 10 123# "expl:Assigns clause"
      (not_assigns char_xP_dst_13_alloc_table char_xP_dst_13_alloc_table (old
      !char_xP_char_xM_dst_13) !char_xP_char_xM_dst_13 (pset_singleton dst))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_13 dst)
      (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 352 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_0_14
      (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (4))))
      (#"escape_string_mem.jc" 692 35 47# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 353 16 34#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_0_14
      (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (3))))
      (#"escape_string_mem.jc" 694 37 50# "expl:Integer cast" (Int8.of_int
      (120)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 354 16 56#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_0_14
      (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (2))))
      (select !charP_charM_hex_asc_2
      (shift hex_asc
      (ComputerDivision.div (ComputerDivision.mod (Uint8.to_int c) (240))
      (16))))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 355 16 50#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_0_14
      (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (1))))
      (select !charP_charM_hex_asc_2
      (shift hex_asc (ComputerDivision.mod (Uint8.to_int c) (15))))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 356 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_4 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_4 = ref (Unsafe_enum__bool.any_  () ) in
    begin
    (out_4 := (acc  !char_xP_char_xM_dst_13 dst ));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 364 5 14#
     ((<)  (#"escape_string_mem.jc" 709 22 35# (sub_pointer_  !out_4 end_0 ))
      (0) ))
     then
      (let _jessie_886 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 365 12 13#
      "expl:Integer cast"
      (Unsafe_int8_of_Unsafe_int32.cast 
       (#"escape_string_mem.jc" 710 59 72# "expl:Integer cast"
       (Unsafe_int32.of_int (92))) )) in
      (let _jessie_887 = !out_4 in
      (let _jessie_888 = (0) in
      (let _jessie_889 = _jessie_887 in
      (upd  charP_charM_end_0_14 _jessie_889 _jessie_886 ))))) else ());
     begin
     (out_4 :=
      (shift_  !out_4
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 711 44 56# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ));
      begin
      any unit
      requires { true } reads { char_xP_char_xM_dst_13, dst }
      ensures {
        (#"/home/maria/ded-rep/escape_string_mem.c" 367 12 27#
        ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (1)))) } ; ()
      end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 368 5 14#
      ((<) 
       (#"escape_string_mem.jc" 719 25 38# (sub_pointer_  !out_4 end_0 )) (0)
       ))
      then
       (let _jessie_892 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 369 11 12#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (#"escape_string_mem.jc" 720 62 76# "expl:Integer cast"
        (Unsafe_int32.of_int (120))) )) in
       (let _jessie_893 = !out_4 in
       (let _jessie_894 = (0) in
       (let _jessie_895 = _jessie_893 in
       (upd  charP_charM_end_0_14 _jessie_895 _jessie_892 ))))) else ());
      begin
      (out_4 :=
       (shift_  !out_4
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 722 44 56# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_13, dst }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 371 12 27#
         ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (2)))) } ;
        () end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 372 5 14#
       ((<) 
        (#"escape_string_mem.jc" 730 25 38# (sub_pointer_  !out_4 end_0 ))
        (0) ))
       then
        (let _jessie_898 =
        (acc  !charP_charM_hex_asc_2
         (shift_  hex_asc
          (Unsafe_int32.to_int 
           (Unsafe_int32.(/) 
            (Unsafe_int32.(%) 
             (#"/home/maria/ded-rep/escape_string_mem.c" 373 19 20#
             "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c ))
             (#"escape_string_mem.jc" 738 66 80# "expl:Integer cast"
             (Unsafe_int32.of_int (240))) )
            (#"escape_string_mem.jc" 739 65 78# "expl:Integer cast"
            (Unsafe_int32.of_int (16))) ) ) ) ) in
        (let _jessie_899 = !out_4 in
        (let _jessie_900 = (0) in
        (let _jessie_901 = _jessie_899 in
        (upd  charP_charM_end_0_14 _jessie_901 _jessie_898 ))))) else ());
       begin
       (out_4 :=
        (shift_  !out_4
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 741 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        any unit
        requires { true } reads { char_xP_char_xM_dst_13, dst }
        ensures {
          (#"/home/maria/ded-rep/escape_string_mem.c" 375 12 27#
          ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (3)))) } ;
         () end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 376 5 14#
        ((<) 
         (#"escape_string_mem.jc" 749 25 38# (sub_pointer_  !out_4 end_0 ))
         (0) ))
        then
         (let _jessie_904 =
         (acc  !charP_charM_hex_asc_2
          (shift_  hex_asc
           (Unsafe_int32.to_int 
            (Unsafe_int32.(%) 
             (#"/home/maria/ded-rep/escape_string_mem.c" 377 19 20#
             "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c ))
             (#"escape_string_mem.jc" 755 65 78# "expl:Integer cast"
             (Unsafe_int32.of_int (15))) ) ) ) ) in
         (let _jessie_905 = !out_4 in
         (let _jessie_906 = (0) in
         (let _jessie_907 = _jessie_905 in
         (upd  charP_charM_end_0_14 _jessie_907 _jessie_904 ))))) else ());
        begin
        (out_4 :=
         (shift_  !out_4
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 757 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         any unit
         requires { true } reads { char_xP_char_xM_dst_13, dst }
         ensures {
           (#"/home/maria/ded-rep/escape_string_mem.c" 379 12 27#
           ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (4)))) } ;
          () end;
         begin
         (let _jessie_910 = !out_4 in
         (let _jessie_911 = dst in
         (let _jessie_912 = (0) in
         (let _jessie_913 = _jessie_911 in
         (upd  char_xP_char_xM_dst_13 _jessie_913 _jessie_910 )))));
          begin
          (__retres_4 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 382 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 765 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) )));
           begin (return := !__retres_4); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
  let escape_hex_ensures_size_one
  #"/home/maria/ded-rep/escape_string_mem.c" 360 12 62#
  "expl:Function escape_hex, behavior size_one" =
  fun
   (c : Uint8.t) (dst : (pointer char_xP)) (end_0 : (pointer voidP))
   (charP_charM_end_0_14 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_13
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_13_alloc_table :
   (alloc_table char_xP)) (voidP_end_0_14_alloc_table : (alloc_table voidP))
   (voidP_end_0_14_tag_table : (tag_table voidP)) 
   requires {
   (((=) (shift (select !char_xP_char_xM_dst_13 dst) (1)) end_0) /\
   (((allocated voidP_end_0_14_alloc_table end_0) ->
     (((=) (typeof voidP_end_0_14_tag_table end_0) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_0_14_alloc_table end_0) i) /\
       ((<) i (offset_max voidP_end_0_14_alloc_table end_0))) ->
       ((=) (typeof voidP_end_0_14_tag_table (shift end_0 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 10 21#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min voidP_end_0_14_alloc_table end_0) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max voidP_end_0_14_alloc_table end_0) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 25 36#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min char_xP_dst_13_alloc_table dst) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max char_xP_dst_13_alloc_table dst) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 320 6 27#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=)
     (offset_min voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=)
     (offset_max voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (3)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 321 13 48#
   (same_block (select !char_xP_char_xM_dst_13 dst) end_0)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 645 10 42# "expl:Assigns clause"
       (not_assigns voidP_end_0_14_alloc_table voidP_end_0_14_alloc_table
       (old !charP_charM_end_0_14) !charP_charM_end_0_14
       (pset_singleton (select (old !char_xP_char_xM_dst_13) dst))))
      /\
      (#"escape_string_mem.jc" 645 10 42# "expl:Assigns clause"
      (not_assigns char_xP_dst_13_alloc_table char_xP_dst_13_alloc_table (old
      !char_xP_char_xM_dst_13) !char_xP_char_xM_dst_13 (pset_singleton dst))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 330 16 38#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 330 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 330 16 38#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_13 dst)
      (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 330 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 331 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_0_14
      (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (4))))
      (#"escape_string_mem.jc" 650 35 47# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 332 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_4 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_4 = ref (Unsafe_enum__bool.any_  () ) in
    begin
    (out_4 := (acc  !char_xP_char_xM_dst_13 dst ));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 364 5 14#
     ((<)  (#"escape_string_mem.jc" 709 22 35# (sub_pointer_  !out_4 end_0 ))
      (0) ))
     then
      (let _jessie_790 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 365 12 13#
      "expl:Integer cast"
      (Unsafe_int8_of_Unsafe_int32.cast 
       (#"escape_string_mem.jc" 710 59 72# "expl:Integer cast"
       (Unsafe_int32.of_int (92))) )) in
      (let _jessie_791 = !out_4 in
      (let _jessie_792 = (0) in
      (let _jessie_793 = _jessie_791 in
      (upd  charP_charM_end_0_14 _jessie_793 _jessie_790 ))))) else ());
     begin
     (out_4 :=
      (shift_  !out_4
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 711 44 56# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ));
      begin
      any unit
      requires { true } reads { char_xP_char_xM_dst_13, dst }
      ensures {
        (#"/home/maria/ded-rep/escape_string_mem.c" 367 12 27#
        ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (1)))) } ; ()
      end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 368 5 14#
      ((<) 
       (#"escape_string_mem.jc" 719 25 38# (sub_pointer_  !out_4 end_0 )) (0)
       ))
      then
       (let _jessie_796 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 369 11 12#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (#"escape_string_mem.jc" 720 62 76# "expl:Integer cast"
        (Unsafe_int32.of_int (120))) )) in
       (let _jessie_797 = !out_4 in
       (let _jessie_798 = (0) in
       (let _jessie_799 = _jessie_797 in
       (upd  charP_charM_end_0_14 _jessie_799 _jessie_796 ))))) else ());
      begin
      (out_4 :=
       (shift_  !out_4
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 722 44 56# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_13, dst }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 371 12 27#
         ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (2)))) } ;
        () end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 372 5 14#
       ((<) 
        (#"escape_string_mem.jc" 730 25 38# (sub_pointer_  !out_4 end_0 ))
        (0) ))
       then
        (let _jessie_802 =
        (acc  !charP_charM_hex_asc_2
         (shift_  hex_asc
          (Unsafe_int32.to_int 
           (Unsafe_int32.(/) 
            (Unsafe_int32.(%) 
             (#"/home/maria/ded-rep/escape_string_mem.c" 373 19 20#
             "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c ))
             (#"escape_string_mem.jc" 738 66 80# "expl:Integer cast"
             (Unsafe_int32.of_int (240))) )
            (#"escape_string_mem.jc" 739 65 78# "expl:Integer cast"
            (Unsafe_int32.of_int (16))) ) ) ) ) in
        (let _jessie_803 = !out_4 in
        (let _jessie_804 = (0) in
        (let _jessie_805 = _jessie_803 in
        (upd  charP_charM_end_0_14 _jessie_805 _jessie_802 ))))) else ());
       begin
       (out_4 :=
        (shift_  !out_4
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 741 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        any unit
        requires { true } reads { char_xP_char_xM_dst_13, dst }
        ensures {
          (#"/home/maria/ded-rep/escape_string_mem.c" 375 12 27#
          ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (3)))) } ;
         () end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 376 5 14#
        ((<) 
         (#"escape_string_mem.jc" 749 25 38# (sub_pointer_  !out_4 end_0 ))
         (0) ))
        then
         (let _jessie_808 =
         (acc  !charP_charM_hex_asc_2
          (shift_  hex_asc
           (Unsafe_int32.to_int 
            (Unsafe_int32.(%) 
             (#"/home/maria/ded-rep/escape_string_mem.c" 377 19 20#
             "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c ))
             (#"escape_string_mem.jc" 755 65 78# "expl:Integer cast"
             (Unsafe_int32.of_int (15))) ) ) ) ) in
         (let _jessie_809 = !out_4 in
         (let _jessie_810 = (0) in
         (let _jessie_811 = _jessie_809 in
         (upd  charP_charM_end_0_14 _jessie_811 _jessie_808 ))))) else ());
        begin
        (out_4 :=
         (shift_  !out_4
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 757 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         any unit
         requires { true } reads { char_xP_char_xM_dst_13, dst }
         ensures {
           (#"/home/maria/ded-rep/escape_string_mem.c" 379 12 27#
           ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (4)))) } ;
          () end;
         begin
         (let _jessie_814 = !out_4 in
         (let _jessie_815 = dst in
         (let _jessie_816 = (0) in
         (let _jessie_817 = _jessie_815 in
         (upd  char_xP_char_xM_dst_13 _jessie_817 _jessie_814 )))));
          begin
          (__retres_4 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 382 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 765 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) )));
           begin (return := !__retres_4); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
  let escape_hex_ensures_size_three
  #"/home/maria/ded-rep/escape_string_mem.c" 360 12 62#
  "expl:Function escape_hex, behavior size_three" =
  fun
   (c : Uint8.t) (dst : (pointer char_xP)) (end_0 : (pointer voidP))
   (charP_charM_end_0_14 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_13
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_13_alloc_table :
   (alloc_table char_xP)) (voidP_end_0_14_alloc_table : (alloc_table voidP))
   (voidP_end_0_14_tag_table : (tag_table voidP)) 
   requires {
   (((=) (shift (select !char_xP_char_xM_dst_13 dst) (3)) end_0) /\
   (((allocated voidP_end_0_14_alloc_table end_0) ->
     (((=) (typeof voidP_end_0_14_tag_table end_0) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_0_14_alloc_table end_0) i) /\
       ((<) i (offset_max voidP_end_0_14_alloc_table end_0))) ->
       ((=) (typeof voidP_end_0_14_tag_table (shift end_0 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 10 21#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min voidP_end_0_14_alloc_table end_0) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max voidP_end_0_14_alloc_table end_0) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 25 36#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min char_xP_dst_13_alloc_table dst) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max char_xP_dst_13_alloc_table dst) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 320 6 27#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=)
     (offset_min voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=)
     (offset_max voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (3)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 321 13 48#
   (same_block (select !char_xP_char_xM_dst_13 dst) end_0)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 666 10 96# "expl:Assigns clause"
       (not_assigns voidP_end_0_14_alloc_table voidP_end_0_14_alloc_table
       (old !charP_charM_end_0_14) !charP_charM_end_0_14
       (pset_union
       (pset_singleton (select (old !char_xP_char_xM_dst_13) dst))
       (pset_union
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_13) dst) (1)))
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_13) dst) (2)))))))
      /\
      (#"escape_string_mem.jc" 666 10 96# "expl:Assigns clause"
      (not_assigns char_xP_dst_13_alloc_table char_xP_dst_13_alloc_table (old
      !char_xP_char_xM_dst_13) !char_xP_char_xM_dst_13 (pset_singleton dst))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_13 dst)
      (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 344 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_0_14
      (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (4))))
      (#"escape_string_mem.jc" 673 35 47# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 345 16 34#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_0_14
      (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (3))))
      (#"escape_string_mem.jc" 675 37 50# "expl:Integer cast" (Int8.of_int
      (120)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 346 16 56#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_0_14
      (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (2))))
      (select !charP_charM_hex_asc_2
      (shift hex_asc
      (ComputerDivision.div (ComputerDivision.mod (Uint8.to_int c) (240))
      (16))))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 347 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_4 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_4 = ref (Unsafe_enum__bool.any_  () ) in
    begin
    (out_4 := (acc  !char_xP_char_xM_dst_13 dst ));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 364 5 14#
     ((<)  (#"escape_string_mem.jc" 709 22 35# (sub_pointer_  !out_4 end_0 ))
      (0) ))
     then
      (let _jessie_854 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 365 12 13#
      "expl:Integer cast"
      (Unsafe_int8_of_Unsafe_int32.cast 
       (#"escape_string_mem.jc" 710 59 72# "expl:Integer cast"
       (Unsafe_int32.of_int (92))) )) in
      (let _jessie_855 = !out_4 in
      (let _jessie_856 = (0) in
      (let _jessie_857 = _jessie_855 in
      (upd  charP_charM_end_0_14 _jessie_857 _jessie_854 ))))) else ());
     begin
     (out_4 :=
      (shift_  !out_4
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 711 44 56# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ));
      begin
      any unit
      requires { true } reads { char_xP_char_xM_dst_13, dst }
      ensures {
        (#"/home/maria/ded-rep/escape_string_mem.c" 367 12 27#
        ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (1)))) } ; ()
      end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 368 5 14#
      ((<) 
       (#"escape_string_mem.jc" 719 25 38# (sub_pointer_  !out_4 end_0 )) (0)
       ))
      then
       (let _jessie_860 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 369 11 12#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (#"escape_string_mem.jc" 720 62 76# "expl:Integer cast"
        (Unsafe_int32.of_int (120))) )) in
       (let _jessie_861 = !out_4 in
       (let _jessie_862 = (0) in
       (let _jessie_863 = _jessie_861 in
       (upd  charP_charM_end_0_14 _jessie_863 _jessie_860 ))))) else ());
      begin
      (out_4 :=
       (shift_  !out_4
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 722 44 56# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_13, dst }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 371 12 27#
         ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (2)))) } ;
        () end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 372 5 14#
       ((<) 
        (#"escape_string_mem.jc" 730 25 38# (sub_pointer_  !out_4 end_0 ))
        (0) ))
       then
        (let _jessie_866 =
        (acc  !charP_charM_hex_asc_2
         (shift_  hex_asc
          (Unsafe_int32.to_int 
           (Unsafe_int32.(/) 
            (Unsafe_int32.(%) 
             (#"/home/maria/ded-rep/escape_string_mem.c" 373 19 20#
             "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c ))
             (#"escape_string_mem.jc" 738 66 80# "expl:Integer cast"
             (Unsafe_int32.of_int (240))) )
            (#"escape_string_mem.jc" 739 65 78# "expl:Integer cast"
            (Unsafe_int32.of_int (16))) ) ) ) ) in
        (let _jessie_867 = !out_4 in
        (let _jessie_868 = (0) in
        (let _jessie_869 = _jessie_867 in
        (upd  charP_charM_end_0_14 _jessie_869 _jessie_866 ))))) else ());
       begin
       (out_4 :=
        (shift_  !out_4
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 741 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        any unit
        requires { true } reads { char_xP_char_xM_dst_13, dst }
        ensures {
          (#"/home/maria/ded-rep/escape_string_mem.c" 375 12 27#
          ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (3)))) } ;
         () end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 376 5 14#
        ((<) 
         (#"escape_string_mem.jc" 749 25 38# (sub_pointer_  !out_4 end_0 ))
         (0) ))
        then
         (let _jessie_872 =
         (acc  !charP_charM_hex_asc_2
          (shift_  hex_asc
           (Unsafe_int32.to_int 
            (Unsafe_int32.(%) 
             (#"/home/maria/ded-rep/escape_string_mem.c" 377 19 20#
             "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c ))
             (#"escape_string_mem.jc" 755 65 78# "expl:Integer cast"
             (Unsafe_int32.of_int (15))) ) ) ) ) in
         (let _jessie_873 = !out_4 in
         (let _jessie_874 = (0) in
         (let _jessie_875 = _jessie_873 in
         (upd  charP_charM_end_0_14 _jessie_875 _jessie_872 ))))) else ());
        begin
        (out_4 :=
         (shift_  !out_4
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 757 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         any unit
         requires { true } reads { char_xP_char_xM_dst_13, dst }
         ensures {
           (#"/home/maria/ded-rep/escape_string_mem.c" 379 12 27#
           ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (4)))) } ;
          () end;
         begin
         (let _jessie_878 = !out_4 in
         (let _jessie_879 = dst in
         (let _jessie_880 = (0) in
         (let _jessie_881 = _jessie_879 in
         (upd  char_xP_char_xM_dst_13 _jessie_881 _jessie_878 )))));
          begin
          (__retres_4 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 382 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 765 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) )));
           begin (return := !__retres_4); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
  let escape_hex_ensures_size_two
  #"/home/maria/ded-rep/escape_string_mem.c" 360 12 62#
  "expl:Function escape_hex, behavior size_two" =
  fun
   (c : Uint8.t) (dst : (pointer char_xP)) (end_0 : (pointer voidP))
   (charP_charM_end_0_14 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_13
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_13_alloc_table :
   (alloc_table char_xP)) (voidP_end_0_14_alloc_table : (alloc_table voidP))
   (voidP_end_0_14_tag_table : (tag_table voidP)) 
   requires {
   (((=) (shift (select !char_xP_char_xM_dst_13 dst) (2)) end_0) /\
   (((allocated voidP_end_0_14_alloc_table end_0) ->
     (((=) (typeof voidP_end_0_14_tag_table end_0) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_0_14_alloc_table end_0) i) /\
       ((<) i (offset_max voidP_end_0_14_alloc_table end_0))) ->
       ((=) (typeof voidP_end_0_14_tag_table (shift end_0 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 10 21#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min voidP_end_0_14_alloc_table end_0) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max voidP_end_0_14_alloc_table end_0) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 25 36#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min char_xP_dst_13_alloc_table dst) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max char_xP_dst_13_alloc_table dst) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 320 6 27#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=)
     (offset_min voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=)
     (offset_max voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (3)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 321 13 48#
   (same_block (select !char_xP_char_xM_dst_13 dst) end_0)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 654 10 69# "expl:Assigns clause"
       (not_assigns voidP_end_0_14_alloc_table voidP_end_0_14_alloc_table
       (old !charP_charM_end_0_14) !charP_charM_end_0_14
       (pset_union
       (pset_singleton (select (old !char_xP_char_xM_dst_13) dst))
       (pset_singleton
       (shift (select (old !char_xP_char_xM_dst_13) dst) (1))))))
      /\
      (#"escape_string_mem.jc" 654 10 69# "expl:Assigns clause"
      (not_assigns char_xP_dst_13_alloc_table char_xP_dst_13_alloc_table (old
      !char_xP_char_xM_dst_13) !char_xP_char_xM_dst_13 (pset_singleton dst))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_13 dst)
      (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 337 16 35#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_0_14
      (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (4))))
      (#"escape_string_mem.jc" 660 35 47# "expl:Integer cast" (Int8.of_int
      (92)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 338 16 34#
      "expl:Ensures clause"
      (Int8.(=)
      (select !charP_charM_end_0_14
      (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (3))))
      (#"escape_string_mem.jc" 662 37 50# "expl:Integer cast" (Int8.of_int
      (120)))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 339 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_4 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_4 = ref (Unsafe_enum__bool.any_  () ) in
    begin
    (out_4 := (acc  !char_xP_char_xM_dst_13 dst ));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 364 5 14#
     ((<)  (#"escape_string_mem.jc" 709 22 35# (sub_pointer_  !out_4 end_0 ))
      (0) ))
     then
      (let _jessie_822 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 365 12 13#
      "expl:Integer cast"
      (Unsafe_int8_of_Unsafe_int32.cast 
       (#"escape_string_mem.jc" 710 59 72# "expl:Integer cast"
       (Unsafe_int32.of_int (92))) )) in
      (let _jessie_823 = !out_4 in
      (let _jessie_824 = (0) in
      (let _jessie_825 = _jessie_823 in
      (upd  charP_charM_end_0_14 _jessie_825 _jessie_822 ))))) else ());
     begin
     (out_4 :=
      (shift_  !out_4
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 711 44 56# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ));
      begin
      any unit
      requires { true } reads { char_xP_char_xM_dst_13, dst }
      ensures {
        (#"/home/maria/ded-rep/escape_string_mem.c" 367 12 27#
        ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (1)))) } ; ()
      end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 368 5 14#
      ((<) 
       (#"escape_string_mem.jc" 719 25 38# (sub_pointer_  !out_4 end_0 )) (0)
       ))
      then
       (let _jessie_828 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 369 11 12#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (#"escape_string_mem.jc" 720 62 76# "expl:Integer cast"
        (Unsafe_int32.of_int (120))) )) in
       (let _jessie_829 = !out_4 in
       (let _jessie_830 = (0) in
       (let _jessie_831 = _jessie_829 in
       (upd  charP_charM_end_0_14 _jessie_831 _jessie_828 ))))) else ());
      begin
      (out_4 :=
       (shift_  !out_4
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 722 44 56# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_13, dst }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 371 12 27#
         ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (2)))) } ;
        () end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 372 5 14#
       ((<) 
        (#"escape_string_mem.jc" 730 25 38# (sub_pointer_  !out_4 end_0 ))
        (0) ))
       then
        (let _jessie_834 =
        (acc  !charP_charM_hex_asc_2
         (shift_  hex_asc
          (Unsafe_int32.to_int 
           (Unsafe_int32.(/) 
            (Unsafe_int32.(%) 
             (#"/home/maria/ded-rep/escape_string_mem.c" 373 19 20#
             "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c ))
             (#"escape_string_mem.jc" 738 66 80# "expl:Integer cast"
             (Unsafe_int32.of_int (240))) )
            (#"escape_string_mem.jc" 739 65 78# "expl:Integer cast"
            (Unsafe_int32.of_int (16))) ) ) ) ) in
        (let _jessie_835 = !out_4 in
        (let _jessie_836 = (0) in
        (let _jessie_837 = _jessie_835 in
        (upd  charP_charM_end_0_14 _jessie_837 _jessie_834 ))))) else ());
       begin
       (out_4 :=
        (shift_  !out_4
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 741 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        any unit
        requires { true } reads { char_xP_char_xM_dst_13, dst }
        ensures {
          (#"/home/maria/ded-rep/escape_string_mem.c" 375 12 27#
          ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (3)))) } ;
         () end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 376 5 14#
        ((<) 
         (#"escape_string_mem.jc" 749 25 38# (sub_pointer_  !out_4 end_0 ))
         (0) ))
        then
         (let _jessie_840 =
         (acc  !charP_charM_hex_asc_2
          (shift_  hex_asc
           (Unsafe_int32.to_int 
            (Unsafe_int32.(%) 
             (#"/home/maria/ded-rep/escape_string_mem.c" 377 19 20#
             "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c ))
             (#"escape_string_mem.jc" 755 65 78# "expl:Integer cast"
             (Unsafe_int32.of_int (15))) ) ) ) ) in
         (let _jessie_841 = !out_4 in
         (let _jessie_842 = (0) in
         (let _jessie_843 = _jessie_841 in
         (upd  charP_charM_end_0_14 _jessie_843 _jessie_840 ))))) else ());
        begin
        (out_4 :=
         (shift_  !out_4
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 757 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         any unit
         requires { true } reads { char_xP_char_xM_dst_13, dst }
         ensures {
           (#"/home/maria/ded-rep/escape_string_mem.c" 379 12 27#
           ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (4)))) } ;
          () end;
         begin
         (let _jessie_846 = !out_4 in
         (let _jessie_847 = dst in
         (let _jessie_848 = (0) in
         (let _jessie_849 = _jessie_847 in
         (upd  char_xP_char_xM_dst_13 _jessie_849 _jessie_846 )))));
          begin
          (__retres_4 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 382 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 765 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) )));
           begin (return := !__retres_4); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
  let escape_hex_ensures_size_zero
  #"/home/maria/ded-rep/escape_string_mem.c" 360 12 62#
  "expl:Function escape_hex, behavior size_zero" =
  fun
   (c : Uint8.t) (dst : (pointer char_xP)) (end_0 : (pointer voidP))
   (charP_charM_end_0_14 : ref (memory voidP Int8.t)) (char_xP_char_xM_dst_13
   : ref (memory char_xP (pointer voidP))) (char_xP_dst_13_alloc_table :
   (alloc_table char_xP)) (voidP_end_0_14_alloc_table : (alloc_table voidP))
   (voidP_end_0_14_tag_table : (tag_table voidP)) 
   requires {
   (((same_block (select !char_xP_char_xM_dst_13 dst) end_0) /\
    ((>=) (sub_pointer (select !char_xP_char_xM_dst_13 dst) end_0) (0)))
   /\
   (((allocated voidP_end_0_14_alloc_table end_0) ->
     (((=) (typeof voidP_end_0_14_tag_table end_0) charP_tag) /\
     (forall i : int.
      ((((<=) (offset_min voidP_end_0_14_alloc_table end_0) i) /\
       ((<) i (offset_max voidP_end_0_14_alloc_table end_0))) ->
       ((=) (typeof voidP_end_0_14_tag_table (shift end_0 i)) charP_tag)))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 10 21#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min voidP_end_0_14_alloc_table end_0) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max voidP_end_0_14_alloc_table end_0) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 319 25 36#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=) (offset_min char_xP_dst_13_alloc_table dst) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=) (offset_max char_xP_dst_13_alloc_table dst) (0)))
    /\ (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))
   /\
   (#"escape_string_mem.jc" 618 12 1081#
   ((#"/home/maria/ded-rep/escape_string_mem.c" 320 6 27#
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((<=)
     (offset_min voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (0)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081#
     ((>=)
     (offset_max voidP_end_0_14_alloc_table
     (select !char_xP_char_xM_dst_13 dst)) (3)))
    /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081#
    ((#"escape_string_mem.jc" 618 12 1081# ((=) true true)) /\
    (#"escape_string_mem.jc" 618 12 1081# ((=) true true)))))))))))))
   /\
   (#"/home/maria/ded-rep/escape_string_mem.c" 321 13 48#
   (same_block (select !char_xP_char_xM_dst_13 dst) end_0)))))))))) }
   ensures {
     ("expl:Postcondition"
     (((#"escape_string_mem.jc" 639 10 21# "expl:Assigns clause"
       (not_assigns voidP_end_0_14_alloc_table voidP_end_0_14_alloc_table
       (old !charP_charM_end_0_14) !charP_charM_end_0_14 pset_empty))
      /\
      (#"escape_string_mem.jc" 639 10 21# "expl:Assigns clause"
      (not_assigns char_xP_dst_13_alloc_table char_xP_dst_13_alloc_table (old
      !char_xP_char_xM_dst_13) !char_xP_char_xM_dst_13 (pset_singleton dst))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 325 16 38#
     "expl:Ensures clause"
     (#"/home/maria/ded-rep/escape_string_mem.c" 325 16 38#
     "expl:Ensures clause"
     ((#"/home/maria/ded-rep/escape_string_mem.c" 325 16 38#
      "expl:Ensures clause"
      ((=) (select !char_xP_char_xM_dst_13 dst)
      (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
     /\
     (#"/home/maria/ded-rep/escape_string_mem.c" 326 16 32#
     "expl:Ensures clause" ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))
     }  ->
   'Init:
   (let return = ref (Unsafe_enum__bool.any_  () ) in
   try
    begin
    (let out_4 = ref (any_pointer  () : (pointer voidP)) in
    (let __retres_4 = ref (Unsafe_enum__bool.any_  () ) in
    begin
    (out_4 := (acc  !char_xP_char_xM_dst_13 dst ));
     (if
     (#"/home/maria/ded-rep/escape_string_mem.c" 364 5 14#
     ((<)  (#"escape_string_mem.jc" 709 22 35# (sub_pointer_  !out_4 end_0 ))
      (0) ))
     then
      (let _jessie_758 =
      (#"/home/maria/ded-rep/escape_string_mem.c" 365 12 13#
      "expl:Integer cast"
      (Unsafe_int8_of_Unsafe_int32.cast 
       (#"escape_string_mem.jc" 710 59 72# "expl:Integer cast"
       (Unsafe_int32.of_int (92))) )) in
      (let _jessie_759 = !out_4 in
      (let _jessie_760 = (0) in
      (let _jessie_761 = _jessie_759 in
      (upd  charP_charM_end_0_14 _jessie_761 _jessie_758 ))))) else ());
     begin
     (out_4 :=
      (shift_  !out_4
       (Unsafe_int32.to_int 
        (#"escape_string_mem.jc" 711 44 56# "expl:Integer cast"
        (Unsafe_int32.of_int (1))) ) ));
      begin
      any unit
      requires { true } reads { char_xP_char_xM_dst_13, dst }
      ensures {
        (#"/home/maria/ded-rep/escape_string_mem.c" 367 12 27#
        ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (1)))) } ; ()
      end;
      (if
      (#"/home/maria/ded-rep/escape_string_mem.c" 368 5 14#
      ((<) 
       (#"escape_string_mem.jc" 719 25 38# (sub_pointer_  !out_4 end_0 )) (0)
       ))
      then
       (let _jessie_764 =
       (#"/home/maria/ded-rep/escape_string_mem.c" 369 11 12#
       "expl:Integer cast"
       (Unsafe_int8_of_Unsafe_int32.cast 
        (#"escape_string_mem.jc" 720 62 76# "expl:Integer cast"
        (Unsafe_int32.of_int (120))) )) in
       (let _jessie_765 = !out_4 in
       (let _jessie_766 = (0) in
       (let _jessie_767 = _jessie_765 in
       (upd  charP_charM_end_0_14 _jessie_767 _jessie_764 ))))) else ());
      begin
      (out_4 :=
       (shift_  !out_4
        (Unsafe_int32.to_int 
         (#"escape_string_mem.jc" 722 44 56# "expl:Integer cast"
         (Unsafe_int32.of_int (1))) ) ));
       begin
       any unit
       requires { true } reads { char_xP_char_xM_dst_13, dst }
       ensures {
         (#"/home/maria/ded-rep/escape_string_mem.c" 371 12 27#
         ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (2)))) } ;
        () end;
       (if
       (#"/home/maria/ded-rep/escape_string_mem.c" 372 5 14#
       ((<) 
        (#"escape_string_mem.jc" 730 25 38# (sub_pointer_  !out_4 end_0 ))
        (0) ))
       then
        (let _jessie_770 =
        (acc  !charP_charM_hex_asc_2
         (shift_  hex_asc
          (Unsafe_int32.to_int 
           (Unsafe_int32.(/) 
            (Unsafe_int32.(%) 
             (#"/home/maria/ded-rep/escape_string_mem.c" 373 19 20#
             "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c ))
             (#"escape_string_mem.jc" 738 66 80# "expl:Integer cast"
             (Unsafe_int32.of_int (240))) )
            (#"escape_string_mem.jc" 739 65 78# "expl:Integer cast"
            (Unsafe_int32.of_int (16))) ) ) ) ) in
        (let _jessie_771 = !out_4 in
        (let _jessie_772 = (0) in
        (let _jessie_773 = _jessie_771 in
        (upd  charP_charM_end_0_14 _jessie_773 _jessie_770 ))))) else ());
       begin
       (out_4 :=
        (shift_  !out_4
         (Unsafe_int32.to_int 
          (#"escape_string_mem.jc" 741 44 56# "expl:Integer cast"
          (Unsafe_int32.of_int (1))) ) ));
        begin
        any unit
        requires { true } reads { char_xP_char_xM_dst_13, dst }
        ensures {
          (#"/home/maria/ded-rep/escape_string_mem.c" 375 12 27#
          ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (3)))) } ;
         () end;
        (if
        (#"/home/maria/ded-rep/escape_string_mem.c" 376 5 14#
        ((<) 
         (#"escape_string_mem.jc" 749 25 38# (sub_pointer_  !out_4 end_0 ))
         (0) ))
        then
         (let _jessie_776 =
         (acc  !charP_charM_hex_asc_2
          (shift_  hex_asc
           (Unsafe_int32.to_int 
            (Unsafe_int32.(%) 
             (#"/home/maria/ded-rep/escape_string_mem.c" 377 19 20#
             "expl:Integer cast" (Unsafe_int32_of_Unsafe_uint8.cast  c ))
             (#"escape_string_mem.jc" 755 65 78# "expl:Integer cast"
             (Unsafe_int32.of_int (15))) ) ) ) ) in
         (let _jessie_777 = !out_4 in
         (let _jessie_778 = (0) in
         (let _jessie_779 = _jessie_777 in
         (upd  charP_charM_end_0_14 _jessie_779 _jessie_776 ))))) else ());
        begin
        (out_4 :=
         (shift_  !out_4
          (Unsafe_int32.to_int 
           (#"escape_string_mem.jc" 757 44 56# "expl:Integer cast"
           (Unsafe_int32.of_int (1))) ) ));
         begin
         any unit
         requires { true } reads { char_xP_char_xM_dst_13, dst }
         ensures {
           (#"/home/maria/ded-rep/escape_string_mem.c" 379 12 27#
           ((=) !out_4 (shift (select !char_xP_char_xM_dst_13 dst) (4)))) } ;
          () end;
         begin
         (let _jessie_782 = !out_4 in
         (let _jessie_783 = dst in
         (let _jessie_784 = (0) in
         (let _jessie_785 = _jessie_783 in
         (upd  char_xP_char_xM_dst_13 _jessie_785 _jessie_782 )))));
          begin
          (__retres_4 :=
           (#"/home/maria/ded-rep/escape_string_mem.c" 382 8 12#
           "expl:Integer cast"
           (Unsafe_enum__bool_of_Unsafe_int32.cast 
            (#"escape_string_mem.jc" 765 41 53# "expl:Integer cast"
            (Unsafe_int32.of_int (1))) )));
           begin (return := !__retres_4); (raise Return) end end end end end
      end end end)); absurd  end with Return -> !return end)
  
end

theory Logic_type_padding

  use why3.Bool.Bool 
  
  type padding 
  
end

theory Struct_voidP

  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_tag_table 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_alloc 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  use import core.Jessie_voidp_tag_id 
  
  predicate frame_tag_struct_voidP (p : (pointer voidP)) (old_voidP_tag_table
  : (tag_table voidP)) (voidP_tag_table : (tag_table voidP))
  =
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))
  
  predicate frame_free_struct_voidP (p : (pointer voidP))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))
  
  predicate frame_alloc_struct_voidP (p : (pointer voidP)) (n : int)
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))
  
  predicate fresh_tag_struct_voidP (p : (pointer voidP)) (voidP_tag_table :
  (tag_table voidP)) = (tag_fresh voidP_tag_table p)
  
  predicate fresh_alloc_struct_voidP (p : (pointer voidP)) (voidP_alloc_table
  : (alloc_table voidP)) = (alloc_fresh voidP_alloc_table p)
  
  predicate container_of_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP)) = true
  
  predicate container_of_struct_voidP (p : (pointer voidP)) (l : int) (r :
  int) (voidP_tag_table : (tag_table voidP)) = true
  
  predicate typeof_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = ((=) (typeof voidP_tag_table p) voidP_tag)
  
  predicate typeof_struct_voidP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     (((=) (typeof voidP_tag_table p) voidP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof voidP_tag_table (shift p i)) voidP_tag))))
  
  predicate instanceof_singleton_struct_voidP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = (instanceof voidP_tag_table p voidP_tag)
  
  predicate instanceof_struct_voidP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     ((instanceof voidP_tag_table p voidP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof voidP_tag_table (shift p i) voidP_tag))))
  
  predicate right_valid_struct_voidP (p : (pointer voidP)) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((>=) (offset_max voidP_alloc_table p) b)
  
  predicate left_valid_struct_voidP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = ((<=) (offset_min voidP_alloc_table p) a)
  
  predicate valid_struct_voidP (p : (pointer voidP)) (a : int) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  =
     (((<=) (offset_min voidP_alloc_table p) a) /\
     ((>=) (offset_max voidP_alloc_table p) b))
  
  predicate strict_valid_struct_voidP (p : (pointer voidP)) (a : int) (b :
  int) (voidP_alloc_table : (alloc_table voidP))
  =
     (((=) (offset_min voidP_alloc_table p) a) /\
     ((=) (offset_max voidP_alloc_table p) b))
  
end

theory Struct_charP

  use import Struct_voidP 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_tag_table 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_alloc 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  use import core.Jessie_charp_tag_id 
  
  predicate frame_tag_struct_charP (p : (pointer voidP)) (old_voidP_tag_table
  : (tag_table voidP)) (voidP_tag_table : (tag_table voidP))
  =
     ((tag_extends old_voidP_tag_table voidP_tag_table) /\
     (alloc_tag_block old_voidP_tag_table voidP_tag_table p))
  
  predicate frame_free_struct_charP (p : (pointer voidP))
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((free_extends old_voidP_alloc_table voidP_alloc_table) /\
     (free_block old_voidP_alloc_table voidP_alloc_table p))
  
  predicate frame_alloc_struct_charP (p : (pointer voidP)) (n : int)
  (old_voidP_alloc_table : (alloc_table voidP)) (voidP_alloc_table :
  (alloc_table voidP))
  =
     ((alloc_extends old_voidP_alloc_table voidP_alloc_table) /\
     (alloc_block old_voidP_alloc_table voidP_alloc_table p n))
  
  predicate fresh_tag_struct_charP (p : (pointer voidP)) (voidP_tag_table :
  (tag_table voidP)) = (fresh_tag_struct_voidP p voidP_tag_table)
  
  predicate fresh_alloc_struct_charP (p : (pointer voidP)) (voidP_alloc_table
  : (alloc_table voidP))
  = (fresh_alloc_struct_voidP p voidP_alloc_table)
  
  predicate container_of_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP)) = true
  
  predicate container_of_struct_charP (p : (pointer voidP)) (l : int) (r :
  int) (voidP_tag_table : (tag_table voidP)) = true
  
  predicate typeof_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = ((=) (typeof voidP_tag_table p) charP_tag)
  
  predicate typeof_struct_charP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     (((=) (typeof voidP_tag_table p) charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof voidP_tag_table (shift p i)) charP_tag))))
  
  predicate instanceof_singleton_struct_charP (p : (pointer voidP))
  (voidP_tag_table : (tag_table voidP))
  = (instanceof voidP_tag_table p charP_tag)
  
  predicate instanceof_struct_charP (p : (pointer voidP)) (l : int) (r : int)
  (voidP_tag_table : (tag_table voidP))
  =
     ((instanceof voidP_tag_table p charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof voidP_tag_table (shift p i) charP_tag))))
  
  predicate right_valid_struct_charP (p : (pointer voidP)) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (right_valid_struct_voidP p b voidP_alloc_table)
  
  predicate left_valid_struct_charP (p : (pointer voidP)) (a : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (left_valid_struct_voidP p a voidP_alloc_table)
  
  predicate valid_struct_charP (p : (pointer voidP)) (a : int) (b : int)
  (voidP_alloc_table : (alloc_table voidP))
  = (valid_struct_voidP p a b voidP_alloc_table)
  
  predicate strict_valid_struct_charP (p : (pointer voidP)) (a : int) (b :
  int) (voidP_alloc_table : (alloc_table voidP))
  = (strict_valid_struct_voidP p a b voidP_alloc_table)
  
end

module Struct_charP_unsafe

  use import Struct_charP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  val free_struct_charP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/ (freeable !voidP_alloc_table p))
      }
    writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_charP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\ (fresh_alloc_struct_charP p !voidP_alloc_table))) }
  
  val allocate_struct_charP_requires
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { ((>=) n (0)) } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_charP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_charP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_charP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_charP result (old !voidP_alloc_table)) /\
       ((fresh_tag_struct_charP result (old !voidP_tag_table)) /\
       ((typeof_struct_charP result (0) n !voidP_tag_table) /\
       (container_of_struct_charP result (0) n !voidP_tag_table))))))) }
  
end

module Struct_charP_safe

  use import Struct_charP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_alloc_table 
  
  use int.Int 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_charP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires { true } writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_charP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\ (fresh_alloc_struct_charP p !voidP_alloc_table))) }
  
  val allocate_struct_charP
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_charP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_charP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_charP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_charP result (old !voidP_alloc_table)) /\
       ((fresh_tag_struct_charP result (old !voidP_tag_table)) /\
       ((typeof_struct_charP result (0) n !voidP_tag_table) /\
       (container_of_struct_charP result (0) n !voidP_tag_table))))))) }
  
  val allocate_singleton_struct_charP
  (voidP_alloc_table : ref (alloc_table voidP)) 
   (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
    ensures {
      ((strict_valid_struct_charP result (0) (0) !voidP_alloc_table) /\
      ((frame_alloc_struct_charP result (1) (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      ((frame_tag_struct_charP result (old !voidP_tag_table)
       !voidP_tag_table)
      /\
      ((fresh_alloc_struct_charP result (old !voidP_alloc_table)) /\
      ((fresh_tag_struct_charP result (old !voidP_tag_table)) /\
      ((typeof_singleton_struct_charP result !voidP_tag_table) /\
      (container_of_singleton_struct_charP result !voidP_tag_table))))))) }
  
end

theory Struct_char_xP

  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_tag_table 
  
  use import core.Jessie_tag_id 
  
  use import core.Jessie_tag 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_alloc 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  function char_xP_tag  : (tag_id char_xP)
  
  axiom Char_xP_parenttag_bottom :
  (parenttag char_xP_tag bottom_tag)
  
  axiom Char_xP_is_final :
  (forall char_xP_tag_table : (tag_table char_xP).
   (forall p : (pointer char_xP).
    ((instanceof char_xP_tag_table p char_xP_tag) ->
     ((=) (typeof char_xP_tag_table p) char_xP_tag))))
  
  predicate frame_tag_struct_char_xP (p : (pointer char_xP))
  (old_char_xP_tag_table : (tag_table char_xP)) (char_xP_tag_table :
  (tag_table char_xP))
  =
     ((tag_extends old_char_xP_tag_table char_xP_tag_table) /\
     (alloc_tag_block old_char_xP_tag_table char_xP_tag_table p))
  
  predicate frame_free_struct_char_xP (p : (pointer char_xP))
  (old_char_xP_alloc_table : (alloc_table char_xP)) (char_xP_alloc_table :
  (alloc_table char_xP))
  =
     ((free_extends old_char_xP_alloc_table char_xP_alloc_table) /\
     (free_block old_char_xP_alloc_table char_xP_alloc_table p))
  
  predicate frame_alloc_struct_char_xP (p : (pointer char_xP)) (n : int)
  (old_char_xP_alloc_table : (alloc_table char_xP)) (char_xP_alloc_table :
  (alloc_table char_xP))
  =
     ((alloc_extends old_char_xP_alloc_table char_xP_alloc_table) /\
     (alloc_block old_char_xP_alloc_table char_xP_alloc_table p n))
  
  predicate fresh_tag_struct_char_xP (p : (pointer char_xP))
  (char_xP_tag_table : (tag_table char_xP))
  = (tag_fresh char_xP_tag_table p)
  
  predicate fresh_alloc_struct_char_xP (p : (pointer char_xP))
  (char_xP_alloc_table : (alloc_table char_xP))
  = (alloc_fresh char_xP_alloc_table p)
  
  predicate container_of_singleton_struct_char_xP (p : (pointer char_xP))
  (char_xP_tag_table : (tag_table char_xP)) = true
  
  predicate container_of_struct_char_xP (p : (pointer char_xP)) (l : int) (r
  : int) (char_xP_tag_table : (tag_table char_xP)) = true
  
  predicate typeof_singleton_struct_char_xP (p : (pointer char_xP))
  (char_xP_tag_table : (tag_table char_xP))
  = ((=) (typeof char_xP_tag_table p) char_xP_tag)
  
  predicate typeof_struct_char_xP (p : (pointer char_xP)) (l : int) (r : int)
  (char_xP_tag_table : (tag_table char_xP))
  =
     (((=) (typeof char_xP_tag_table p) char_xP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof char_xP_tag_table (shift p i)) char_xP_tag))))
  
  predicate instanceof_singleton_struct_char_xP (p : (pointer char_xP))
  (char_xP_tag_table : (tag_table char_xP))
  = (instanceof char_xP_tag_table p char_xP_tag)
  
  predicate instanceof_struct_char_xP (p : (pointer char_xP)) (l : int) (r :
  int) (char_xP_tag_table : (tag_table char_xP))
  =
     ((instanceof char_xP_tag_table p char_xP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof char_xP_tag_table (shift p i) char_xP_tag))))
  
  predicate right_valid_struct_char_xP (p : (pointer char_xP)) (b : int)
  (char_xP_alloc_table : (alloc_table char_xP))
  = ((>=) (offset_max char_xP_alloc_table p) b)
  
  predicate left_valid_struct_char_xP (p : (pointer char_xP)) (a : int)
  (char_xP_alloc_table : (alloc_table char_xP))
  = ((<=) (offset_min char_xP_alloc_table p) a)
  
  predicate valid_struct_char_xP (p : (pointer char_xP)) (a : int) (b : int)
  (char_xP_alloc_table : (alloc_table char_xP))
  =
     (((<=) (offset_min char_xP_alloc_table p) a) /\
     ((>=) (offset_max char_xP_alloc_table p) b))
  
  predicate strict_valid_struct_char_xP (p : (pointer char_xP)) (a : int) (b
  : int) (char_xP_alloc_table : (alloc_table char_xP))
  =
     (((=) (offset_min char_xP_alloc_table p) a) /\
     ((=) (offset_max char_xP_alloc_table p) b))
  
  axiom Char_xP_int : ((=) (int_of_tag char_xP_tag) (4))
  
end

module Struct_char_xP_unsafe

  use import Struct_char_xP 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  val free_struct_char_xP
  (p : (pointer char_xP)) 
   (char_xP_alloc_table : ref (alloc_table char_xP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !char_xP_alloc_table p)) }
    writes { char_xP_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !char_xP_alloc_table (old !char_xP_alloc_table)))
      \/
      ((frame_free_struct_char_xP p (old !char_xP_alloc_table)
       !char_xP_alloc_table)
      /\ (fresh_alloc_struct_char_xP p !char_xP_alloc_table))) }
  
  val allocate_struct_char_xP_requires
  (n : int) 
   (char_xP_alloc_table : ref (alloc_table char_xP)) 
    (char_xP_tag_table : ref (tag_table char_xP)) : (pointer char_xP)
     requires { ((>=) n (0)) } writes { char_xP_alloc_table,
     char_xP_tag_table }
     ensures {
       ((strict_valid_struct_char_xP result (0) (Int.(-) n (1))
        !char_xP_alloc_table)
       /\
       ((frame_alloc_struct_char_xP result n (old !char_xP_alloc_table)
        !char_xP_alloc_table)
       /\
       ((frame_tag_struct_char_xP result (old !char_xP_tag_table)
        !char_xP_tag_table)
       /\
       ((fresh_alloc_struct_char_xP result (old !char_xP_alloc_table)) /\
       ((fresh_tag_struct_char_xP result (old !char_xP_tag_table)) /\
       ((typeof_struct_char_xP result (0) n !char_xP_tag_table) /\
       (container_of_struct_char_xP result (0) n !char_xP_tag_table))))))) }
  
end

module Struct_char_xP_safe

  use import Struct_char_xP 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_alloc_table 
  
  use int.Int 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_char_xP
  (p : (pointer char_xP)) 
   (char_xP_alloc_table : ref (alloc_table char_xP)) : unit
    requires { true } writes { char_xP_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !char_xP_alloc_table (old !char_xP_alloc_table)))
      \/
      ((frame_free_struct_char_xP p (old !char_xP_alloc_table)
       !char_xP_alloc_table)
      /\ (fresh_alloc_struct_char_xP p !char_xP_alloc_table))) }
  
  val allocate_struct_char_xP
  (n : int) 
   (char_xP_alloc_table : ref (alloc_table char_xP)) 
    (char_xP_tag_table : ref (tag_table char_xP)) : (pointer char_xP)
     requires { true } writes { char_xP_alloc_table, char_xP_tag_table }
     ensures {
       ((strict_valid_struct_char_xP result (0) (Int.(-) n (1))
        !char_xP_alloc_table)
       /\
       ((frame_alloc_struct_char_xP result n (old !char_xP_alloc_table)
        !char_xP_alloc_table)
       /\
       ((frame_tag_struct_char_xP result (old !char_xP_tag_table)
        !char_xP_tag_table)
       /\
       ((fresh_alloc_struct_char_xP result (old !char_xP_alloc_table)) /\
       ((fresh_tag_struct_char_xP result (old !char_xP_tag_table)) /\
       ((typeof_struct_char_xP result (0) n !char_xP_tag_table) /\
       (container_of_struct_char_xP result (0) n !char_xP_tag_table))))))) }
  
  val allocate_singleton_struct_char_xP
  (char_xP_alloc_table : ref (alloc_table char_xP)) 
   (char_xP_tag_table : ref (tag_table char_xP)) : (pointer char_xP)
    requires { true } writes { char_xP_alloc_table, char_xP_tag_table }
    ensures {
      ((strict_valid_struct_char_xP result (0) (0) !char_xP_alloc_table) /\
      ((frame_alloc_struct_char_xP result (1) (old !char_xP_alloc_table)
       !char_xP_alloc_table)
      /\
      ((frame_tag_struct_char_xP result (old !char_xP_tag_table)
       !char_xP_tag_table)
      /\
      ((fresh_alloc_struct_char_xP result (old !char_xP_alloc_table)) /\
      ((fresh_tag_struct_char_xP result (old !char_xP_tag_table)) /\
      ((typeof_singleton_struct_char_xP result !char_xP_tag_table) /\
      (container_of_singleton_struct_char_xP result !char_xP_tag_table)))))))
      }
  
end

theory Root_unsigned_charP

  use why3.Bool.Bool 
  
  type unsigned_charP 
  
end

theory Struct_unsigned_charP

  use import Root_unsigned_charP 
  
  use import ref.Ref 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_tag_table 
  
  use import core.Jessie_tag_id 
  
  use import core.Jessie_tag 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import core.Jessie_alloc 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  function unsigned_charP_tag  : (tag_id
  unsigned_charP)
  
  axiom Unsigned_charP_parenttag_bottom :
  (parenttag unsigned_charP_tag bottom_tag)
  
  axiom Unsigned_charP_is_final :
  (forall unsigned_charP_tag_table : (tag_table unsigned_charP).
   (forall p : (pointer unsigned_charP).
    ((instanceof unsigned_charP_tag_table p unsigned_charP_tag) ->
     ((=) (typeof unsigned_charP_tag_table p) unsigned_charP_tag))))
  
  predicate frame_tag_struct_unsigned_charP (p : (pointer unsigned_charP))
  (old_unsigned_charP_tag_table : (tag_table unsigned_charP))
  (unsigned_charP_tag_table : (tag_table unsigned_charP))
  =
     ((tag_extends old_unsigned_charP_tag_table unsigned_charP_tag_table) /\
     (alloc_tag_block old_unsigned_charP_tag_table unsigned_charP_tag_table
     p))
  
  predicate frame_free_struct_unsigned_charP (p : (pointer unsigned_charP))
  (old_unsigned_charP_alloc_table : (alloc_table unsigned_charP))
  (unsigned_charP_alloc_table : (alloc_table unsigned_charP))
  =
     ((free_extends old_unsigned_charP_alloc_table unsigned_charP_alloc_table)
     /\
     (free_block old_unsigned_charP_alloc_table unsigned_charP_alloc_table p))
  
  predicate frame_alloc_struct_unsigned_charP (p : (pointer unsigned_charP))
  (n : int) (old_unsigned_charP_alloc_table : (alloc_table unsigned_charP))
  (unsigned_charP_alloc_table : (alloc_table unsigned_charP))
  =
     ((alloc_extends old_unsigned_charP_alloc_table
      unsigned_charP_alloc_table)
     /\
     (alloc_block old_unsigned_charP_alloc_table unsigned_charP_alloc_table p
     n))
  
  predicate fresh_tag_struct_unsigned_charP (p : (pointer unsigned_charP))
  (unsigned_charP_tag_table : (tag_table unsigned_charP))
  = (tag_fresh unsigned_charP_tag_table p)
  
  predicate fresh_alloc_struct_unsigned_charP (p : (pointer unsigned_charP))
  (unsigned_charP_alloc_table : (alloc_table unsigned_charP))
  = (alloc_fresh unsigned_charP_alloc_table p)
  
  predicate container_of_singleton_struct_unsigned_charP (p : (pointer
  unsigned_charP)) (unsigned_charP_tag_table : (tag_table unsigned_charP))
  = true
  
  predicate container_of_struct_unsigned_charP (p : (pointer unsigned_charP))
  (l : int) (r : int) (unsigned_charP_tag_table : (tag_table unsigned_charP))
  = true
  
  predicate typeof_singleton_struct_unsigned_charP (p : (pointer
  unsigned_charP)) (unsigned_charP_tag_table : (tag_table unsigned_charP))
  = ((=) (typeof unsigned_charP_tag_table p) unsigned_charP_tag)
  
  predicate typeof_struct_unsigned_charP (p : (pointer unsigned_charP)) (l :
  int) (r : int) (unsigned_charP_tag_table : (tag_table unsigned_charP))
  =
     (((=) (typeof unsigned_charP_tag_table p) unsigned_charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       ((=) (typeof unsigned_charP_tag_table (shift p i)) unsigned_charP_tag))))
  
  predicate instanceof_singleton_struct_unsigned_charP (p : (pointer
  unsigned_charP)) (unsigned_charP_tag_table : (tag_table unsigned_charP))
  = (instanceof unsigned_charP_tag_table p unsigned_charP_tag)
  
  predicate instanceof_struct_unsigned_charP (p : (pointer unsigned_charP))
  (l : int) (r : int) (unsigned_charP_tag_table : (tag_table unsigned_charP))
  =
     ((instanceof unsigned_charP_tag_table p unsigned_charP_tag) /\
     (forall i : int.
      ((((<=) l i) /\ ((<) i r)) ->
       (instanceof unsigned_charP_tag_table (shift p i) unsigned_charP_tag))))
  
  predicate right_valid_struct_unsigned_charP (p : (pointer unsigned_charP))
  (b : int) (unsigned_charP_alloc_table : (alloc_table unsigned_charP))
  = ((>=) (offset_max unsigned_charP_alloc_table p) b)
  
  predicate left_valid_struct_unsigned_charP (p : (pointer unsigned_charP))
  (a : int) (unsigned_charP_alloc_table : (alloc_table unsigned_charP))
  = ((<=) (offset_min unsigned_charP_alloc_table p) a)
  
  predicate valid_struct_unsigned_charP (p : (pointer unsigned_charP)) (a :
  int) (b : int) (unsigned_charP_alloc_table : (alloc_table unsigned_charP))
  =
     (((<=) (offset_min unsigned_charP_alloc_table p) a) /\
     ((>=) (offset_max unsigned_charP_alloc_table p) b))
  
  predicate strict_valid_struct_unsigned_charP (p : (pointer unsigned_charP))
  (a : int) (b : int) (unsigned_charP_alloc_table : (alloc_table
  unsigned_charP))
  =
     (((=) (offset_min unsigned_charP_alloc_table p) a) /\
     ((=) (offset_max unsigned_charP_alloc_table p) b))
  
  axiom Unsigned_charP_int : ((=) (int_of_tag unsigned_charP_tag) (5))
  
end

module Struct_unsigned_charP_unsafe

  use import Struct_unsigned_charP 
  
  use import Root_unsigned_charP 
  
  use import ref.Ref 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  val free_struct_unsigned_charP
  (p : (pointer unsigned_charP)) 
   (unsigned_charP_alloc_table : ref (alloc_table unsigned_charP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/
      (freeable !unsigned_charP_alloc_table p)) }
    writes { unsigned_charP_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !unsigned_charP_alloc_table (old !unsigned_charP_alloc_table)))
      \/
      ((frame_free_struct_unsigned_charP p (old !unsigned_charP_alloc_table)
       !unsigned_charP_alloc_table)
      /\ (fresh_alloc_struct_unsigned_charP p !unsigned_charP_alloc_table)))
      }
  
  val allocate_struct_unsigned_charP_requires
  (n : int) 
   (unsigned_charP_alloc_table : ref (alloc_table unsigned_charP)) 
    (unsigned_charP_tag_table : ref (tag_table unsigned_charP)) : (pointer
     unsigned_charP)
     requires { ((>=) n (0)) } writes { unsigned_charP_alloc_table,
     unsigned_charP_tag_table }
     ensures {
       ((strict_valid_struct_unsigned_charP result (0) (Int.(-) n (1))
        !unsigned_charP_alloc_table)
       /\
       ((frame_alloc_struct_unsigned_charP result n (old
        !unsigned_charP_alloc_table) !unsigned_charP_alloc_table)
       /\
       ((frame_tag_struct_unsigned_charP result (old
        !unsigned_charP_tag_table) !unsigned_charP_tag_table)
       /\
       ((fresh_alloc_struct_unsigned_charP result (old
        !unsigned_charP_alloc_table))
       /\
       ((fresh_tag_struct_unsigned_charP result (old
        !unsigned_charP_tag_table))
       /\
       ((typeof_struct_unsigned_charP result (0) n !unsigned_charP_tag_table)
       /\
       (container_of_struct_unsigned_charP result (0) n
       !unsigned_charP_tag_table))))))) }
  
end

module Struct_unsigned_charP_safe

  use import Struct_unsigned_charP 
  
  use import Root_unsigned_charP 
  
  use import ref.Ref 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_alloc_table 
  
  use int.Int 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_unsigned_charP
  (p : (pointer unsigned_charP)) 
   (unsigned_charP_alloc_table : ref (alloc_table unsigned_charP)) : unit
    requires { true } writes { unsigned_charP_alloc_table }
    ensures {
      ((((=) p null) /\
       ((=) !unsigned_charP_alloc_table (old !unsigned_charP_alloc_table)))
      \/
      ((frame_free_struct_unsigned_charP p (old !unsigned_charP_alloc_table)
       !unsigned_charP_alloc_table)
      /\ (fresh_alloc_struct_unsigned_charP p !unsigned_charP_alloc_table)))
      }
  
  val allocate_struct_unsigned_charP
  (n : int) 
   (unsigned_charP_alloc_table : ref (alloc_table unsigned_charP)) 
    (unsigned_charP_tag_table : ref (tag_table unsigned_charP)) : (pointer
     unsigned_charP)
     requires { true } writes { unsigned_charP_alloc_table,
     unsigned_charP_tag_table }
     ensures {
       ((strict_valid_struct_unsigned_charP result (0) (Int.(-) n (1))
        !unsigned_charP_alloc_table)
       /\
       ((frame_alloc_struct_unsigned_charP result n (old
        !unsigned_charP_alloc_table) !unsigned_charP_alloc_table)
       /\
       ((frame_tag_struct_unsigned_charP result (old
        !unsigned_charP_tag_table) !unsigned_charP_tag_table)
       /\
       ((fresh_alloc_struct_unsigned_charP result (old
        !unsigned_charP_alloc_table))
       /\
       ((fresh_tag_struct_unsigned_charP result (old
        !unsigned_charP_tag_table))
       /\
       ((typeof_struct_unsigned_charP result (0) n !unsigned_charP_tag_table)
       /\
       (container_of_struct_unsigned_charP result (0) n
       !unsigned_charP_tag_table))))))) }
  
  val allocate_singleton_struct_unsigned_charP
  (unsigned_charP_alloc_table : ref (alloc_table unsigned_charP)) 
   (unsigned_charP_tag_table : ref (tag_table unsigned_charP)) : (pointer
    unsigned_charP)
    requires { true } writes { unsigned_charP_alloc_table,
    unsigned_charP_tag_table }
    ensures {
      ((strict_valid_struct_unsigned_charP result (0) (0)
       !unsigned_charP_alloc_table)
      /\
      ((frame_alloc_struct_unsigned_charP result (1) (old
       !unsigned_charP_alloc_table) !unsigned_charP_alloc_table)
      /\
      ((frame_tag_struct_unsigned_charP result (old
       !unsigned_charP_tag_table) !unsigned_charP_tag_table)
      /\
      ((fresh_alloc_struct_unsigned_charP result (old
       !unsigned_charP_alloc_table))
      /\
      ((fresh_tag_struct_unsigned_charP result (old
       !unsigned_charP_tag_table))
      /\
      ((typeof_singleton_struct_unsigned_charP result
       !unsigned_charP_tag_table)
      /\
      (container_of_singleton_struct_unsigned_charP result
      !unsigned_charP_tag_table))))))) }
  
end

module Struct_voidP_unsafe

  use import Struct_voidP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_allocable 
  
  use import core.Jessie_alloc_table 
  
  use import int.Int 
  
  use why3.Bool.Bool 
  
  val free_struct_voidP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires {
      (("expl:Deallocation" ((=) p null)) \/ (freeable !voidP_alloc_table p))
      }
    writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_voidP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\ (fresh_alloc_struct_voidP p !voidP_alloc_table))) }
  
  val allocate_struct_voidP_requires
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { ((>=) n (0)) } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_voidP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_voidP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_voidP result (old !voidP_alloc_table)) /\
       ((fresh_tag_struct_voidP result (old !voidP_tag_table)) /\
       ((typeof_struct_voidP result (0) n !voidP_tag_table) /\
       (container_of_struct_voidP result (0) n !voidP_tag_table))))))) }
  
end

module Struct_voidP_safe

  use import Struct_voidP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_alloc_table 
  
  use int.Int 
  
  use why3.Bool.Bool 
  
  val safe_free_struct_voidP
  (p : (pointer voidP)) 
   (voidP_alloc_table : ref (alloc_table voidP)) : unit
    requires { true } writes { voidP_alloc_table }
    ensures {
      ((((=) p null) /\ ((=) !voidP_alloc_table (old !voidP_alloc_table))) \/
      ((frame_free_struct_voidP p (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\ (fresh_alloc_struct_voidP p !voidP_alloc_table))) }
  
  val allocate_struct_voidP
  (n : int) 
   (voidP_alloc_table : ref (alloc_table voidP)) 
    (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
     requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures {
       ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
        !voidP_alloc_table)
       /\
       ((frame_alloc_struct_voidP result n (old !voidP_alloc_table)
        !voidP_alloc_table)
       /\
       ((frame_tag_struct_voidP result (old !voidP_tag_table)
        !voidP_tag_table)
       /\
       ((fresh_alloc_struct_voidP result (old !voidP_alloc_table)) /\
       ((fresh_tag_struct_voidP result (old !voidP_tag_table)) /\
       ((typeof_struct_voidP result (0) n !voidP_tag_table) /\
       (container_of_struct_voidP result (0) n !voidP_tag_table))))))) }
  
  val allocate_singleton_struct_voidP
  (voidP_alloc_table : ref (alloc_table voidP)) 
   (voidP_tag_table : ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
    ensures {
      ((strict_valid_struct_voidP result (0) (0) !voidP_alloc_table) /\
      ((frame_alloc_struct_voidP result (1) (old !voidP_alloc_table)
       !voidP_alloc_table)
      /\
      ((frame_tag_struct_voidP result (old !voidP_tag_table)
       !voidP_tag_table)
      /\
      ((fresh_alloc_struct_voidP result (old !voidP_alloc_table)) /\
      ((fresh_tag_struct_voidP result (old !voidP_tag_table)) /\
      ((typeof_singleton_struct_voidP result !voidP_tag_table) /\
      (container_of_singleton_struct_voidP result !voidP_tag_table))))))) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint64_of_Bit_uint8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint64_of_Bit_uint8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint8 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint8.to_int n)) \/
     (Bit_int8_of_Bit_uint8.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint8 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_bit_int64_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Uint8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_bit_int16_of_Safe_bit_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint8.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint8

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Uint8.to_int n)) }
  
end

module Safe_enum__bool_of_Safe_uint8

  use enum.Uint8 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Enum__bool.t
   requires { (Enum__bool.in_bounds (Uint8.to_int n)) }
   ensures { ((=) (Enum__bool.to_int result) (Uint8.to_int n)) }
  
end

module Unsafe_enum__bool_of_Unsafe_uint8

  use enum.Uint8 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint8.t) : Enum__bool.t
   requires { true }
   ensures { ((=) (Enum__bool.to_int result) (Uint8.to_int n)) }
  
end

theory Enum__bool_of_Uint8

  use enum.Uint8 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint8.t) : Enum__bool.t
  = (Enum__bool.of_int (Uint8.to_int n))
  
end

module Safe_bit_uint32_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Uint64.to_int n)) \/
     (Bit_uint32_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint32_of_Bit_uint64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { (Uint32.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Uint64.to_int n)) \/
     (Bit_uint16_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint64.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { (Uint16.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint64.to_int n)) \/
     (Bit_int8_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { (Int8.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint64 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int64.t
   requires {
     ((Bit_int64.in_bounds (Uint64.to_int n)) \/
     (Bit_int64_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int64.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint64 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { (Int64.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int64.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Uint64.to_int n)) \/
     (Bit_int32_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { (Int32.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint64.to_int n)) \/
     (Bit_int16_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { (Int16.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint64

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint64.to_int n)) }
  
end

module Safe_enum__bool_of_Safe_uint64

  use enum.Uint64 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Enum__bool.t
   requires { (Enum__bool.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Enum__bool.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_enum__bool_of_Unsafe_uint64

  use enum.Uint64 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Enum__bool.t
   requires { true }
   ensures { ((=) (Enum__bool.to_int result) (Uint64.to_int n)) }
  
end

theory Enum__bool_of_Uint64

  use enum.Uint64 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint64.t) : Enum__bool.t
  = (Enum__bool.of_int (Uint64.to_int n))
  
end

module Safe_bit_uint16_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Uint32.to_int n)) \/
     (Bit_uint16_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint16_of_Bit_uint32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { (Uint16.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint32.to_int n)) \/
     (Bit_int8_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { (Int8.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint32 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Uint32.to_int n)) \/
     (Bit_int32_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint32 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { (Int32.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint32.to_int n)) \/
     (Bit_int16_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { (Int16.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint32

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint32.to_int n)) }
  
end

module Safe_enum__bool_of_Safe_uint32

  use enum.Uint32 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Enum__bool.t
   requires { (Enum__bool.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Enum__bool.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_enum__bool_of_Unsafe_uint32

  use enum.Uint32 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Enum__bool.t
   requires { true }
   ensures { ((=) (Enum__bool.to_int result) (Uint32.to_int n)) }
  
end

theory Enum__bool_of_Uint32

  use enum.Uint32 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint32.t) : Enum__bool.t
  = (Enum__bool.of_int (Uint32.to_int n))
  
end

module Safe_bit_int8_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Uint16.to_int n)) \/
     (Bit_int8_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_int8_of_Bit_uint16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { (Int8.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_uint16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_uint16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint16 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Uint16.to_int n)) \/
     (Bit_int16_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_uint16 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { (Int16.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_uint16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Uint16.to_int n)) }
  
end

module Safe_enum__bool_of_Safe_uint16

  use enum.Uint16 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Enum__bool.t
   requires { (Enum__bool.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Enum__bool.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_enum__bool_of_Unsafe_uint16

  use enum.Uint16 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Enum__bool.t
   requires { true }
   ensures { ((=) (Enum__bool.to_int result) (Uint16.to_int n)) }
  
end

theory Enum__bool_of_Uint16

  use enum.Uint16 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Uint16.t) : Enum__bool.t
  = (Enum__bool.of_int (Uint16.to_int n))
  
end

module Safe_bit_int64_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_int8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int64_of_Bit_int8 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int32_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int8 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int8 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int8

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int8.to_int n)) }
  
end

module Safe_enum__bool_of_Safe_int8

  use enum.Int8 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Enum__bool.t
   requires { (Enum__bool.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Enum__bool.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_enum__bool_of_Unsafe_int8

  use enum.Int8 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Enum__bool.t
   requires { true }
   ensures { ((=) (Enum__bool.to_int result) (Int8.to_int n)) }
  
end

theory Enum__bool_of_Int8

  use enum.Int8 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Int8.t) : Enum__bool.t
  = (Enum__bool.of_int (Int8.to_int n))
  
end

module Safe_bit_int32_of_Safe_bit_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int32.t
   requires {
     ((Bit_int32.in_bounds (Int64.to_int n)) \/
     (Bit_int32_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int32_of_Bit_int64 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int32.t
   requires { (Int32.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int32.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int64

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int16_of_Safe_bit_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Int64.to_int n)) \/
     (Bit_int16_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int64 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int16.t
   requires { (Int16.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int64

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int64.to_int n)) }
  
end

module Safe_enum__bool_of_Safe_int64

  use enum.Int64 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Enum__bool.t
   requires { (Enum__bool.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Enum__bool.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_enum__bool_of_Unsafe_int64

  use enum.Int64 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Enum__bool.t
   requires { true }
   ensures { ((=) (Enum__bool.to_int result) (Int64.to_int n)) }
  
end

theory Enum__bool_of_Int64

  use enum.Int64 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Int64.t) : Enum__bool.t
  = (Enum__bool.of_int (Int64.to_int n))
  
end

module Safe_bit_int16_of_Safe_bit_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int16.t
   requires {
     ((Bit_int16.in_bounds (Int32.to_int n)) \/
     (Bit_int16_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Int16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int16_of_Unsafe_bit_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int16_of_Bit_int32 
  
  use enum.Bit_int16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Bit_int16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int16.t
   requires { true }
   ensures {
     (((=) (Int16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int16_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int16_of_Safe_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int16.t
   requires { (Int16.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Int16.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_int32

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int16.t
   requires { true } ensures { ((=) (Int16.to_int result) (Int32.to_int n)) }
  
end

theory Enum__bool_of_Int32

  use enum.Int32 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Int32.t) : Enum__bool.t
  = (Enum__bool.of_int (Int32.to_int n))
  
end

module Safe_enum__bool_of_Safe_int16

  use enum.Int16 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Enum__bool.t
   requires { (Enum__bool.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Enum__bool.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_enum__bool_of_Unsafe_int16

  use enum.Int16 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Enum__bool.t
   requires { true }
   ensures { ((=) (Enum__bool.to_int result) (Int16.to_int n)) }
  
end

theory Enum__bool_of_Int16

  use enum.Int16 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Int16.t) : Enum__bool.t
  = (Enum__bool.of_int (Int16.to_int n))
  
end

module Safe_bit_uint8_of_Safe_bit_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint8_of_Bit_uint64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint64.to_int n)) \/
     (Bit_uint8_of_Bit_uint64.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use Bit_uint8_of_Bit_uint64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint64.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint64.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint64.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint64

  use enum.Uint8 
  
  use enum.Uint64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint64.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint64.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint8_of_Bit_uint32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint32.to_int n)) \/
     (Bit_uint8_of_Bit_uint32.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use Bit_uint8_of_Bit_uint32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint32.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint32

  use enum.Uint8 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint8_of_Bit_uint16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Uint16.to_int n)) \/
     (Bit_uint8_of_Bit_uint16.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use Bit_uint8_of_Bit_uint16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Uint16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { (Uint8.in_bounds (Uint16.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_uint16

  use enum.Uint8 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_uint8_of_Bit_int8 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int8.to_int n)) \/
     (Bit_uint8_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use Bit_uint8_of_Bit_int8 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { (Uint8.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int8

  use enum.Uint8 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_uint8_of_Bit_int64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int64.to_int n)) \/
     (Bit_uint8_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use Bit_uint8_of_Bit_int64 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { (Uint8.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int64

  use enum.Uint8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint8_of_Safe_bit_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_uint8_of_Bit_int32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int32.to_int n)) \/
     (Bit_uint8_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int32

  use enum.Uint8 
  
  use enum.Int32 
  
  use Bit_uint8_of_Bit_int32 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_bit_uint8_of_Safe_bit_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_uint8_of_Bit_int16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint8.t
   requires {
     ((Bit_uint8.in_bounds (Int16.to_int n)) \/
     (Bit_uint8_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint8_of_Unsafe_bit_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use Bit_uint8_of_Bit_int16 
  
  use enum.Bit_uint8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Bit_uint8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { true }
   ensures {
     (((=) (Uint8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint8_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint8_of_Safe_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { (Uint8.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint8.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_int16

  use enum.Uint8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint8.t
   requires { true } ensures { ((=) (Uint8.to_int result) (Int16.to_int n)) }
  
end

module Safe_uint8_of_Safe_enum__bool

  use enum.Uint8 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Enum__bool.to_int n)) }
  
end

module Unsafe_uint8_of_Unsafe_enum__bool

  use enum.Uint8 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Uint8.t
   requires { true }
   ensures { ((=) (Uint8.to_int result) (Enum__bool.to_int n)) }
  
end

theory Uint8_of_Enum__bool

  use enum.Uint8 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Enum__bool.t) : Uint8.t
  = (Uint8.of_int (Enum__bool.to_int n))
  
end

module Safe_bit_uint64_of_Safe_bit_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint64_of_Bit_uint32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use Bit_uint64_of_Bit_uint32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint32.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint32.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint32.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint32

  use enum.Uint64 
  
  use enum.Uint32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint32.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint64_of_Bit_uint16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use Bit_uint64_of_Bit_uint16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_uint16

  use enum.Uint64 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_uint64_of_Bit_int8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int8.to_int n)) \/
     (Bit_uint64_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use Bit_uint64_of_Bit_int8 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { (Uint64.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int8

  use enum.Uint64 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint64.t
   requires { true } ensures { ((=) (Uint64.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_uint64_of_Bit_int64 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int64.to_int n)) \/
     (Bit_uint64_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use Bit_uint64_of_Bit_int64 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { (Uint64.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int64

  use enum.Uint64 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_uint64_of_Bit_int32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int32.to_int n)) \/
     (Bit_uint64_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use Bit_uint64_of_Bit_int32 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { (Uint64.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int32

  use enum.Uint64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint64_of_Safe_bit_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_uint64_of_Bit_int16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint64.t
   requires {
     ((Bit_uint64.in_bounds (Int16.to_int n)) \/
     (Bit_uint64_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint64_of_Unsafe_bit_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use Bit_uint64_of_Bit_int16 
  
  use enum.Bit_uint64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Bit_uint64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures {
     (((=) (Uint64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint64_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint64_of_Safe_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { (Uint64.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint64.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_int16

  use enum.Uint64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Int16.to_int n)) }
  
end

module Safe_uint64_of_Safe_enum__bool

  use enum.Uint64 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Enum__bool.to_int n)) }
  
end

module Unsafe_uint64_of_Unsafe_enum__bool

  use enum.Uint64 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Uint64.t
   requires { true }
   ensures { ((=) (Uint64.to_int result) (Enum__bool.to_int n)) }
  
end

theory Uint64_of_Enum__bool

  use enum.Uint64 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Enum__bool.t) : Uint64.t
  = (Uint64.of_int (Enum__bool.to_int n))
  
end

module Safe_bit_uint32_of_Safe_bit_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint32_of_Bit_uint16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use Bit_uint32_of_Bit_uint16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Uint16.to_int n)))
     /\ ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Uint16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_uint16.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint16.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_uint16

  use enum.Uint32 
  
  use enum.Uint16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Uint16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Uint16.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_uint32_of_Bit_int8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int8.to_int n)) \/
     (Bit_uint32_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use Bit_uint32_of_Bit_int8 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { (Uint32.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int8

  use enum.Uint32 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint32.t
   requires { true } ensures { ((=) (Uint32.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_uint32_of_Bit_int64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int64.to_int n)) \/
     (Bit_uint32_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use Bit_uint32_of_Bit_int64 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { (Uint32.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int64

  use enum.Uint32 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_uint32_of_Bit_int32 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int32.to_int n)) \/
     (Bit_uint32_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use Bit_uint32_of_Bit_int32 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { (Uint32.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int32

  use enum.Uint32 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint32_of_Safe_bit_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_uint32_of_Bit_int16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint32.t
   requires {
     ((Bit_uint32.in_bounds (Int16.to_int n)) \/
     (Bit_uint32_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint32_of_Unsafe_bit_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use Bit_uint32_of_Bit_int16 
  
  use enum.Bit_uint32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Bit_uint32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures {
     (((=) (Uint32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint32_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint32_of_Safe_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { (Uint32.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint32.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_int16

  use enum.Uint32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Int16.to_int n)) }
  
end

module Safe_uint32_of_Safe_enum__bool

  use enum.Uint32 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Enum__bool.to_int n)) }
  
end

module Unsafe_uint32_of_Unsafe_enum__bool

  use enum.Uint32 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Uint32.t
   requires { true }
   ensures { ((=) (Uint32.to_int result) (Enum__bool.to_int n)) }
  
end

theory Uint32_of_Enum__bool

  use enum.Uint32 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Enum__bool.t) : Uint32.t
  = (Uint32.of_int (Enum__bool.to_int n))
  
end

module Safe_bit_uint16_of_Safe_bit_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_uint16_of_Bit_int8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int8.to_int n)) \/
     (Bit_uint16_of_Bit_int8.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use Bit_uint16_of_Bit_int8 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int8.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int8.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int8.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { (Uint16.in_bounds (Int8.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int8.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int8

  use enum.Uint16 
  
  use enum.Int8 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int8.t) : Uint16.t
   requires { true } ensures { ((=) (Uint16.to_int result) (Int8.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_uint16_of_Bit_int64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int64.to_int n)) \/
     (Bit_uint16_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use Bit_uint16_of_Bit_int64 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int64.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { (Uint16.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int64

  use enum.Uint16 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_uint16_of_Bit_int32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int32.to_int n)) \/
     (Bit_uint16_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use Bit_uint16_of_Bit_int32 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int32.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { (Uint16.in_bounds (Int32.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int32

  use enum.Uint16 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_uint16_of_Safe_bit_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_uint16_of_Bit_int16 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint16.t
   requires {
     ((Bit_uint16.in_bounds (Int16.to_int n)) \/
     (Bit_uint16_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Uint16.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_uint16_of_Unsafe_bit_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use Bit_uint16_of_Bit_int16 
  
  use enum.Bit_uint16 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Bit_uint16.normalize (Int16.to_int n))) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures {
     (((=) (Uint16.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_uint16_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_uint16_of_Safe_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { (Uint16.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Uint16.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_int16

  use enum.Uint16 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Int16.to_int n)) }
  
end

module Safe_uint16_of_Safe_enum__bool

  use enum.Uint16 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Enum__bool.to_int n)) }
  
end

module Unsafe_uint16_of_Unsafe_enum__bool

  use enum.Uint16 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Uint16.t
   requires { true }
   ensures { ((=) (Uint16.to_int result) (Enum__bool.to_int n)) }
  
end

theory Uint16_of_Enum__bool

  use enum.Uint16 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Enum__bool.t) : Uint16.t
  = (Uint16.of_int (Enum__bool.to_int n))
  
end

module Safe_bit_int8_of_Safe_bit_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int8_of_Bit_int64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int64.to_int n)) \/
     (Bit_int8_of_Bit_int64.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use Bit_int8_of_Bit_int64 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int64.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
  val cast
  (n : Int64.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int64.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int64.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int8.t
   requires { (Int8.in_bounds (Int64.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int64.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int64

  use enum.Int8 
  
  use enum.Int64 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int64.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int64.to_int n)) }
  
end

module Safe_bit_int8_of_Safe_bit_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int8_of_Bit_int32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int32.to_int n)) \/
     (Bit_int8_of_Bit_int32.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int32

  use enum.Int8 
  
  use enum.Int32 
  
  use Bit_int8_of_Bit_int32 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_bit_int8_of_Safe_bit_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int8_of_Bit_int16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int8.t
   requires {
     ((Bit_int8.in_bounds (Int16.to_int n)) \/
     (Bit_int8_of_Bit_int16.is_safe n)) }
   ensures {
     (((=) (Int8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int8_of_Unsafe_bit_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use Bit_int8_of_Bit_int16 
  
  use enum.Bit_int8 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Bit_int8.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int8.t
   requires { true }
   ensures {
     (((=) (Int8.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int8_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int8_of_Safe_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int8.t
   requires { (Int8.in_bounds (Int16.to_int n)) }
   ensures { ((=) (Int8.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_int16

  use enum.Int8 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int8.t
   requires { true } ensures { ((=) (Int8.to_int result) (Int16.to_int n)) }
  
end

module Safe_int8_of_Safe_enum__bool

  use enum.Int8 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Int8.t
   requires { true }
   ensures { ((=) (Int8.to_int result) (Enum__bool.to_int n)) }
  
end

module Unsafe_int8_of_Unsafe_enum__bool

  use enum.Int8 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Int8.t
   requires { true }
   ensures { ((=) (Int8.to_int result) (Enum__bool.to_int n)) }
  
end

theory Int8_of_Enum__bool

  use enum.Int8 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Enum__bool.t) : Int8.t
  = (Int8.of_int (Enum__bool.to_int n))
  
end

module Safe_bit_int64_of_Safe_bit_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int64_of_Bit_int32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use Bit_int64_of_Bit_int32 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int32.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int32.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int32.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int32.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int32

  use enum.Int64 
  
  use enum.Int32 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int32.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int32.to_int n)) }
  
end

module Safe_bit_int64_of_Safe_bit_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int64_of_Bit_int16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int64_of_Unsafe_bit_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use Bit_int64_of_Bit_int16 
  
  use enum.Bit_int64 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Bit_int64.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true }
   ensures {
     (((=) (Int64.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int64_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int64_of_Safe_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_int16

  use enum.Int64 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int64.t
   requires { true } ensures { ((=) (Int64.to_int result) (Int16.to_int n)) }
  
end

module Safe_int64_of_Safe_enum__bool

  use enum.Int64 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Enum__bool.to_int n)) }
  
end

module Unsafe_int64_of_Unsafe_enum__bool

  use enum.Int64 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Int64.t
   requires { true }
   ensures { ((=) (Int64.to_int result) (Enum__bool.to_int n)) }
  
end

theory Int64_of_Enum__bool

  use enum.Int64 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Enum__bool.t) : Int64.t
  = (Int64.of_int (Enum__bool.to_int n))
  
end

module Safe_bit_int32_of_Safe_bit_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int32_of_Bit_int16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
end

module Unsafe_bit_int32_of_Unsafe_bit_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use Bit_int32_of_Bit_int16 
  
  use enum.Bit_int32 
  
  use why3.Bool.Bool 
  
  val cast_modulo
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Bit_int32.normalize (Int16.to_int n))) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true }
   ensures {
     (((=) (Int32.to_int result) (Int16.to_int n)) /\
     ((=) result (Bit_int32_of_Bit_int16.cast_modulo n))) }
  
end

module Safe_int32_of_Safe_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int16.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_int16

  use enum.Int32 
  
  use enum.Int16 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Int16.t) : Int32.t
   requires { true } ensures { ((=) (Int32.to_int result) (Int16.to_int n)) }
  
end

module Safe_int32_of_Safe_enum__bool

  use enum.Int32 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Enum__bool.to_int n)) }
  
end

module Unsafe_int32_of_Unsafe_enum__bool

  use enum.Int32 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Int32.t
   requires { true }
   ensures { ((=) (Int32.to_int result) (Enum__bool.to_int n)) }
  
end

theory Int32_of_Enum__bool

  use enum.Int32 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Enum__bool.t) : Int32.t
  = (Int32.of_int (Enum__bool.to_int n))
  
end

module Safe_int16_of_Safe_enum__bool

  use enum.Int16 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Enum__bool.to_int n)) }
  
end

module Unsafe_int16_of_Unsafe_enum__bool

  use enum.Int16 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val cast
  (n : Enum__bool.t) : Int16.t
   requires { true }
   ensures { ((=) (Int16.to_int result) (Enum__bool.to_int n)) }
  
end

theory Int16_of_Enum__bool

  use enum.Int16 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  function cast (n : Enum__bool.t) : Int16.t
  = (Int16.of_int (Enum__bool.to_int n))
  
end

module Function_escape_null

  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_alloc_table 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val escape_null
  (c_0 : Uint8.t) 
   (dst_0 : (pointer char_xP)) 
    (end_1 : (pointer voidP)) 
     (char_xP_char_xM_dst_0_3 : ref (memory char_xP (pointer voidP))) 
      (charP_charM_end_1_4 : ref (memory voidP Int8.t)) 
       (voidP_end_1_4_alloc_table : (alloc_table voidP)) 
        (char_xP_dst_0_3_alloc_table : (alloc_table char_xP)) 
         (voidP_end_1_4_tag_table : (tag_table voidP)) : Enum__bool.t
          requires { true } reads { charP_charM_end_1_4,
          char_xP_char_xM_dst_0_3 } writes { charP_charM_end_1_4,
          char_xP_char_xM_dst_0_3 }
          ensures {
            ((((Uint8.(=) c_0 (#"escape_string_mem.jc" 74 19 31#
               "expl:Integer cast" (Uint8.of_int (0))))
              /\
              ((same_block
               (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (1))
               end_1)
              /\
              ((<)
              (sub_pointer
              (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (1))
              end_1) (0)))) ->
              (((#"escape_string_mem.jc" 77 10 75# "expl:Assigns clause"
                (not_assigns voidP_end_1_4_alloc_table
                voidP_end_1_4_alloc_table (old !charP_charM_end_1_4)
                !charP_charM_end_1_4
                (pset_union
                (pset_singleton
                (select (old !char_xP_char_xM_dst_0_3) dst_0))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (1))))))
               /\
               (#"escape_string_mem.jc" 77 10 75# "expl:Assigns clause"
               (not_assigns char_xP_dst_0_3_alloc_table
               char_xP_dst_0_3_alloc_table (old !char_xP_char_xM_dst_0_3)
               !char_xP_char_xM_dst_0_3 (pset_singleton dst_0))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_0_3 dst_0)
               (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 29 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_1_4
               (shift (select !char_xP_char_xM_dst_0_3 dst_0) (Int.(-_) (2))))
               (#"escape_string_mem.jc" 83 33 45# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 30 16 34#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_1_4
               (shift (select !char_xP_char_xM_dst_0_3 dst_0) (Int.(-_) (1))))
               (#"escape_string_mem.jc" 85 35 47# "expl:Integer cast"
               (Int8.of_int (48)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 31 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
            /\
            ((((Uint8.(=) c_0 (#"escape_string_mem.jc" 65 19 31#
               "expl:Integer cast" (Uint8.of_int (0))))
              /\
              ((=) (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (1))
              end_1)) ->
              (((#"escape_string_mem.jc" 66 10 46# "expl:Assigns clause"
                (not_assigns voidP_end_1_4_alloc_table
                voidP_end_1_4_alloc_table (old !charP_charM_end_1_4)
                !charP_charM_end_1_4
                (pset_singleton
                (select (old !char_xP_char_xM_dst_0_3) dst_0))))
               /\
               (#"escape_string_mem.jc" 66 10 46# "expl:Assigns clause"
               (not_assigns char_xP_dst_0_3_alloc_table
               char_xP_dst_0_3_alloc_table (old !char_xP_char_xM_dst_0_3)
               !char_xP_char_xM_dst_0_3 (pset_singleton dst_0))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 21 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 21 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 21 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_0_3 dst_0)
               (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 21 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 22 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_1_4
               (shift (select !char_xP_char_xM_dst_0_3 dst_0) (Int.(-_) (2))))
               (#"escape_string_mem.jc" 71 33 45# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 23 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
            /\
            ((((Uint8.(=) c_0 (#"escape_string_mem.jc" 57 19 31#
               "expl:Integer cast" (Uint8.of_int (0))))
              /\
              ((same_block (select (old !char_xP_char_xM_dst_0_3) dst_0)
               end_1)
              /\
              ((>=)
              (sub_pointer (select (old !char_xP_char_xM_dst_0_3) dst_0)
              end_1) (0)))) ->
              (((#"escape_string_mem.jc" 60 10 23# "expl:Assigns clause"
                (not_assigns voidP_end_1_4_alloc_table
                voidP_end_1_4_alloc_table (old !charP_charM_end_1_4)
                !charP_charM_end_1_4 pset_empty))
               /\
               (#"escape_string_mem.jc" 60 10 23# "expl:Assigns clause"
               (not_assigns char_xP_dst_0_3_alloc_table
               char_xP_dst_0_3_alloc_table (old !char_xP_char_xM_dst_0_3)
               !char_xP_char_xM_dst_0_3 (pset_singleton dst_0))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 15 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 15 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 15 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_0_3 dst_0)
               (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 16 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))
            /\
            ((Uint8.(<>) c_0 (#"escape_string_mem.jc" 53 18 30#
             "expl:Integer cast" (Uint8.of_int (0)))) ->
             (((#"escape_string_mem.jc" 54 10 18# "expl:Assigns clause"
               (not_assigns voidP_end_1_4_alloc_table
               voidP_end_1_4_alloc_table (old !charP_charM_end_1_4)
               !charP_charM_end_1_4 pset_empty))
              /\
              (#"escape_string_mem.jc" 54 10 18# "expl:Assigns clause"
              (not_assigns char_xP_dst_0_3_alloc_table
              char_xP_dst_0_3_alloc_table (old !char_xP_char_xM_dst_0_3)
              !char_xP_char_xM_dst_0_3 pset_empty)))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 10 16 33#
             "expl:Ensures clause"
             ((=) ((<>) (Enum__bool.to_int result) (0)) false))))))) }
  
end

module Function_escape_null_safe

  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_alloc_table 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val escape_null
  (c_0 : Uint8.t) 
   (dst_0 : (pointer char_xP)) 
    (end_1 : (pointer voidP)) 
     (char_xP_char_xM_dst_0_3 : ref (memory char_xP (pointer voidP))) 
      (charP_charM_end_1_4 : ref (memory voidP Int8.t)) 
       (voidP_end_1_4_alloc_table : (alloc_table voidP)) 
        (char_xP_dst_0_3_alloc_table : (alloc_table char_xP)) 
         (voidP_end_1_4_tag_table : (tag_table voidP)) : Enum__bool.t
          requires {
            ("expl:Internal"
            (#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 4 10 21#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
             ((#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
              ((<=) (offset_min voidP_end_1_4_alloc_table end_1) (0)))
             /\
             (#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
             ((#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
              ((>=) (offset_max voidP_end_1_4_alloc_table end_1) (0)))
             /\
             (#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
             ((=) true true)))))))
            /\
            (#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 4 25 36#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
             ((#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
              ((<=) (offset_min char_xP_dst_0_3_alloc_table dst_0) (0)))
             /\
             (#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
             ((#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
              ((>=) (offset_max char_xP_dst_0_3_alloc_table dst_0) (0)))
             /\
             (#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
             ((=) true true)))))))
            /\
            (#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 5 6 27#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
             ((#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
              ((<=)
              (offset_min voidP_end_1_4_alloc_table
              (select !char_xP_char_xM_dst_0_3 dst_0)) (0)))
             /\
             (#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
             ((#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
              ((>=)
              (offset_max voidP_end_1_4_alloc_table
              (select !char_xP_char_xM_dst_0_3 dst_0)) (1)))
             /\
             (#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
             ((#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
              ((=) true true))
             /\
             (#"escape_string_mem.jc" 34 12 1040# "expl:Requires clause"
             ((=) true true)))))))))
            /\
            (#"/home/maria/ded-rep/escape_string_mem.c" 6 10 45#
            "expl:Requires clause"
            (same_block (select !char_xP_char_xM_dst_0_3 dst_0) end_1)))))))))
            }
          reads { charP_charM_end_1_4, char_xP_char_xM_dst_0_3 } writes {
          charP_charM_end_1_4, char_xP_char_xM_dst_0_3 }
          ensures {
            ((((Uint8.(=) c_0 (#"escape_string_mem.jc" 74 19 31#
               "expl:Integer cast" (Uint8.of_int (0))))
              /\
              ((same_block
               (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (1))
               end_1)
              /\
              ((<)
              (sub_pointer
              (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (1))
              end_1) (0)))) ->
              (((#"escape_string_mem.jc" 77 10 75# "expl:Assigns clause"
                (not_assigns voidP_end_1_4_alloc_table
                voidP_end_1_4_alloc_table (old !charP_charM_end_1_4)
                !charP_charM_end_1_4
                (pset_union
                (pset_singleton
                (select (old !char_xP_char_xM_dst_0_3) dst_0))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (1))))))
               /\
               (#"escape_string_mem.jc" 77 10 75# "expl:Assigns clause"
               (not_assigns char_xP_dst_0_3_alloc_table
               char_xP_dst_0_3_alloc_table (old !char_xP_char_xM_dst_0_3)
               !char_xP_char_xM_dst_0_3 (pset_singleton dst_0))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_0_3 dst_0)
               (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 29 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_1_4
               (shift (select !char_xP_char_xM_dst_0_3 dst_0) (Int.(-_) (2))))
               (#"escape_string_mem.jc" 83 33 45# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 28 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 30 16 34#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_1_4
               (shift (select !char_xP_char_xM_dst_0_3 dst_0) (Int.(-_) (1))))
               (#"escape_string_mem.jc" 85 35 47# "expl:Integer cast"
               (Int8.of_int (48)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 31 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
            /\
            ((((Uint8.(=) c_0 (#"escape_string_mem.jc" 65 19 31#
               "expl:Integer cast" (Uint8.of_int (0))))
              /\
              ((=) (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (1))
              end_1)) ->
              (((#"escape_string_mem.jc" 66 10 46# "expl:Assigns clause"
                (not_assigns voidP_end_1_4_alloc_table
                voidP_end_1_4_alloc_table (old !charP_charM_end_1_4)
                !charP_charM_end_1_4
                (pset_singleton
                (select (old !char_xP_char_xM_dst_0_3) dst_0))))
               /\
               (#"escape_string_mem.jc" 66 10 46# "expl:Assigns clause"
               (not_assigns char_xP_dst_0_3_alloc_table
               char_xP_dst_0_3_alloc_table (old !char_xP_char_xM_dst_0_3)
               !char_xP_char_xM_dst_0_3 (pset_singleton dst_0))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 21 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 21 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 21 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_0_3 dst_0)
               (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 21 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 22 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_1_4
               (shift (select !char_xP_char_xM_dst_0_3 dst_0) (Int.(-_) (2))))
               (#"escape_string_mem.jc" 71 33 45# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 23 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
            /\
            ((((Uint8.(=) c_0 (#"escape_string_mem.jc" 57 19 31#
               "expl:Integer cast" (Uint8.of_int (0))))
              /\
              ((same_block (select (old !char_xP_char_xM_dst_0_3) dst_0)
               end_1)
              /\
              ((>=)
              (sub_pointer (select (old !char_xP_char_xM_dst_0_3) dst_0)
              end_1) (0)))) ->
              (((#"escape_string_mem.jc" 60 10 23# "expl:Assigns clause"
                (not_assigns voidP_end_1_4_alloc_table
                voidP_end_1_4_alloc_table (old !charP_charM_end_1_4)
                !charP_charM_end_1_4 pset_empty))
               /\
               (#"escape_string_mem.jc" 60 10 23# "expl:Assigns clause"
               (not_assigns char_xP_dst_0_3_alloc_table
               char_xP_dst_0_3_alloc_table (old !char_xP_char_xM_dst_0_3)
               !char_xP_char_xM_dst_0_3 (pset_singleton dst_0))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 15 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 15 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 15 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_0_3 dst_0)
               (shift (select (old !char_xP_char_xM_dst_0_3) dst_0) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 16 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))
            /\
            ((Uint8.(<>) c_0 (#"escape_string_mem.jc" 53 18 30#
             "expl:Integer cast" (Uint8.of_int (0)))) ->
             (((#"escape_string_mem.jc" 54 10 18# "expl:Assigns clause"
               (not_assigns voidP_end_1_4_alloc_table
               voidP_end_1_4_alloc_table (old !charP_charM_end_1_4)
               !charP_charM_end_1_4 pset_empty))
              /\
              (#"escape_string_mem.jc" 54 10 18# "expl:Assigns clause"
              (not_assigns char_xP_dst_0_3_alloc_table
              char_xP_dst_0_3_alloc_table (old !char_xP_char_xM_dst_0_3)
              !char_xP_char_xM_dst_0_3 pset_empty)))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 10 16 33#
             "expl:Ensures clause"
             ((=) ((<>) (Enum__bool.to_int result) (0)) false))))))) }
  
end

module Function_escape_octal

  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_alloc_table 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use int.ComputerDivision 
  
  use why3.Bool.Bool 
  
  val escape_octal
  (c_1 : Uint8.t) 
   (dst_1 : (pointer char_xP)) 
    (end_2 : (pointer voidP)) 
     (char_xP_char_xM_dst_1_5 : ref (memory char_xP (pointer voidP))) 
      (charP_charM_end_2_6 : ref (memory voidP Int8.t)) 
       (voidP_end_2_6_alloc_table : (alloc_table voidP)) 
        (char_xP_dst_1_5_alloc_table : (alloc_table char_xP)) 
         (voidP_end_2_6_tag_table : (tag_table voidP)) : Enum__bool.t
          requires { true } reads { charP_charM_end_2_6,
          char_xP_char_xM_dst_1_5 } writes { charP_charM_end_2_6,
          char_xP_char_xM_dst_1_5 }
          ensures {
            ((((same_block
               (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))
               end_2)
              /\
              ((<=)
              (sub_pointer
              (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))
              end_2) (0))) ->
              (((#"escape_string_mem.jc" 179 10 133# "expl:Assigns clause"
                (not_assigns voidP_end_2_6_alloc_table
                voidP_end_2_6_alloc_table (old !charP_charM_end_2_6)
                !charP_charM_end_2_6
                (pset_union
                (pset_singleton
                (select (old !char_xP_char_xM_dst_1_5) dst_1))
                (pset_union
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (1)))
                (pset_union
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (2)))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (3))))))))
               /\
               (#"escape_string_mem.jc" 179 10 133# "expl:Assigns clause"
               (not_assigns char_xP_dst_1_5_alloc_table
               char_xP_dst_1_5_alloc_table (old !char_xP_char_xM_dst_1_5)
               !char_xP_char_xM_dst_1_5 (pset_singleton dst_1))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
               (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 87 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 187 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 88 16 51#
               "expl:Ensures clause"
               ((=)
               (Int8.to_int
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (3)))))
               (Int.(+)
               (ComputerDivision.mod
               (ComputerDivision.div (Uint8.to_int c_1) (64)) (7))
               (Int8.to_int (#"escape_string_mem.jc" 190 40 52#
               "expl:Integer cast" (Int8.of_int (48)))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 89 16 50#
               "expl:Ensures clause"
               ((=)
               (Int8.to_int
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (2)))))
               (Int.(+)
               (ComputerDivision.mod
               (ComputerDivision.div (Uint8.to_int c_1) (8)) (7))
               (Int8.to_int (#"escape_string_mem.jc" 193 42 54#
               "expl:Integer cast" (Int8.of_int (48)))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 90 16 44#
               "expl:Ensures clause"
               ((=)
               (Int8.to_int
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (1)))))
               (Int.(+) (ComputerDivision.mod (Uint8.to_int c_1) (7))
               (Int8.to_int (#"escape_string_mem.jc" 196 44 56#
               "expl:Integer cast" (Int8.of_int (48)))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 91 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))))))
            /\
            ((((=) (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (3))
              end_2) ->
              (((#"escape_string_mem.jc" 161 10 104# "expl:Assigns clause"
                (not_assigns voidP_end_2_6_alloc_table
                voidP_end_2_6_alloc_table (old !charP_charM_end_2_6)
                !charP_charM_end_2_6
                (pset_union
                (pset_singleton
                (select (old !char_xP_char_xM_dst_1_5) dst_1))
                (pset_union
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (1)))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (2)))))))
               /\
               (#"escape_string_mem.jc" 161 10 104# "expl:Assigns clause"
               (not_assigns char_xP_dst_1_5_alloc_table
               char_xP_dst_1_5_alloc_table (old !char_xP_char_xM_dst_1_5)
               !char_xP_char_xM_dst_1_5 (pset_singleton dst_1))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
               (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 78 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 168 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 79 16 51#
               "expl:Ensures clause"
               ((=)
               (Int8.to_int
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (3)))))
               (Int.(+)
               (ComputerDivision.mod
               (ComputerDivision.div (Uint8.to_int c_1) (64)) (7))
               (Int8.to_int (#"escape_string_mem.jc" 171 40 52#
               "expl:Integer cast" (Int8.of_int (48)))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 80 16 50#
               "expl:Ensures clause"
               ((=)
               (Int8.to_int
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (2)))))
               (Int.(+)
               (ComputerDivision.mod
               (ComputerDivision.div (Uint8.to_int c_1) (8)) (7))
               (Int8.to_int (#"escape_string_mem.jc" 174 42 54#
               "expl:Integer cast" (Int8.of_int (48)))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 81 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))))
            /\
            ((((=) (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (2))
              end_2) ->
              (((#"escape_string_mem.jc" 148 10 75# "expl:Assigns clause"
                (not_assigns voidP_end_2_6_alloc_table
                voidP_end_2_6_alloc_table (old !charP_charM_end_2_6)
                !charP_charM_end_2_6
                (pset_union
                (pset_singleton
                (select (old !char_xP_char_xM_dst_1_5) dst_1))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (1))))))
               /\
               (#"escape_string_mem.jc" 148 10 75# "expl:Assigns clause"
               (not_assigns char_xP_dst_1_5_alloc_table
               char_xP_dst_1_5_alloc_table (old !char_xP_char_xM_dst_1_5)
               !char_xP_char_xM_dst_1_5 (pset_singleton dst_1))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
               (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 71 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 154 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 72 16 51#
               "expl:Ensures clause"
               ((=)
               (Int8.to_int
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (3)))))
               (Int.(+)
               (ComputerDivision.mod
               (ComputerDivision.div (Uint8.to_int c_1) (64)) (7))
               (Int8.to_int (#"escape_string_mem.jc" 157 40 52#
               "expl:Integer cast" (Int8.of_int (48)))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 73 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
            /\
            ((((=) (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (1))
              end_2) ->
              (((#"escape_string_mem.jc" 139 10 46# "expl:Assigns clause"
                (not_assigns voidP_end_2_6_alloc_table
                voidP_end_2_6_alloc_table (old !charP_charM_end_2_6)
                !charP_charM_end_2_6
                (pset_singleton
                (select (old !char_xP_char_xM_dst_1_5) dst_1))))
               /\
               (#"escape_string_mem.jc" 139 10 46# "expl:Assigns clause"
               (not_assigns char_xP_dst_1_5_alloc_table
               char_xP_dst_1_5_alloc_table (old !char_xP_char_xM_dst_1_5)
               !char_xP_char_xM_dst_1_5 (pset_singleton dst_1))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 64 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 64 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 64 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
               (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 64 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 65 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 144 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 66 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
            /\
            (((same_block (select (old !char_xP_char_xM_dst_1_5) dst_1)
              end_2)
             /\
             ((>=)
             (sub_pointer (select (old !char_xP_char_xM_dst_1_5) dst_1)
             end_2) (0))) ->
             (((#"escape_string_mem.jc" 133 10 23# "expl:Assigns clause"
               (not_assigns voidP_end_2_6_alloc_table
               voidP_end_2_6_alloc_table (old !charP_charM_end_2_6)
               !charP_charM_end_2_6 pset_empty))
              /\
              (#"escape_string_mem.jc" 133 10 23# "expl:Assigns clause"
              (not_assigns char_xP_dst_1_5_alloc_table
              char_xP_dst_1_5_alloc_table (old !char_xP_char_xM_dst_1_5)
              !char_xP_char_xM_dst_1_5 (pset_singleton dst_1))))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 59 16 38#
             "expl:Ensures clause"
             (#"/home/maria/ded-rep/escape_string_mem.c" 59 16 38#
             "expl:Ensures clause"
             ((#"/home/maria/ded-rep/escape_string_mem.c" 59 16 38#
              "expl:Ensures clause"
              ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
              (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 60 16 32#
             "expl:Ensures clause"
             ((=) ((<>) (Enum__bool.to_int result) (0)) true))))))))))) }
  
end

module Function_escape_octal_safe

  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_alloc_table 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use int.ComputerDivision 
  
  use why3.Bool.Bool 
  
  val escape_octal
  (c_1 : Uint8.t) 
   (dst_1 : (pointer char_xP)) 
    (end_2 : (pointer voidP)) 
     (char_xP_char_xM_dst_1_5 : ref (memory char_xP (pointer voidP))) 
      (charP_charM_end_2_6 : ref (memory voidP Int8.t)) 
       (voidP_end_2_6_alloc_table : (alloc_table voidP)) 
        (char_xP_dst_1_5_alloc_table : (alloc_table char_xP)) 
         (voidP_end_2_6_tag_table : (tag_table voidP)) : Enum__bool.t
          requires {
            ("expl:Internal"
            (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 53 10 21#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
             ((#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
              ((<=) (offset_min voidP_end_2_6_alloc_table end_2) (0)))
             /\
             (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
             ((#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
              ((>=) (offset_max voidP_end_2_6_alloc_table end_2) (0)))
             /\
             (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
             ((=) true true)))))))
            /\
            (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 53 25 36#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
             ((#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
              ((<=) (offset_min char_xP_dst_1_5_alloc_table dst_1) (0)))
             /\
             (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
             ((#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
              ((>=) (offset_max char_xP_dst_1_5_alloc_table dst_1) (0)))
             /\
             (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
             ((=) true true)))))))
            /\
            (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 54 6 27#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
             ((#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
              ((<=)
              (offset_min voidP_end_2_6_alloc_table
              (select !char_xP_char_xM_dst_1_5 dst_1)) (0)))
             /\
             (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
             ((#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
              ((>=)
              (offset_max voidP_end_2_6_alloc_table
              (select !char_xP_char_xM_dst_1_5 dst_1)) (3)))
             /\
             (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
             ((#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
              ((=) true true))
             /\
             (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
             ((#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
              ((=) true true))
             /\
             (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
             ((#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
              ((=) true true))
             /\
             (#"escape_string_mem.jc" 112 12 1091# "expl:Requires clause"
             ((=) true true)))))))))))))
            /\
            (#"/home/maria/ded-rep/escape_string_mem.c" 55 13 48#
            "expl:Requires clause"
            (same_block (select !char_xP_char_xM_dst_1_5 dst_1) end_2)))))))))
            }
          reads { charP_charM_end_2_6, char_xP_char_xM_dst_1_5 } writes {
          charP_charM_end_2_6, char_xP_char_xM_dst_1_5 }
          ensures {
            ((((same_block
               (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))
               end_2)
              /\
              ((<=)
              (sub_pointer
              (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))
              end_2) (0))) ->
              (((#"escape_string_mem.jc" 179 10 133# "expl:Assigns clause"
                (not_assigns voidP_end_2_6_alloc_table
                voidP_end_2_6_alloc_table (old !charP_charM_end_2_6)
                !charP_charM_end_2_6
                (pset_union
                (pset_singleton
                (select (old !char_xP_char_xM_dst_1_5) dst_1))
                (pset_union
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (1)))
                (pset_union
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (2)))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (3))))))))
               /\
               (#"escape_string_mem.jc" 179 10 133# "expl:Assigns clause"
               (not_assigns char_xP_dst_1_5_alloc_table
               char_xP_dst_1_5_alloc_table (old !char_xP_char_xM_dst_1_5)
               !char_xP_char_xM_dst_1_5 (pset_singleton dst_1))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
               (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 87 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 187 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 88 16 51#
               "expl:Ensures clause"
               ((=)
               (Int8.to_int
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (3)))))
               (Int.(+)
               (ComputerDivision.mod
               (ComputerDivision.div (Uint8.to_int c_1) (64)) (7))
               (Int8.to_int (#"escape_string_mem.jc" 190 40 52#
               "expl:Integer cast" (Int8.of_int (48)))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 89 16 50#
               "expl:Ensures clause"
               ((=)
               (Int8.to_int
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (2)))))
               (Int.(+)
               (ComputerDivision.mod
               (ComputerDivision.div (Uint8.to_int c_1) (8)) (7))
               (Int8.to_int (#"escape_string_mem.jc" 193 42 54#
               "expl:Integer cast" (Int8.of_int (48)))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 86 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 90 16 44#
               "expl:Ensures clause"
               ((=)
               (Int8.to_int
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (1)))))
               (Int.(+) (ComputerDivision.mod (Uint8.to_int c_1) (7))
               (Int8.to_int (#"escape_string_mem.jc" 196 44 56#
               "expl:Integer cast" (Int8.of_int (48)))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 91 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))))))
            /\
            ((((=) (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (3))
              end_2) ->
              (((#"escape_string_mem.jc" 161 10 104# "expl:Assigns clause"
                (not_assigns voidP_end_2_6_alloc_table
                voidP_end_2_6_alloc_table (old !charP_charM_end_2_6)
                !charP_charM_end_2_6
                (pset_union
                (pset_singleton
                (select (old !char_xP_char_xM_dst_1_5) dst_1))
                (pset_union
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (1)))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (2)))))))
               /\
               (#"escape_string_mem.jc" 161 10 104# "expl:Assigns clause"
               (not_assigns char_xP_dst_1_5_alloc_table
               char_xP_dst_1_5_alloc_table (old !char_xP_char_xM_dst_1_5)
               !char_xP_char_xM_dst_1_5 (pset_singleton dst_1))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
               (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 78 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 168 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 79 16 51#
               "expl:Ensures clause"
               ((=)
               (Int8.to_int
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (3)))))
               (Int.(+)
               (ComputerDivision.mod
               (ComputerDivision.div (Uint8.to_int c_1) (64)) (7))
               (Int8.to_int (#"escape_string_mem.jc" 171 40 52#
               "expl:Integer cast" (Int8.of_int (48)))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 77 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 80 16 50#
               "expl:Ensures clause"
               ((=)
               (Int8.to_int
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (2)))))
               (Int.(+)
               (ComputerDivision.mod
               (ComputerDivision.div (Uint8.to_int c_1) (8)) (7))
               (Int8.to_int (#"escape_string_mem.jc" 174 42 54#
               "expl:Integer cast" (Int8.of_int (48)))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 81 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))))
            /\
            ((((=) (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (2))
              end_2) ->
              (((#"escape_string_mem.jc" 148 10 75# "expl:Assigns clause"
                (not_assigns voidP_end_2_6_alloc_table
                voidP_end_2_6_alloc_table (old !charP_charM_end_2_6)
                !charP_charM_end_2_6
                (pset_union
                (pset_singleton
                (select (old !char_xP_char_xM_dst_1_5) dst_1))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (1))))))
               /\
               (#"escape_string_mem.jc" 148 10 75# "expl:Assigns clause"
               (not_assigns char_xP_dst_1_5_alloc_table
               char_xP_dst_1_5_alloc_table (old !char_xP_char_xM_dst_1_5)
               !char_xP_char_xM_dst_1_5 (pset_singleton dst_1))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
               (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 71 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 154 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 70 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 72 16 51#
               "expl:Ensures clause"
               ((=)
               (Int8.to_int
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (3)))))
               (Int.(+)
               (ComputerDivision.mod
               (ComputerDivision.div (Uint8.to_int c_1) (64)) (7))
               (Int8.to_int (#"escape_string_mem.jc" 157 40 52#
               "expl:Integer cast" (Int8.of_int (48)))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 73 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
            /\
            ((((=) (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (1))
              end_2) ->
              (((#"escape_string_mem.jc" 139 10 46# "expl:Assigns clause"
                (not_assigns voidP_end_2_6_alloc_table
                voidP_end_2_6_alloc_table (old !charP_charM_end_2_6)
                !charP_charM_end_2_6
                (pset_singleton
                (select (old !char_xP_char_xM_dst_1_5) dst_1))))
               /\
               (#"escape_string_mem.jc" 139 10 46# "expl:Assigns clause"
               (not_assigns char_xP_dst_1_5_alloc_table
               char_xP_dst_1_5_alloc_table (old !char_xP_char_xM_dst_1_5)
               !char_xP_char_xM_dst_1_5 (pset_singleton dst_1))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 64 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 64 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 64 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
               (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 64 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 65 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_2_6
               (shift (select !char_xP_char_xM_dst_1_5 dst_1) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 144 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 66 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
            /\
            (((same_block (select (old !char_xP_char_xM_dst_1_5) dst_1)
              end_2)
             /\
             ((>=)
             (sub_pointer (select (old !char_xP_char_xM_dst_1_5) dst_1)
             end_2) (0))) ->
             (((#"escape_string_mem.jc" 133 10 23# "expl:Assigns clause"
               (not_assigns voidP_end_2_6_alloc_table
               voidP_end_2_6_alloc_table (old !charP_charM_end_2_6)
               !charP_charM_end_2_6 pset_empty))
              /\
              (#"escape_string_mem.jc" 133 10 23# "expl:Assigns clause"
              (not_assigns char_xP_dst_1_5_alloc_table
              char_xP_dst_1_5_alloc_table (old !char_xP_char_xM_dst_1_5)
              !char_xP_char_xM_dst_1_5 (pset_singleton dst_1))))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 59 16 38#
             "expl:Ensures clause"
             (#"/home/maria/ded-rep/escape_string_mem.c" 59 16 38#
             "expl:Ensures clause"
             ((#"/home/maria/ded-rep/escape_string_mem.c" 59 16 38#
              "expl:Ensures clause"
              ((=) (select !char_xP_char_xM_dst_1_5 dst_1)
              (shift (select (old !char_xP_char_xM_dst_1_5) dst_1) (4))))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 60 16 32#
             "expl:Ensures clause"
             ((=) ((<>) (Enum__bool.to_int result) (0)) true))))))))))) }
  
end

module Function_escape_passthrough

  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_alloc_table 
  
  use Int8_of_Uint8 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val escape_passthrough
  (c_2 : Uint8.t) 
   (dst_2 : (pointer char_xP)) 
    (end_3 : (pointer voidP)) 
     (char_xP_char_xM_dst_2_7 : ref (memory char_xP (pointer voidP))) 
      (charP_charM_end_3_8 : ref (memory voidP Int8.t)) 
       (voidP_end_3_8_alloc_table : (alloc_table voidP)) 
        (char_xP_dst_2_7_alloc_table : (alloc_table char_xP)) 
         (voidP_end_3_8_tag_table : (tag_table voidP)) : Enum__bool.t
          requires { true } reads { charP_charM_end_3_8,
          char_xP_char_xM_dst_2_7 } writes { charP_charM_end_3_8,
          char_xP_char_xM_dst_2_7 }
          ensures {
            ((((same_block (select (old !char_xP_char_xM_dst_2_7) dst_2)
               end_3)
              /\
              ((<)
              (sub_pointer (select (old !char_xP_char_xM_dst_2_7) dst_2)
              end_3) (0))) ->
              (((#"escape_string_mem.jc" 303 10 46# "expl:Assigns clause"
                (not_assigns voidP_end_3_8_alloc_table
                voidP_end_3_8_alloc_table (old !charP_charM_end_3_8)
                !charP_charM_end_3_8
                (pset_singleton
                (select (old !char_xP_char_xM_dst_2_7) dst_2))))
               /\
               (#"escape_string_mem.jc" 303 10 46# "expl:Assigns clause"
               (not_assigns char_xP_dst_2_7_alloc_table
               char_xP_dst_2_7_alloc_table (old !char_xP_char_xM_dst_2_7)
               !char_xP_char_xM_dst_2_7 (pset_singleton dst_2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 140 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 140 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 140 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_2_7 dst_2)
               (shift (select (old !char_xP_char_xM_dst_2_7) dst_2) (1))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 140 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 141 16 38#
               "expl:Ensures clause"
               (Int8.(=)
               (select (old !charP_charM_end_3_8)
               (select (old !char_xP_char_xM_dst_2_7) dst_2))
               (#"escape_string_mem.jc" 308 35 57# "expl:Integer cast"
               (Int8_of_Uint8.cast c_2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 142 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
            /\
            (((same_block (select (old !char_xP_char_xM_dst_2_7) dst_2)
              end_3)
             /\
             ((>=)
             (sub_pointer (select (old !char_xP_char_xM_dst_2_7) dst_2)
             end_3) (0))) ->
             (((#"escape_string_mem.jc" 296 10 23# "expl:Assigns clause"
               (not_assigns voidP_end_3_8_alloc_table
               voidP_end_3_8_alloc_table (old !charP_charM_end_3_8)
               !charP_charM_end_3_8 pset_empty))
              /\
              (#"escape_string_mem.jc" 296 10 23# "expl:Assigns clause"
              (not_assigns char_xP_dst_2_7_alloc_table
              char_xP_dst_2_7_alloc_table (old !char_xP_char_xM_dst_2_7)
              !char_xP_char_xM_dst_2_7 (pset_singleton dst_2))))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 135 16 38#
             "expl:Ensures clause"
             (#"/home/maria/ded-rep/escape_string_mem.c" 135 16 38#
             "expl:Ensures clause"
             ((#"/home/maria/ded-rep/escape_string_mem.c" 135 16 38#
              "expl:Ensures clause"
              ((=) (select !char_xP_char_xM_dst_2_7 dst_2)
              (shift (select (old !char_xP_char_xM_dst_2_7) dst_2) (1))))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 136 16 32#
             "expl:Ensures clause"
             ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))) }
  
end

module Function_escape_passthrough_safe

  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_alloc_table 
  
  use Int8_of_Uint8 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use why3.Bool.Bool 
  
  val escape_passthrough
  (c_2 : Uint8.t) 
   (dst_2 : (pointer char_xP)) 
    (end_3 : (pointer voidP)) 
     (char_xP_char_xM_dst_2_7 : ref (memory char_xP (pointer voidP))) 
      (charP_charM_end_3_8 : ref (memory voidP Int8.t)) 
       (voidP_end_3_8_alloc_table : (alloc_table voidP)) 
        (char_xP_dst_2_7_alloc_table : (alloc_table char_xP)) 
         (voidP_end_3_8_tag_table : (tag_table voidP)) : Enum__bool.t
          requires {
            ("expl:Internal"
            (#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 129 10 21#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
              ((<=) (offset_min voidP_end_3_8_alloc_table end_3) (0)))
             /\
             (#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
              ((>=) (offset_max voidP_end_3_8_alloc_table end_3) (0)))
             /\
             (#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
             ((=) true true)))))))
            /\
            (#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 129 25 36#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
              ((<=) (offset_min char_xP_dst_2_7_alloc_table dst_2) (0)))
             /\
             (#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
              ((>=) (offset_max char_xP_dst_2_7_alloc_table dst_2) (0)))
             /\
             (#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
             ((=) true true)))))))
            /\
            (#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 130 5 26#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
              ((<=)
              (offset_min voidP_end_3_8_alloc_table
              (select !char_xP_char_xM_dst_2_7 dst_2)) (0)))
             /\
             (#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
              ((>=)
              (offset_max voidP_end_3_8_alloc_table
              (select !char_xP_char_xM_dst_2_7 dst_2)) (1)))
             /\
             (#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
              ((=) true true))
             /\
             (#"escape_string_mem.jc" 275 12 1071# "expl:Requires clause"
             ((=) true true)))))))))
            /\
            (#"/home/maria/ded-rep/escape_string_mem.c" 131 13 48#
            "expl:Requires clause"
            (same_block (select !char_xP_char_xM_dst_2_7 dst_2) end_3)))))))))
            }
          reads { charP_charM_end_3_8, char_xP_char_xM_dst_2_7 } writes {
          charP_charM_end_3_8, char_xP_char_xM_dst_2_7 }
          ensures {
            ((((same_block (select (old !char_xP_char_xM_dst_2_7) dst_2)
               end_3)
              /\
              ((<)
              (sub_pointer (select (old !char_xP_char_xM_dst_2_7) dst_2)
              end_3) (0))) ->
              (((#"escape_string_mem.jc" 303 10 46# "expl:Assigns clause"
                (not_assigns voidP_end_3_8_alloc_table
                voidP_end_3_8_alloc_table (old !charP_charM_end_3_8)
                !charP_charM_end_3_8
                (pset_singleton
                (select (old !char_xP_char_xM_dst_2_7) dst_2))))
               /\
               (#"escape_string_mem.jc" 303 10 46# "expl:Assigns clause"
               (not_assigns char_xP_dst_2_7_alloc_table
               char_xP_dst_2_7_alloc_table (old !char_xP_char_xM_dst_2_7)
               !char_xP_char_xM_dst_2_7 (pset_singleton dst_2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 140 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 140 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 140 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_2_7 dst_2)
               (shift (select (old !char_xP_char_xM_dst_2_7) dst_2) (1))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 140 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 141 16 38#
               "expl:Ensures clause"
               (Int8.(=)
               (select (old !charP_charM_end_3_8)
               (select (old !char_xP_char_xM_dst_2_7) dst_2))
               (#"escape_string_mem.jc" 308 35 57# "expl:Integer cast"
               (Int8_of_Uint8.cast c_2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 142 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
            /\
            (((same_block (select (old !char_xP_char_xM_dst_2_7) dst_2)
              end_3)
             /\
             ((>=)
             (sub_pointer (select (old !char_xP_char_xM_dst_2_7) dst_2)
             end_3) (0))) ->
             (((#"escape_string_mem.jc" 296 10 23# "expl:Assigns clause"
               (not_assigns voidP_end_3_8_alloc_table
               voidP_end_3_8_alloc_table (old !charP_charM_end_3_8)
               !charP_charM_end_3_8 pset_empty))
              /\
              (#"escape_string_mem.jc" 296 10 23# "expl:Assigns clause"
              (not_assigns char_xP_dst_2_7_alloc_table
              char_xP_dst_2_7_alloc_table (old !char_xP_char_xM_dst_2_7)
              !char_xP_char_xM_dst_2_7 (pset_singleton dst_2))))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 135 16 38#
             "expl:Ensures clause"
             (#"/home/maria/ded-rep/escape_string_mem.c" 135 16 38#
             "expl:Ensures clause"
             ((#"/home/maria/ded-rep/escape_string_mem.c" 135 16 38#
              "expl:Ensures clause"
              ((=) (select !char_xP_char_xM_dst_2_7 dst_2)
              (shift (select (old !char_xP_char_xM_dst_2_7) dst_2) (1))))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 136 16 32#
             "expl:Ensures clause"
             ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))) }
  
end

module Function_escape_space_0

  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_alloc_table 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use import Axiomatic_Es_Space 
  
  use why3.Bool.Bool 
  
  val escape_space_0
  (c_3 : Uint8.t) 
   (dst_3 : (pointer char_xP)) 
    (end_4 : (pointer voidP)) 
     (char_xP_char_xM_dst_3_9 : ref (memory char_xP (pointer voidP))) 
      (charP_charM_end_4_10 : ref (memory voidP Int8.t)) 
       (voidP_end_4_10_alloc_table : (alloc_table voidP)) 
        (char_xP_dst_3_9_alloc_table : (alloc_table char_xP)) 
         (voidP_end_4_10_tag_table : (tag_table voidP)) : Enum__bool.t
          requires { true } reads { charP_charM_end_4_10,
          char_xP_char_xM_dst_3_9 } writes { charP_charM_end_4_10,
          char_xP_char_xM_dst_3_9 }
          ensures {
            ((((((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 420 37 49#
                "expl:Integer cast" (Int8.of_int (10)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 421 38 49#
                "expl:Integer cast" (Int8.of_int (9)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 422 37 49#
                "expl:Integer cast" (Int8.of_int (13)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 423 36 48#
                "expl:Integer cast" (Int8.of_int (11)))))
               \/
               ((=) (Uint8.to_int c_3)
               (Int8.to_int (#"escape_string_mem.jc" 424 35 47#
               "expl:Integer cast" (Int8.of_int (12)))))))))
              /\
              ((same_block
               (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (1))
               end_4)
              /\
              ((<)
              (sub_pointer
              (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (1))
              end_4) (0)))) ->
              (((#"escape_string_mem.jc" 427 10 75# "expl:Assigns clause"
                (not_assigns voidP_end_4_10_alloc_table
                voidP_end_4_10_alloc_table (old !charP_charM_end_4_10)
                !charP_charM_end_4_10
                (pset_union
                (pset_singleton
                (select (old !char_xP_char_xM_dst_3_9) dst_3))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (1))))))
               /\
               (#"escape_string_mem.jc" 427 10 75# "expl:Assigns clause"
               (not_assigns char_xP_dst_3_9_alloc_table
               char_xP_dst_3_9_alloc_table (old !char_xP_char_xM_dst_3_9)
               !char_xP_char_xM_dst_3_9 (pset_singleton dst_3))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_3_9 dst_3)
               (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 204 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_4_10
               (shift (select !char_xP_char_xM_dst_3_9 dst_3) (Int.(-_) (2))))
               (#"escape_string_mem.jc" 433 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 205 16 47#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_4_10
               (shift (select !char_xP_char_xM_dst_3_9 dst_3) (Int.(-_) (1))))
               (escape_space (Uint8.to_int c_3))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 206 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
            /\
            ((((((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 406 37 49#
                "expl:Integer cast" (Int8.of_int (10)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 407 38 49#
                "expl:Integer cast" (Int8.of_int (9)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 408 37 49#
                "expl:Integer cast" (Int8.of_int (13)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 409 36 48#
                "expl:Integer cast" (Int8.of_int (11)))))
               \/
               ((=) (Uint8.to_int c_3)
               (Int8.to_int (#"escape_string_mem.jc" 410 35 47#
               "expl:Integer cast" (Int8.of_int (12)))))))))
              /\
              ((=) (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (1))
              end_4)) ->
              (((#"escape_string_mem.jc" 412 10 46# "expl:Assigns clause"
                (not_assigns voidP_end_4_10_alloc_table
                voidP_end_4_10_alloc_table (old !charP_charM_end_4_10)
                !charP_charM_end_4_10
                (pset_singleton
                (select (old !char_xP_char_xM_dst_3_9) dst_3))))
               /\
               (#"escape_string_mem.jc" 412 10 46# "expl:Assigns clause"
               (not_assigns char_xP_dst_3_9_alloc_table
               char_xP_dst_3_9_alloc_table (old !char_xP_char_xM_dst_3_9)
               !char_xP_char_xM_dst_3_9 (pset_singleton dst_3))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 194 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 194 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 194 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_3_9 dst_3)
               (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 194 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 195 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_4_10
               (shift (select !char_xP_char_xM_dst_3_9 dst_3) (Int.(-_) (2))))
               (#"escape_string_mem.jc" 417 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 196 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
            /\
            ((((((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 394 37 49#
                "expl:Integer cast" (Int8.of_int (10)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 395 38 49#
                "expl:Integer cast" (Int8.of_int (9)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 396 37 49#
                "expl:Integer cast" (Int8.of_int (13)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 397 36 48#
                "expl:Integer cast" (Int8.of_int (11)))))
               \/
               ((=) (Uint8.to_int c_3)
               (Int8.to_int (#"escape_string_mem.jc" 398 35 47#
               "expl:Integer cast" (Int8.of_int (12)))))))))
              /\
              ((same_block (select (old !char_xP_char_xM_dst_3_9) dst_3)
               end_4)
              /\
              ((>=)
              (sub_pointer (select (old !char_xP_char_xM_dst_3_9) dst_3)
              end_4) (0)))) ->
              (((#"escape_string_mem.jc" 401 10 23# "expl:Assigns clause"
                (not_assigns voidP_end_4_10_alloc_table
                voidP_end_4_10_alloc_table (old !charP_charM_end_4_10)
                !charP_charM_end_4_10 pset_empty))
               /\
               (#"escape_string_mem.jc" 401 10 23# "expl:Assigns clause"
               (not_assigns char_xP_dst_3_9_alloc_table
               char_xP_dst_3_9_alloc_table (old !char_xP_char_xM_dst_3_9)
               !char_xP_char_xM_dst_3_9 (pset_singleton dst_3))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 186 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 186 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 186 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_3_9 dst_3)
               (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 187 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))
            /\
            ((((<>) (Uint8.to_int c_3)
              (Int8.to_int (#"escape_string_mem.jc" 386 36 48#
              "expl:Integer cast" (Int8.of_int (10)))))
             /\
             (((<>) (Uint8.to_int c_3)
              (Int8.to_int (#"escape_string_mem.jc" 387 37 48#
              "expl:Integer cast" (Int8.of_int (9)))))
             /\
             (((<>) (Uint8.to_int c_3)
              (Int8.to_int (#"escape_string_mem.jc" 388 36 48#
              "expl:Integer cast" (Int8.of_int (13)))))
             /\
             (((<>) (Uint8.to_int c_3)
              (Int8.to_int (#"escape_string_mem.jc" 389 35 47#
              "expl:Integer cast" (Int8.of_int (11)))))
             /\
             ((<>) (Uint8.to_int c_3)
             (Int8.to_int (#"escape_string_mem.jc" 390 34 46#
             "expl:Integer cast" (Int8.of_int (12))))))))) ->
             (((#"escape_string_mem.jc" 391 10 18# "expl:Assigns clause"
               (not_assigns voidP_end_4_10_alloc_table
               voidP_end_4_10_alloc_table (old !charP_charM_end_4_10)
               !charP_charM_end_4_10 pset_empty))
              /\
              (#"escape_string_mem.jc" 391 10 18# "expl:Assigns clause"
              (not_assigns char_xP_dst_3_9_alloc_table
              char_xP_dst_3_9_alloc_table (old !char_xP_char_xM_dst_3_9)
              !char_xP_char_xM_dst_3_9 pset_empty)))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 179 16 33#
             "expl:Ensures clause"
             ((=) ((<>) (Enum__bool.to_int result) (0)) false))))))) }
  
end

module Function_escape_space_0_safe

  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_alloc_table 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use import Axiomatic_Es_Space 
  
  use why3.Bool.Bool 
  
  val escape_space_0
  (c_3 : Uint8.t) 
   (dst_3 : (pointer char_xP)) 
    (end_4 : (pointer voidP)) 
     (char_xP_char_xM_dst_3_9 : ref (memory char_xP (pointer voidP))) 
      (charP_charM_end_4_10 : ref (memory voidP Int8.t)) 
       (voidP_end_4_10_alloc_table : (alloc_table voidP)) 
        (char_xP_dst_3_9_alloc_table : (alloc_table char_xP)) 
         (voidP_end_4_10_tag_table : (tag_table voidP)) : Enum__bool.t
          requires {
            ("expl:Internal"
            (#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 171 10 21#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
              ((<=) (offset_min voidP_end_4_10_alloc_table end_4) (0)))
             /\
             (#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
              ((>=) (offset_max voidP_end_4_10_alloc_table end_4) (0)))
             /\
             (#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
             ((=) true true)))))))
            /\
            (#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 171 25 36#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
              ((<=) (offset_min char_xP_dst_3_9_alloc_table dst_3) (0)))
             /\
             (#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
              ((>=) (offset_max char_xP_dst_3_9_alloc_table dst_3) (0)))
             /\
             (#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
             ((=) true true)))))))
            /\
            (#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 172 6 27#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
              ((<=)
              (offset_min voidP_end_4_10_alloc_table
              (select !char_xP_char_xM_dst_3_9 dst_3)) (0)))
             /\
             (#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
              ((>=)
              (offset_max voidP_end_4_10_alloc_table
              (select !char_xP_char_xM_dst_3_9 dst_3)) (1)))
             /\
             (#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
              ((=) true true))
             /\
             (#"escape_string_mem.jc" 367 12 1071# "expl:Requires clause"
             ((=) true true)))))))))
            /\
            (#"/home/maria/ded-rep/escape_string_mem.c" 173 13 48#
            "expl:Requires clause"
            (same_block (select !char_xP_char_xM_dst_3_9 dst_3) end_4)))))))))
            }
          reads { charP_charM_end_4_10, char_xP_char_xM_dst_3_9 } writes {
          charP_charM_end_4_10, char_xP_char_xM_dst_3_9 }
          ensures {
            ((((((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 420 37 49#
                "expl:Integer cast" (Int8.of_int (10)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 421 38 49#
                "expl:Integer cast" (Int8.of_int (9)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 422 37 49#
                "expl:Integer cast" (Int8.of_int (13)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 423 36 48#
                "expl:Integer cast" (Int8.of_int (11)))))
               \/
               ((=) (Uint8.to_int c_3)
               (Int8.to_int (#"escape_string_mem.jc" 424 35 47#
               "expl:Integer cast" (Int8.of_int (12)))))))))
              /\
              ((same_block
               (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (1))
               end_4)
              /\
              ((<)
              (sub_pointer
              (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (1))
              end_4) (0)))) ->
              (((#"escape_string_mem.jc" 427 10 75# "expl:Assigns clause"
                (not_assigns voidP_end_4_10_alloc_table
                voidP_end_4_10_alloc_table (old !charP_charM_end_4_10)
                !charP_charM_end_4_10
                (pset_union
                (pset_singleton
                (select (old !char_xP_char_xM_dst_3_9) dst_3))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (1))))))
               /\
               (#"escape_string_mem.jc" 427 10 75# "expl:Assigns clause"
               (not_assigns char_xP_dst_3_9_alloc_table
               char_xP_dst_3_9_alloc_table (old !char_xP_char_xM_dst_3_9)
               !char_xP_char_xM_dst_3_9 (pset_singleton dst_3))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_3_9 dst_3)
               (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 204 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_4_10
               (shift (select !char_xP_char_xM_dst_3_9 dst_3) (Int.(-_) (2))))
               (#"escape_string_mem.jc" 433 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 203 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 205 16 47#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_4_10
               (shift (select !char_xP_char_xM_dst_3_9 dst_3) (Int.(-_) (1))))
               (escape_space (Uint8.to_int c_3))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 206 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
            /\
            ((((((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 406 37 49#
                "expl:Integer cast" (Int8.of_int (10)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 407 38 49#
                "expl:Integer cast" (Int8.of_int (9)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 408 37 49#
                "expl:Integer cast" (Int8.of_int (13)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 409 36 48#
                "expl:Integer cast" (Int8.of_int (11)))))
               \/
               ((=) (Uint8.to_int c_3)
               (Int8.to_int (#"escape_string_mem.jc" 410 35 47#
               "expl:Integer cast" (Int8.of_int (12)))))))))
              /\
              ((=) (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (1))
              end_4)) ->
              (((#"escape_string_mem.jc" 412 10 46# "expl:Assigns clause"
                (not_assigns voidP_end_4_10_alloc_table
                voidP_end_4_10_alloc_table (old !charP_charM_end_4_10)
                !charP_charM_end_4_10
                (pset_singleton
                (select (old !char_xP_char_xM_dst_3_9) dst_3))))
               /\
               (#"escape_string_mem.jc" 412 10 46# "expl:Assigns clause"
               (not_assigns char_xP_dst_3_9_alloc_table
               char_xP_dst_3_9_alloc_table (old !char_xP_char_xM_dst_3_9)
               !char_xP_char_xM_dst_3_9 (pset_singleton dst_3))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 194 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 194 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 194 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_3_9 dst_3)
               (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 194 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 195 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_4_10
               (shift (select !char_xP_char_xM_dst_3_9 dst_3) (Int.(-_) (2))))
               (#"escape_string_mem.jc" 417 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 196 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
            /\
            ((((((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 394 37 49#
                "expl:Integer cast" (Int8.of_int (10)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 395 38 49#
                "expl:Integer cast" (Int8.of_int (9)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 396 37 49#
                "expl:Integer cast" (Int8.of_int (13)))))
               \/
               (((=) (Uint8.to_int c_3)
                (Int8.to_int (#"escape_string_mem.jc" 397 36 48#
                "expl:Integer cast" (Int8.of_int (11)))))
               \/
               ((=) (Uint8.to_int c_3)
               (Int8.to_int (#"escape_string_mem.jc" 398 35 47#
               "expl:Integer cast" (Int8.of_int (12)))))))))
              /\
              ((same_block (select (old !char_xP_char_xM_dst_3_9) dst_3)
               end_4)
              /\
              ((>=)
              (sub_pointer (select (old !char_xP_char_xM_dst_3_9) dst_3)
              end_4) (0)))) ->
              (((#"escape_string_mem.jc" 401 10 23# "expl:Assigns clause"
                (not_assigns voidP_end_4_10_alloc_table
                voidP_end_4_10_alloc_table (old !charP_charM_end_4_10)
                !charP_charM_end_4_10 pset_empty))
               /\
               (#"escape_string_mem.jc" 401 10 23# "expl:Assigns clause"
               (not_assigns char_xP_dst_3_9_alloc_table
               char_xP_dst_3_9_alloc_table (old !char_xP_char_xM_dst_3_9)
               !char_xP_char_xM_dst_3_9 (pset_singleton dst_3))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 186 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 186 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 186 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_3_9 dst_3)
               (shift (select (old !char_xP_char_xM_dst_3_9) dst_3) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 187 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))
            /\
            ((((<>) (Uint8.to_int c_3)
              (Int8.to_int (#"escape_string_mem.jc" 386 36 48#
              "expl:Integer cast" (Int8.of_int (10)))))
             /\
             (((<>) (Uint8.to_int c_3)
              (Int8.to_int (#"escape_string_mem.jc" 387 37 48#
              "expl:Integer cast" (Int8.of_int (9)))))
             /\
             (((<>) (Uint8.to_int c_3)
              (Int8.to_int (#"escape_string_mem.jc" 388 36 48#
              "expl:Integer cast" (Int8.of_int (13)))))
             /\
             (((<>) (Uint8.to_int c_3)
              (Int8.to_int (#"escape_string_mem.jc" 389 35 47#
              "expl:Integer cast" (Int8.of_int (11)))))
             /\
             ((<>) (Uint8.to_int c_3)
             (Int8.to_int (#"escape_string_mem.jc" 390 34 46#
             "expl:Integer cast" (Int8.of_int (12))))))))) ->
             (((#"escape_string_mem.jc" 391 10 18# "expl:Assigns clause"
               (not_assigns voidP_end_4_10_alloc_table
               voidP_end_4_10_alloc_table (old !charP_charM_end_4_10)
               !charP_charM_end_4_10 pset_empty))
              /\
              (#"escape_string_mem.jc" 391 10 18# "expl:Assigns clause"
              (not_assigns char_xP_dst_3_9_alloc_table
              char_xP_dst_3_9_alloc_table (old !char_xP_char_xM_dst_3_9)
              !char_xP_char_xM_dst_3_9 pset_empty)))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 179 16 33#
             "expl:Ensures clause"
             ((=) ((<>) (Enum__bool.to_int result) (0)) false))))))) }
  
end

module Function_escape_special_0

  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_alloc_table 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use import Axiomatic_Es_Special 
  
  use why3.Bool.Bool 
  
  val escape_special_0
  (c_4 : Uint8.t) 
   (dst_4 : (pointer char_xP)) 
    (end_5 : (pointer voidP)) 
     (char_xP_char_xM_dst_4_11 : ref (memory char_xP (pointer voidP))) 
      (charP_charM_end_5_12 : ref (memory voidP Int8.t)) 
       (voidP_end_5_12_alloc_table : (alloc_table voidP)) 
        (char_xP_dst_4_11_alloc_table : (alloc_table char_xP)) 
         (voidP_end_5_12_tag_table : (tag_table voidP)) : Enum__bool.t
          requires { true } reads { charP_charM_end_5_12,
          char_xP_char_xM_dst_4_11 } writes { charP_charM_end_5_12,
          char_xP_char_xM_dst_4_11 }
          ensures {
            ((((((=) (Uint8.to_int c_4)
                (Int8.to_int (#"escape_string_mem.jc" 556 35 47#
                "expl:Integer cast" (Int8.of_int (92)))))
               \/
               (((=) (Uint8.to_int c_4)
                (Int8.to_int (#"escape_string_mem.jc" 557 36 47#
                "expl:Integer cast" (Int8.of_int (7)))))
               \/
               ((=) (Uint8.to_int c_4)
               (Int8.to_int (#"escape_string_mem.jc" 558 35 50#
               "expl:Integer cast" (Int8.of_int (23653)))))))
              /\
              ((same_block
               (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (1))
               end_5)
              /\
              ((<)
              (sub_pointer
              (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (1))
              end_5) (0)))) ->
              (((#"escape_string_mem.jc" 561 10 75# "expl:Assigns clause"
                (not_assigns voidP_end_5_12_alloc_table
                voidP_end_5_12_alloc_table (old !charP_charM_end_5_12)
                !charP_charM_end_5_12
                (pset_union
                (pset_singleton
                (select (old !char_xP_char_xM_dst_4_11) dst_4))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (1))))))
               /\
               (#"escape_string_mem.jc" 561 10 75# "expl:Assigns clause"
               (not_assigns char_xP_dst_4_11_alloc_table
               char_xP_dst_4_11_alloc_table (old !char_xP_char_xM_dst_4_11)
               !char_xP_char_xM_dst_4_11 (pset_singleton dst_4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_4_11 dst_4)
               (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 283 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_5_12
               (shift (select !char_xP_char_xM_dst_4_11 dst_4)
               (Int.(-_) (2)))) (#"escape_string_mem.jc" 567 35 47#
               "expl:Integer cast" (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 284 16 49#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_5_12
               (shift (select !char_xP_char_xM_dst_4_11 dst_4)
               (Int.(-_) (1)))) (escape_special (Uint8.to_int c_4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 285 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
            /\
            ((((((=) (Uint8.to_int c_4)
                (Int8.to_int (#"escape_string_mem.jc" 544 35 47#
                "expl:Integer cast" (Int8.of_int (92)))))
               \/
               (((=) (Uint8.to_int c_4)
                (Int8.to_int (#"escape_string_mem.jc" 545 36 47#
                "expl:Integer cast" (Int8.of_int (7)))))
               \/
               ((=) (Uint8.to_int c_4)
               (Int8.to_int (#"escape_string_mem.jc" 546 35 50#
               "expl:Integer cast" (Int8.of_int (23653)))))))
              /\
              ((=) (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (1))
              end_5)) ->
              (((#"escape_string_mem.jc" 548 10 46# "expl:Assigns clause"
                (not_assigns voidP_end_5_12_alloc_table
                voidP_end_5_12_alloc_table (old !charP_charM_end_5_12)
                !charP_charM_end_5_12
                (pset_singleton
                (select (old !char_xP_char_xM_dst_4_11) dst_4))))
               /\
               (#"escape_string_mem.jc" 548 10 46# "expl:Assigns clause"
               (not_assigns char_xP_dst_4_11_alloc_table
               char_xP_dst_4_11_alloc_table (old !char_xP_char_xM_dst_4_11)
               !char_xP_char_xM_dst_4_11 (pset_singleton dst_4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 274 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 274 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 274 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_4_11 dst_4)
               (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 274 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 275 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_5_12
               (shift (select !char_xP_char_xM_dst_4_11 dst_4)
               (Int.(-_) (2)))) (#"escape_string_mem.jc" 553 35 47#
               "expl:Integer cast" (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 276 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
            /\
            ((((((=) (Uint8.to_int c_4)
                (Int8.to_int (#"escape_string_mem.jc" 534 35 47#
                "expl:Integer cast" (Int8.of_int (92)))))
               \/
               (((=) (Uint8.to_int c_4)
                (Int8.to_int (#"escape_string_mem.jc" 535 36 47#
                "expl:Integer cast" (Int8.of_int (7)))))
               \/
               ((=) (Uint8.to_int c_4)
               (Int8.to_int (#"escape_string_mem.jc" 536 35 50#
               "expl:Integer cast" (Int8.of_int (23653)))))))
              /\
              ((same_block (select (old !char_xP_char_xM_dst_4_11) dst_4)
               end_5)
              /\
              ((>=)
              (sub_pointer (select (old !char_xP_char_xM_dst_4_11) dst_4)
              end_5) (0)))) ->
              (((#"escape_string_mem.jc" 539 10 23# "expl:Assigns clause"
                (not_assigns voidP_end_5_12_alloc_table
                voidP_end_5_12_alloc_table (old !charP_charM_end_5_12)
                !charP_charM_end_5_12 pset_empty))
               /\
               (#"escape_string_mem.jc" 539 10 23# "expl:Assigns clause"
               (not_assigns char_xP_dst_4_11_alloc_table
               char_xP_dst_4_11_alloc_table (old !char_xP_char_xM_dst_4_11)
               !char_xP_char_xM_dst_4_11 (pset_singleton dst_4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 267 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 267 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 267 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_4_11 dst_4)
               (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 268 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))
            /\
            ((((<>) (Uint8.to_int c_4)
              (Int8.to_int (#"escape_string_mem.jc" 528 34 46#
              "expl:Integer cast" (Int8.of_int (92)))))
             /\
             (((<>) (Uint8.to_int c_4)
              (Int8.to_int (#"escape_string_mem.jc" 529 35 46#
              "expl:Integer cast" (Int8.of_int (7)))))
             /\
             ((<>) (Uint8.to_int c_4)
             (Int8.to_int (#"escape_string_mem.jc" 530 34 49#
             "expl:Integer cast" (Int8.of_int (23653))))))) ->
             (((#"escape_string_mem.jc" 531 10 18# "expl:Assigns clause"
               (not_assigns voidP_end_5_12_alloc_table
               voidP_end_5_12_alloc_table (old !charP_charM_end_5_12)
               !charP_charM_end_5_12 pset_empty))
              /\
              (#"escape_string_mem.jc" 531 10 18# "expl:Assigns clause"
              (not_assigns char_xP_dst_4_11_alloc_table
              char_xP_dst_4_11_alloc_table (old !char_xP_char_xM_dst_4_11)
              !char_xP_char_xM_dst_4_11 pset_empty)))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 261 16 33#
             "expl:Ensures clause"
             ((=) ((<>) (Enum__bool.to_int result) (0)) false))))))) }
  
end

module Function_escape_special_0_safe

  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_alloc_table 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use import Axiomatic_Es_Special 
  
  use why3.Bool.Bool 
  
  val escape_special_0
  (c_4 : Uint8.t) 
   (dst_4 : (pointer char_xP)) 
    (end_5 : (pointer voidP)) 
     (char_xP_char_xM_dst_4_11 : ref (memory char_xP (pointer voidP))) 
      (charP_charM_end_5_12 : ref (memory voidP Int8.t)) 
       (voidP_end_5_12_alloc_table : (alloc_table voidP)) 
        (char_xP_dst_4_11_alloc_table : (alloc_table char_xP)) 
         (voidP_end_5_12_tag_table : (tag_table voidP)) : Enum__bool.t
          requires {
            ("expl:Internal"
            (#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 254 10 21#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
              ((<=) (offset_min voidP_end_5_12_alloc_table end_5) (0)))
             /\
             (#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
              ((>=) (offset_max voidP_end_5_12_alloc_table end_5) (0)))
             /\
             (#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
             ((=) true true)))))))
            /\
            (#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 254 25 36#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
              ((<=) (offset_min char_xP_dst_4_11_alloc_table dst_4) (0)))
             /\
             (#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
              ((>=) (offset_max char_xP_dst_4_11_alloc_table dst_4) (0)))
             /\
             (#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
             ((=) true true)))))))
            /\
            (#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 255 6 27#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
              ((<=)
              (offset_min voidP_end_5_12_alloc_table
              (select !char_xP_char_xM_dst_4_11 dst_4)) (0)))
             /\
             (#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
              ((>=)
              (offset_max voidP_end_5_12_alloc_table
              (select !char_xP_char_xM_dst_4_11 dst_4)) (1)))
             /\
             (#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
             ((#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
              ((=) true true))
             /\
             (#"escape_string_mem.jc" 509 12 1071# "expl:Requires clause"
             ((=) true true)))))))))
            /\
            (#"/home/maria/ded-rep/escape_string_mem.c" 256 13 48#
            "expl:Requires clause"
            (same_block (select !char_xP_char_xM_dst_4_11 dst_4) end_5)))))))))
            }
          reads { charP_charM_end_5_12, char_xP_char_xM_dst_4_11 } writes {
          charP_charM_end_5_12, char_xP_char_xM_dst_4_11 }
          ensures {
            ((((((=) (Uint8.to_int c_4)
                (Int8.to_int (#"escape_string_mem.jc" 556 35 47#
                "expl:Integer cast" (Int8.of_int (92)))))
               \/
               (((=) (Uint8.to_int c_4)
                (Int8.to_int (#"escape_string_mem.jc" 557 36 47#
                "expl:Integer cast" (Int8.of_int (7)))))
               \/
               ((=) (Uint8.to_int c_4)
               (Int8.to_int (#"escape_string_mem.jc" 558 35 50#
               "expl:Integer cast" (Int8.of_int (23653)))))))
              /\
              ((same_block
               (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (1))
               end_5)
              /\
              ((<)
              (sub_pointer
              (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (1))
              end_5) (0)))) ->
              (((#"escape_string_mem.jc" 561 10 75# "expl:Assigns clause"
                (not_assigns voidP_end_5_12_alloc_table
                voidP_end_5_12_alloc_table (old !charP_charM_end_5_12)
                !charP_charM_end_5_12
                (pset_union
                (pset_singleton
                (select (old !char_xP_char_xM_dst_4_11) dst_4))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (1))))))
               /\
               (#"escape_string_mem.jc" 561 10 75# "expl:Assigns clause"
               (not_assigns char_xP_dst_4_11_alloc_table
               char_xP_dst_4_11_alloc_table (old !char_xP_char_xM_dst_4_11)
               !char_xP_char_xM_dst_4_11 (pset_singleton dst_4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_4_11 dst_4)
               (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 283 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_5_12
               (shift (select !char_xP_char_xM_dst_4_11 dst_4)
               (Int.(-_) (2)))) (#"escape_string_mem.jc" 567 35 47#
               "expl:Integer cast" (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 282 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 284 16 49#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_5_12
               (shift (select !char_xP_char_xM_dst_4_11 dst_4)
               (Int.(-_) (1)))) (escape_special (Uint8.to_int c_4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 285 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
            /\
            ((((((=) (Uint8.to_int c_4)
                (Int8.to_int (#"escape_string_mem.jc" 544 35 47#
                "expl:Integer cast" (Int8.of_int (92)))))
               \/
               (((=) (Uint8.to_int c_4)
                (Int8.to_int (#"escape_string_mem.jc" 545 36 47#
                "expl:Integer cast" (Int8.of_int (7)))))
               \/
               ((=) (Uint8.to_int c_4)
               (Int8.to_int (#"escape_string_mem.jc" 546 35 50#
               "expl:Integer cast" (Int8.of_int (23653)))))))
              /\
              ((=) (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (1))
              end_5)) ->
              (((#"escape_string_mem.jc" 548 10 46# "expl:Assigns clause"
                (not_assigns voidP_end_5_12_alloc_table
                voidP_end_5_12_alloc_table (old !charP_charM_end_5_12)
                !charP_charM_end_5_12
                (pset_singleton
                (select (old !char_xP_char_xM_dst_4_11) dst_4))))
               /\
               (#"escape_string_mem.jc" 548 10 46# "expl:Assigns clause"
               (not_assigns char_xP_dst_4_11_alloc_table
               char_xP_dst_4_11_alloc_table (old !char_xP_char_xM_dst_4_11)
               !char_xP_char_xM_dst_4_11 (pset_singleton dst_4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 274 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 274 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 274 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_4_11 dst_4)
               (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 274 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 275 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_5_12
               (shift (select !char_xP_char_xM_dst_4_11 dst_4)
               (Int.(-_) (2)))) (#"escape_string_mem.jc" 553 35 47#
               "expl:Integer cast" (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 276 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
            /\
            ((((((=) (Uint8.to_int c_4)
                (Int8.to_int (#"escape_string_mem.jc" 534 35 47#
                "expl:Integer cast" (Int8.of_int (92)))))
               \/
               (((=) (Uint8.to_int c_4)
                (Int8.to_int (#"escape_string_mem.jc" 535 36 47#
                "expl:Integer cast" (Int8.of_int (7)))))
               \/
               ((=) (Uint8.to_int c_4)
               (Int8.to_int (#"escape_string_mem.jc" 536 35 50#
               "expl:Integer cast" (Int8.of_int (23653)))))))
              /\
              ((same_block (select (old !char_xP_char_xM_dst_4_11) dst_4)
               end_5)
              /\
              ((>=)
              (sub_pointer (select (old !char_xP_char_xM_dst_4_11) dst_4)
              end_5) (0)))) ->
              (((#"escape_string_mem.jc" 539 10 23# "expl:Assigns clause"
                (not_assigns voidP_end_5_12_alloc_table
                voidP_end_5_12_alloc_table (old !charP_charM_end_5_12)
                !charP_charM_end_5_12 pset_empty))
               /\
               (#"escape_string_mem.jc" 539 10 23# "expl:Assigns clause"
               (not_assigns char_xP_dst_4_11_alloc_table
               char_xP_dst_4_11_alloc_table (old !char_xP_char_xM_dst_4_11)
               !char_xP_char_xM_dst_4_11 (pset_singleton dst_4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 267 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 267 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 267 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_4_11 dst_4)
               (shift (select (old !char_xP_char_xM_dst_4_11) dst_4) (2))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 268 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))
            /\
            ((((<>) (Uint8.to_int c_4)
              (Int8.to_int (#"escape_string_mem.jc" 528 34 46#
              "expl:Integer cast" (Int8.of_int (92)))))
             /\
             (((<>) (Uint8.to_int c_4)
              (Int8.to_int (#"escape_string_mem.jc" 529 35 46#
              "expl:Integer cast" (Int8.of_int (7)))))
             /\
             ((<>) (Uint8.to_int c_4)
             (Int8.to_int (#"escape_string_mem.jc" 530 34 49#
             "expl:Integer cast" (Int8.of_int (23653))))))) ->
             (((#"escape_string_mem.jc" 531 10 18# "expl:Assigns clause"
               (not_assigns voidP_end_5_12_alloc_table
               voidP_end_5_12_alloc_table (old !charP_charM_end_5_12)
               !charP_charM_end_5_12 pset_empty))
              /\
              (#"escape_string_mem.jc" 531 10 18# "expl:Assigns clause"
              (not_assigns char_xP_dst_4_11_alloc_table
              char_xP_dst_4_11_alloc_table (old !char_xP_char_xM_dst_4_11)
              !char_xP_char_xM_dst_4_11 pset_empty)))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 261 16 33#
             "expl:Ensures clause"
             ((=) ((<>) (Enum__bool.to_int result) (0)) false))))))) }
  
end

module Function_escape_hex

  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_alloc_table 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use int.ComputerDivision 
  
  use why3.Bool.Bool 
  
  use import Globals_struct_charp 
  
  use import Globals_root_voidp 
  
  val escape_hex
  (c : Uint8.t) 
   (dst : (pointer char_xP)) 
    (end_0 : (pointer voidP)) 
     (char_xP_char_xM_dst_13 : ref (memory char_xP (pointer voidP))) 
      (charP_charM_end_0_14 : ref (memory voidP Int8.t)) 
       (voidP_end_0_14_alloc_table : (alloc_table voidP)) 
        (char_xP_dst_13_alloc_table : (alloc_table char_xP)) 
         (voidP_end_0_14_tag_table : (tag_table voidP)) : Enum__bool.t
          requires { true } reads { charP_charM_end_0_14,
          charP_charM_hex_asc_2, char_xP_char_xM_dst_13, hex_asc,
          voidP_hex_asc_2_alloc_table, voidP_hex_asc_2_tag_table } writes {
          charP_charM_end_0_14, char_xP_char_xM_dst_13 }
          ensures {
            ((((same_block
               (shift (select (old !char_xP_char_xM_dst_13) dst) (4)) end_0)
              /\
              ((<=)
              (sub_pointer
              (shift (select (old !char_xP_char_xM_dst_13) dst) (4)) end_0)
              (0))) ->
              (((#"escape_string_mem.jc" 684 10 123# "expl:Assigns clause"
                (not_assigns voidP_end_0_14_alloc_table
                voidP_end_0_14_alloc_table (old !charP_charM_end_0_14)
                !charP_charM_end_0_14
                (pset_union
                (pset_singleton (select (old !char_xP_char_xM_dst_13) dst))
                (pset_union
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_13) dst) (1)))
                (pset_union
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_13) dst) (2)))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_13) dst) (3))))))))
               /\
               (#"escape_string_mem.jc" 684 10 123# "expl:Assigns clause"
               (not_assigns char_xP_dst_13_alloc_table
               char_xP_dst_13_alloc_table (old !char_xP_char_xM_dst_13)
               !char_xP_char_xM_dst_13 (pset_singleton dst))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_13 dst)
               (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 352 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 692 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 353 16 34#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (3))))
               (#"escape_string_mem.jc" 694 37 50# "expl:Integer cast"
               (Int8.of_int (120)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 354 16 56#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (2))))
               (select !charP_charM_hex_asc_2
               (shift hex_asc
               (ComputerDivision.div
               (ComputerDivision.mod (Uint8.to_int c) (240)) (16))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 355 16 50#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (1))))
               (select !charP_charM_hex_asc_2
               (shift hex_asc (ComputerDivision.mod (Uint8.to_int c) (15))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 356 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))))))
            /\
            ((((=) (shift (select (old !char_xP_char_xM_dst_13) dst) (3))
              end_0) ->
              (((#"escape_string_mem.jc" 666 10 96# "expl:Assigns clause"
                (not_assigns voidP_end_0_14_alloc_table
                voidP_end_0_14_alloc_table (old !charP_charM_end_0_14)
                !charP_charM_end_0_14
                (pset_union
                (pset_singleton (select (old !char_xP_char_xM_dst_13) dst))
                (pset_union
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_13) dst) (1)))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_13) dst) (2)))))))
               /\
               (#"escape_string_mem.jc" 666 10 96# "expl:Assigns clause"
               (not_assigns char_xP_dst_13_alloc_table
               char_xP_dst_13_alloc_table (old !char_xP_char_xM_dst_13)
               !char_xP_char_xM_dst_13 (pset_singleton dst))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_13 dst)
               (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 344 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 673 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 345 16 34#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (3))))
               (#"escape_string_mem.jc" 675 37 50# "expl:Integer cast"
               (Int8.of_int (120)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 346 16 56#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (2))))
               (select !charP_charM_hex_asc_2
               (shift hex_asc
               (ComputerDivision.div
               (ComputerDivision.mod (Uint8.to_int c) (240)) (16))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 347 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))))
            /\
            ((((=) (shift (select (old !char_xP_char_xM_dst_13) dst) (2))
              end_0) ->
              (((#"escape_string_mem.jc" 654 10 69# "expl:Assigns clause"
                (not_assigns voidP_end_0_14_alloc_table
                voidP_end_0_14_alloc_table (old !charP_charM_end_0_14)
                !charP_charM_end_0_14
                (pset_union
                (pset_singleton (select (old !char_xP_char_xM_dst_13) dst))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_13) dst) (1))))))
               /\
               (#"escape_string_mem.jc" 654 10 69# "expl:Assigns clause"
               (not_assigns char_xP_dst_13_alloc_table
               char_xP_dst_13_alloc_table (old !char_xP_char_xM_dst_13)
               !char_xP_char_xM_dst_13 (pset_singleton dst))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_13 dst)
               (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 337 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 660 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 338 16 34#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (3))))
               (#"escape_string_mem.jc" 662 37 50# "expl:Integer cast"
               (Int8.of_int (120)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 339 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
            /\
            ((((=) (shift (select (old !char_xP_char_xM_dst_13) dst) (1))
              end_0) ->
              (((#"escape_string_mem.jc" 645 10 42# "expl:Assigns clause"
                (not_assigns voidP_end_0_14_alloc_table
                voidP_end_0_14_alloc_table (old !charP_charM_end_0_14)
                !charP_charM_end_0_14
                (pset_singleton (select (old !char_xP_char_xM_dst_13) dst))))
               /\
               (#"escape_string_mem.jc" 645 10 42# "expl:Assigns clause"
               (not_assigns char_xP_dst_13_alloc_table
               char_xP_dst_13_alloc_table (old !char_xP_char_xM_dst_13)
               !char_xP_char_xM_dst_13 (pset_singleton dst))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 330 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 330 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 330 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_13 dst)
               (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 330 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 331 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 650 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 332 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
            /\
            (((same_block (select (old !char_xP_char_xM_dst_13) dst) end_0)
             /\
             ((>=)
             (sub_pointer (select (old !char_xP_char_xM_dst_13) dst) end_0)
             (0))) ->
             (((#"escape_string_mem.jc" 639 10 21# "expl:Assigns clause"
               (not_assigns voidP_end_0_14_alloc_table
               voidP_end_0_14_alloc_table (old !charP_charM_end_0_14)
               !charP_charM_end_0_14 pset_empty))
              /\
              (#"escape_string_mem.jc" 639 10 21# "expl:Assigns clause"
              (not_assigns char_xP_dst_13_alloc_table
              char_xP_dst_13_alloc_table (old !char_xP_char_xM_dst_13)
              !char_xP_char_xM_dst_13 (pset_singleton dst))))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 325 16 38#
             "expl:Ensures clause"
             (#"/home/maria/ded-rep/escape_string_mem.c" 325 16 38#
             "expl:Ensures clause"
             ((#"/home/maria/ded-rep/escape_string_mem.c" 325 16 38#
              "expl:Ensures clause"
              ((=) (select !char_xP_char_xM_dst_13 dst)
              (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 326 16 32#
             "expl:Ensures clause"
             ((=) ((<>) (Enum__bool.to_int result) (0)) true))))))))))) }
  
end

module Function_escape_hex_safe

  use enum.Uint8 
  
  use import Root_char_xP 
  
  use import ref.Ref 
  
  use import core.Jessie_voidp 
  
  use import core.Jessie_tag_table_type 
  
  use import core.Jessie_pset_union 
  
  use import core.Jessie_pset 
  
  use import core.Jessie_pointer 
  
  use import core.Jessie_memory 
  
  use import core.Jessie_assigns 
  
  use import core.Jessie_alloc_table 
  
  use enum.Int8 
  
  use import int.Int 
  
  use Enum__bool 
  
  use int.ComputerDivision 
  
  use why3.Bool.Bool 
  
  use import Globals_struct_charp 
  
  use import Globals_root_voidp 
  
  val escape_hex
  (c : Uint8.t) 
   (dst : (pointer char_xP)) 
    (end_0 : (pointer voidP)) 
     (char_xP_char_xM_dst_13 : ref (memory char_xP (pointer voidP))) 
      (charP_charM_end_0_14 : ref (memory voidP Int8.t)) 
       (voidP_end_0_14_alloc_table : (alloc_table voidP)) 
        (char_xP_dst_13_alloc_table : (alloc_table char_xP)) 
         (voidP_end_0_14_tag_table : (tag_table voidP)) : Enum__bool.t
          requires {
            ("expl:Internal"
            (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 319 10 21#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
             ((#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
              ((<=) (offset_min voidP_end_0_14_alloc_table end_0) (0)))
             /\
             (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
             ((#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
              ((>=) (offset_max voidP_end_0_14_alloc_table end_0) (0)))
             /\
             (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
             ((=) true true)))))))
            /\
            (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 319 25 36#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
             ((#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
              ((<=) (offset_min char_xP_dst_13_alloc_table dst) (0)))
             /\
             (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
             ((#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
              ((>=) (offset_max char_xP_dst_13_alloc_table dst) (0)))
             /\
             (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
             ((=) true true)))))))
            /\
            (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
            ((#"/home/maria/ded-rep/escape_string_mem.c" 320 6 27#
             "expl:Requires clause"
             (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
             ((#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
              ((<=)
              (offset_min voidP_end_0_14_alloc_table
              (select !char_xP_char_xM_dst_13 dst)) (0)))
             /\
             (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
             ((#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
              ((>=)
              (offset_max voidP_end_0_14_alloc_table
              (select !char_xP_char_xM_dst_13 dst)) (3)))
             /\
             (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
             ((#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
              ((=) true true))
             /\
             (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
             ((#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
              ((=) true true))
             /\
             (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
             ((#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
              ((=) true true))
             /\
             (#"escape_string_mem.jc" 618 12 1081# "expl:Requires clause"
             ((=) true true)))))))))))))
            /\
            (#"/home/maria/ded-rep/escape_string_mem.c" 321 13 48#
            "expl:Requires clause"
            (same_block (select !char_xP_char_xM_dst_13 dst) end_0))))))))) }
          reads { charP_charM_end_0_14, charP_charM_hex_asc_2,
          char_xP_char_xM_dst_13, hex_asc, voidP_hex_asc_2_alloc_table,
          voidP_hex_asc_2_tag_table } writes { charP_charM_end_0_14,
          char_xP_char_xM_dst_13 }
          ensures {
            ((((same_block
               (shift (select (old !char_xP_char_xM_dst_13) dst) (4)) end_0)
              /\
              ((<=)
              (sub_pointer
              (shift (select (old !char_xP_char_xM_dst_13) dst) (4)) end_0)
              (0))) ->
              (((#"escape_string_mem.jc" 684 10 123# "expl:Assigns clause"
                (not_assigns voidP_end_0_14_alloc_table
                voidP_end_0_14_alloc_table (old !charP_charM_end_0_14)
                !charP_charM_end_0_14
                (pset_union
                (pset_singleton (select (old !char_xP_char_xM_dst_13) dst))
                (pset_union
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_13) dst) (1)))
                (pset_union
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_13) dst) (2)))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_13) dst) (3))))))))
               /\
               (#"escape_string_mem.jc" 684 10 123# "expl:Assigns clause"
               (not_assigns char_xP_dst_13_alloc_table
               char_xP_dst_13_alloc_table (old !char_xP_char_xM_dst_13)
               !char_xP_char_xM_dst_13 (pset_singleton dst))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_13 dst)
               (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 352 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 692 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 353 16 34#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (3))))
               (#"escape_string_mem.jc" 694 37 50# "expl:Integer cast"
               (Int8.of_int (120)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 354 16 56#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (2))))
               (select !charP_charM_hex_asc_2
               (shift hex_asc
               (ComputerDivision.div
               (ComputerDivision.mod (Uint8.to_int c) (240)) (16))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 351 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 355 16 50#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (1))))
               (select !charP_charM_hex_asc_2
               (shift hex_asc (ComputerDivision.mod (Uint8.to_int c) (15))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 356 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))))))
            /\
            ((((=) (shift (select (old !char_xP_char_xM_dst_13) dst) (3))
              end_0) ->
              (((#"escape_string_mem.jc" 666 10 96# "expl:Assigns clause"
                (not_assigns voidP_end_0_14_alloc_table
                voidP_end_0_14_alloc_table (old !charP_charM_end_0_14)
                !charP_charM_end_0_14
                (pset_union
                (pset_singleton (select (old !char_xP_char_xM_dst_13) dst))
                (pset_union
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_13) dst) (1)))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_13) dst) (2)))))))
               /\
               (#"escape_string_mem.jc" 666 10 96# "expl:Assigns clause"
               (not_assigns char_xP_dst_13_alloc_table
               char_xP_dst_13_alloc_table (old !char_xP_char_xM_dst_13)
               !char_xP_char_xM_dst_13 (pset_singleton dst))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_13 dst)
               (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 344 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 673 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 345 16 34#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (3))))
               (#"escape_string_mem.jc" 675 37 50# "expl:Integer cast"
               (Int8.of_int (120)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 343 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 346 16 56#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (2))))
               (select !charP_charM_hex_asc_2
               (shift hex_asc
               (ComputerDivision.div
               (ComputerDivision.mod (Uint8.to_int c) (240)) (16))))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 347 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))))
            /\
            ((((=) (shift (select (old !char_xP_char_xM_dst_13) dst) (2))
              end_0) ->
              (((#"escape_string_mem.jc" 654 10 69# "expl:Assigns clause"
                (not_assigns voidP_end_0_14_alloc_table
                voidP_end_0_14_alloc_table (old !charP_charM_end_0_14)
                !charP_charM_end_0_14
                (pset_union
                (pset_singleton (select (old !char_xP_char_xM_dst_13) dst))
                (pset_singleton
                (shift (select (old !char_xP_char_xM_dst_13) dst) (1))))))
               /\
               (#"escape_string_mem.jc" 654 10 69# "expl:Assigns clause"
               (not_assigns char_xP_dst_13_alloc_table
               char_xP_dst_13_alloc_table (old !char_xP_char_xM_dst_13)
               !char_xP_char_xM_dst_13 (pset_singleton dst))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_13 dst)
               (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 337 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 660 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 336 13 35#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 338 16 34#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (3))))
               (#"escape_string_mem.jc" 662 37 50# "expl:Integer cast"
               (Int8.of_int (120)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 339 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))))
            /\
            ((((=) (shift (select (old !char_xP_char_xM_dst_13) dst) (1))
              end_0) ->
              (((#"escape_string_mem.jc" 645 10 42# "expl:Assigns clause"
                (not_assigns voidP_end_0_14_alloc_table
                voidP_end_0_14_alloc_table (old !charP_charM_end_0_14)
                !charP_charM_end_0_14
                (pset_singleton (select (old !char_xP_char_xM_dst_13) dst))))
               /\
               (#"escape_string_mem.jc" 645 10 42# "expl:Assigns clause"
               (not_assigns char_xP_dst_13_alloc_table
               char_xP_dst_13_alloc_table (old !char_xP_char_xM_dst_13)
               !char_xP_char_xM_dst_13 (pset_singleton dst))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 330 16 38#
              "expl:Ensures clause"
              (#"/home/maria/ded-rep/escape_string_mem.c" 330 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 330 16 38#
               "expl:Ensures clause"
               ((=) (select !char_xP_char_xM_dst_13 dst)
               (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 330 16 38#
              "expl:Ensures clause"
              ((#"/home/maria/ded-rep/escape_string_mem.c" 331 16 35#
               "expl:Ensures clause"
               (Int8.(=)
               (select !charP_charM_end_0_14
               (shift (select !char_xP_char_xM_dst_13 dst) (Int.(-_) (4))))
               (#"escape_string_mem.jc" 650 35 47# "expl:Integer cast"
               (Int8.of_int (92)))))
              /\
              (#"/home/maria/ded-rep/escape_string_mem.c" 332 16 32#
              "expl:Ensures clause"
              ((=) ((<>) (Enum__bool.to_int result) (0)) true)))))))))
            /\
            (((same_block (select (old !char_xP_char_xM_dst_13) dst) end_0)
             /\
             ((>=)
             (sub_pointer (select (old !char_xP_char_xM_dst_13) dst) end_0)
             (0))) ->
             (((#"escape_string_mem.jc" 639 10 21# "expl:Assigns clause"
               (not_assigns voidP_end_0_14_alloc_table
               voidP_end_0_14_alloc_table (old !charP_charM_end_0_14)
               !charP_charM_end_0_14 pset_empty))
              /\
              (#"escape_string_mem.jc" 639 10 21# "expl:Assigns clause"
              (not_assigns char_xP_dst_13_alloc_table
              char_xP_dst_13_alloc_table (old !char_xP_char_xM_dst_13)
              !char_xP_char_xM_dst_13 (pset_singleton dst))))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 325 16 38#
             "expl:Ensures clause"
             (#"/home/maria/ded-rep/escape_string_mem.c" 325 16 38#
             "expl:Ensures clause"
             ((#"/home/maria/ded-rep/escape_string_mem.c" 325 16 38#
              "expl:Ensures clause"
              ((=) (select !char_xP_char_xM_dst_13 dst)
              (shift (select (old !char_xP_char_xM_dst_13) dst) (4))))
             /\
             (#"/home/maria/ded-rep/escape_string_mem.c" 326 16 32#
             "expl:Ensures clause"
             ((=) ((<>) (Enum__bool.to_int result) (0)) true))))))))))) }
  
end
